{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3","program":"/Users/egeatesalp/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ndarray","--edition=2018","/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=6e00886882ec7afe","-C","extra-filename=-6e00886882ec7afe","--out-dir","/Users/egeatesalp/Desktop/rust_algorithms_workspace/target/rls/debug/deps","-L","dependency=/Users/egeatesalp/Desktop/rust_algorithms_workspace/target/rls/debug/deps","--extern","matrixmultiply=/Users/egeatesalp/Desktop/rust_algorithms_workspace/target/rls/debug/deps/libmatrixmultiply-0bbd9d21cadca9d3.rmeta","--extern","num_complex=/Users/egeatesalp/Desktop/rust_algorithms_workspace/target/rls/debug/deps/libnum_complex-c64600f2669a566e.rmeta","--extern","num_integer=/Users/egeatesalp/Desktop/rust_algorithms_workspace/target/rls/debug/deps/libnum_integer-d8a97e7c11439cdc.rmeta","--extern","num_traits=/Users/egeatesalp/Desktop/rust_algorithms_workspace/target/rls/debug/deps/libnum_traits-156d5b43afd900fc.rmeta","--extern","rawpointer=/Users/egeatesalp/Desktop/rust_algorithms_workspace/target/rls/debug/deps/librawpointer-97510d428352b88f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/egeatesalp/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/egeatesalp/Desktop/rust_algorithms_workspace/target/rls/debug/deps/libndarray-6e00886882ec7afe.rmeta"},"prelude":{"crate_id":{"name":"ndarray","disambiguator":[2785135585821964065,6249519476035949366]},"crate_root":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src","external_crates":[{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7439535968655576646,17420488833649705410]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1949116827220114676,2065912148165510692]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6424123809251651324,10791243255933316672]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11089070161906179638,2253832597208660558]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3666879193032761931,4629784602926728112]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17557414160303111626,7572947572632644954]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[915848953387719454,11341216537588130533]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4285064400235759547,17176111531075018758]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6997063163517280748,14486342634155193831]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2053070849310045891,9457326657766539472]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16492367081693084488,12081229032515817188]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14000704685499991975,15439018228330051001]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16882152814081891816,2081400005890767566]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[17412809486977561704,10774188040798205111]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[10299009701328497764,8719717191227013711]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[13564088873543153286,4566579444635585591]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","num":17,"id":{"name":"rawpointer","disambiguator":[7604819886714752081,7087225577116684789]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/geomspace.rs","num":18,"id":{"name":"num_traits","disambiguator":[6275349170684622337,5014299765723292290]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/mod.rs","num":19,"id":{"name":"num_integer","disambiguator":[8334607472462188523,13393138614256234486]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","num":20,"id":{"name":"num_complex","disambiguator":[16201837933498473860,12961330456316426561]}},{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","num":21,"id":{"name":"matrixmultiply","disambiguator":[16696151279915355514,8552283209218609356]}}],"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":356,"byte_end":57169,"line_start":8,"line_end":1634,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6382,"byte_end":6383,"line_start":143,"line_end":143,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Dim","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6960},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6412,"byte_end":6416,"line_start":144,"line_end":144,"column_start":28,"column_end":32},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6961},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6412,"byte_end":6416,"line_start":144,"line_end":144,"column_start":28,"column_end":32},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6944},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6418,"byte_end":6433,"line_start":144,"line_end":144,"column_start":34,"column_end":49},"alias_span":null,"name":"AxisDescription","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3253},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6435,"byte_end":6444,"line_start":144,"line_end":144,"column_start":51,"column_end":60},"alias_span":null,"name":"Dimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3061},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6446,"byte_end":6459,"line_start":144,"line_end":144,"column_start":62,"column_end":75},"alias_span":null,"name":"IntoDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3643},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6461,"byte_end":6471,"line_start":144,"line_end":144,"column_start":77,"column_end":87},"alias_span":null,"name":"RemoveAxis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3612},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6501,"byte_end":6507,"line_start":145,"line_end":145,"column_start":28,"column_end":34},"alias_span":null,"name":"DimAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3019},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6509,"byte_end":6515,"line_start":145,"line_end":145,"column_start":36,"column_end":42},"alias_span":null,"name":"DimMax","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7424},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6545,"byte_end":6554,"line_start":147,"line_end":147,"column_start":27,"column_end":36},"alias_span":null,"name":"IxDynImpl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3565},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6582,"byte_end":6589,"line_start":148,"line_end":148,"column_start":27,"column_end":34},"alias_span":null,"name":"NdIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5479},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6614,"byte_end":6623,"line_start":149,"line_end":149,"column_start":24,"column_end":33},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5475},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6625,"byte_end":6635,"line_start":149,"line_end":149,"column_start":35,"column_end":45},"alias_span":null,"name":"ShapeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1074},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6663,"byte_end":6670,"line_start":150,"line_end":150,"column_start":26,"column_end":33},"alias_span":null,"name":"indices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6672,"byte_end":6682,"line_start":150,"line_end":150,"column_start":35,"column_end":45},"alias_span":null,"name":"indices_of","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5912},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6707,"byte_end":6712,"line_start":151,"line_end":151,"column_start":23,"column_end":28},"alias_span":null,"name":"Order","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2477},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6742,"byte_end":6755,"line_start":153,"line_end":153,"column_start":5,"column_end":18},"alias_span":null,"name":"MultiSliceArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5994},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6757,"byte_end":6764,"line_start":153,"line_end":153,"column_start":20,"column_end":27},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5995},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6757,"byte_end":6764,"line_start":153,"line_end":153,"column_start":20,"column_end":27},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5975},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6766,"byte_end":6771,"line_start":153,"line_end":153,"column_start":29,"column_end":34},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2394},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6773,"byte_end":6781,"line_start":153,"line_end":153,"column_start":36,"column_end":44},"alias_span":null,"name":"SliceArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6145},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6783,"byte_end":6792,"line_start":153,"line_end":153,"column_start":46,"column_end":55},"alias_span":null,"name":"SliceInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6001},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6794,"byte_end":6807,"line_start":153,"line_end":153,"column_start":57,"column_end":70},"alias_span":null,"name":"SliceInfoElem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2468},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6809,"byte_end":6821,"line_start":153,"line_end":153,"column_start":72,"column_end":84},"alias_span":null,"name":"SliceNextDim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":6958,"byte_end":6965,"line_start":159,"line_end":159,"column_start":29,"column_end":36},"alias_span":null,"name":"AsArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2087},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7021,"byte_end":7028,"line_start":161,"line_end":161,"column_start":31,"column_end":38},"alias_span":null,"name":"NdFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2084},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7060,"byte_end":7072,"line_start":162,"line_end":162,"column_start":31,"column_end":43},"alias_span":null,"name":"LinalgScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2545},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7140,"byte_end":7151,"line_start":165,"line_end":165,"column_start":27,"column_end":38},"alias_span":null,"name":"concatenate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2542},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7153,"byte_end":7158,"line_start":165,"line_end":165,"column_start":40,"column_end":45},"alias_span":null,"name":"stack","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2550},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7160,"byte_end":7174,"line_start":165,"line_end":165,"column_start":47,"column_end":61},"alias_span":null,"name":"stack_new_axis","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5905},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7204,"byte_end":7212,"line_start":167,"line_end":167,"column_start":27,"column_end":35},"alias_span":null,"name":"MathCell","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5226},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7241,"byte_end":7252,"line_start":168,"line_end":168,"column_start":28,"column_end":39},"alias_span":null,"name":"IndexLonger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5928},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7285,"byte_end":7290,"line_start":169,"line_end":169,"column_start":32,"column_end":37},"alias_span":null,"name":"Shape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2251},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7292,"byte_end":7304,"line_start":169,"line_end":169,"column_start":39,"column_end":51},"alias_span":null,"name":"ShapeBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2285},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7306,"byte_end":7314,"line_start":169,"line_end":169,"column_start":53,"column_end":61},"alias_span":null,"name":"ShapeArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5946},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7316,"byte_end":7327,"line_start":169,"line_end":169,"column_start":63,"column_end":74},"alias_span":null,"name":"StrideShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7558,"byte_end":7568,"line_start":183,"line_end":183,"column_start":33,"column_end":43},"alias_span":null,"name":"AssignElem","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7627,"byte_end":7628,"line_start":187,"line_end":187,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Ix1, ArrayView0, Array5, ArrayView3, Array2, Ix5, Ix4, ArcArray2, ArrayViewMut6, ArrayViewMut3, ArrayViewMut0, ArrayView5, ArrayView2, Ix0, ArrayD, Array4, Array1, ArcArray1, ArrayViewMut5, ArrayViewMut2, ArrayViewD, ArrayView4, ArrayView1, Array6, Array3, Array0, ArrayViewMutD, ArrayViewMut4, IxDyn, ArrayViewMut1, ArrayView6, Ix6, Ix3, Ix2","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7665,"byte_end":7669,"line_start":190,"line_end":190,"column_start":5,"column_end":9},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7671,"byte_end":7678,"line_start":190,"line_end":190,"column_start":11,"column_end":18},"alias_span":null,"name":"DataMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":792},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7680,"byte_end":7689,"line_start":190,"line_end":190,"column_start":20,"column_end":29},"alias_span":null,"name":"DataOwned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":796},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7691,"byte_end":7701,"line_start":190,"line_end":190,"column_start":31,"column_end":41},"alias_span":null,"name":"DataShared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7703,"byte_end":7710,"line_start":190,"line_end":190,"column_start":43,"column_end":50},"alias_span":null,"name":"RawData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":683},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7712,"byte_end":7724,"line_start":190,"line_end":190,"column_start":52,"column_end":64},"alias_span":null,"name":"RawDataClone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":679},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7726,"byte_end":7736,"line_start":190,"line_end":190,"column_start":66,"column_end":76},"alias_span":null,"name":"RawDataMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7742,"byte_end":7754,"line_start":191,"line_end":191,"column_start":5,"column_end":17},"alias_span":null,"name":"RawDataSubst","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7811,"byte_end":7812,"line_start":195,"line_end":195,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"aview_mut1, aview2, arr2, arr0, aview0, aview1, arr1","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1272},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":7840,"byte_end":7844,"line_start":196,"line_end":196,"column_start":27,"column_end":31},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6933},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211190,"byte_end":211194,"line_start":9,"line_end":9,"column_start":27,"column_end":31},"alias_span":null,"name":"Axes","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":5505},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211221,"byte_end":211228,"line_start":10,"line_end":10,"column_start":26,"column_end":33},"alias_span":null,"name":"Indices","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":5498},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211230,"byte_end":211241,"line_start":10,"line_end":10,"column_start":35,"column_end":46},"alias_span":null,"name":"IndicesIter","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1922},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211276,"byte_end":211290,"line_start":12,"line_end":12,"column_start":5,"column_end":19},"alias_span":null,"name":"AxisChunksIter","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1939},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211292,"byte_end":211309,"line_start":12,"line_end":12,"column_start":21,"column_end":38},"alias_span":null,"name":"AxisChunksIterMut","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":5732},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211311,"byte_end":211319,"line_start":12,"line_end":12,"column_start":40,"column_end":48},"alias_span":null,"name":"AxisIter","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1858},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211321,"byte_end":211332,"line_start":12,"line_end":12,"column_start":50,"column_end":61},"alias_span":null,"name":"AxisIterMut","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1156},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211334,"byte_end":211345,"line_start":12,"line_end":12,"column_start":63,"column_end":74},"alias_span":null,"name":"ExactChunks","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1176},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211347,"byte_end":211362,"line_start":12,"line_end":12,"column_start":76,"column_end":91},"alias_span":null,"name":"ExactChunksIter","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211368,"byte_end":211386,"line_start":13,"line_end":13,"column_start":5,"column_end":23},"alias_span":null,"name":"ExactChunksIterMut","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211388,"byte_end":211402,"line_start":13,"line_end":13,"column_start":25,"column_end":39},"alias_span":null,"name":"ExactChunksMut","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":5699},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211404,"byte_end":211415,"line_start":13,"line_end":13,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexedIter","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":5700},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211404,"byte_end":211415,"line_start":13,"line_end":13,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexedIter","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1620},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211417,"byte_end":211431,"line_start":13,"line_end":13,"column_start":54,"column_end":68},"alias_span":null,"name":"IndexedIterMut","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1621},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211417,"byte_end":211431,"line_start":13,"line_end":13,"column_start":54,"column_end":68},"alias_span":null,"name":"IndexedIterMut","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1593},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211433,"byte_end":211437,"line_start":13,"line_end":13,"column_start":70,"column_end":74},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1604},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211439,"byte_end":211446,"line_start":13,"line_end":13,"column_start":76,"column_end":83},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1353},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211448,"byte_end":211453,"line_start":13,"line_end":13,"column_start":85,"column_end":90},"alias_span":null,"name":"Lanes","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1764},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211459,"byte_end":211468,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"alias_span":null,"name":"LanesIter","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1785},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211470,"byte_end":211482,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"alias_span":null,"name":"LanesIterMut","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1373},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211484,"byte_end":211492,"line_start":14,"line_end":14,"column_start":30,"column_end":38},"alias_span":null,"name":"LanesMut","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":1407},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211494,"byte_end":211501,"line_start":14,"line_end":14,"column_start":40,"column_end":47},"alias_span":null,"name":"Windows","value":"","parent":{"krate":0,"index":1272}},{"kind":"Use","ref_id":{"krate":0,"index":6933},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/mod.rs","byte_start":341961,"byte_end":341965,"line_start":15,"line_end":15,"column_start":22,"column_end":26},"alias_span":null,"name":"Axes","value":"","parent":{"krate":0,"index":2859}},{"kind":"Use","ref_id":{"krate":0,"index":7424},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/mod.rs","byte_start":342177,"byte_end":342186,"line_start":21,"line_end":21,"column_start":29,"column_end":38},"alias_span":null,"name":"IxDynImpl","value":"","parent":{"krate":0,"index":2859}},{"kind":"Use","ref_id":{"krate":0,"index":3565},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/mod.rs","byte_start":342211,"byte_end":342218,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"alias_span":null,"name":"NdIndex","value":"","parent":{"krate":0,"index":2859}},{"kind":"Use","ref_id":{"krate":0,"index":6917},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8183,"byte_end":8192,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"alias_span":null,"name":"FoldWhile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2579},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8194,"byte_end":8208,"line_start":222,"line_end":222,"column_start":33,"column_end":47},"alias_span":null,"name":"IntoNdProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2590},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8210,"byte_end":8220,"line_start":222,"line_end":222,"column_start":49,"column_end":59},"alias_span":null,"name":"NdProducer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6345},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8222,"byte_end":8225,"line_start":222,"line_end":222,"column_start":61,"column_end":64},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5899},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8252,"byte_end":8258,"line_start":224,"line_end":224,"column_start":24,"column_end":30},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4062},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456990,"byte_end":456998,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"alias_span":null,"name":"ArcArray","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":4065},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457000,"byte_end":457005,"line_start":22,"line_end":22,"column_start":15,"column_end":20},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":4055},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457007,"byte_end":457016,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"alias_span":null,"name":"ArrayBase","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":4072},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457018,"byte_end":457027,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"alias_span":null,"name":"ArrayView","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":4076},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457029,"byte_end":457041,"line_start":22,"line_end":22,"column_start":44,"column_end":56},"alias_span":null,"name":"ArrayViewMut","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":4068},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457043,"byte_end":457051,"line_start":22,"line_end":22,"column_start":58,"column_end":66},"alias_span":null,"name":"CowArray","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":4080},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457053,"byte_end":457065,"line_start":22,"line_end":22,"column_start":68,"column_end":80},"alias_span":null,"name":"RawArrayView","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":4083},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457067,"byte_end":457082,"line_start":22,"line_end":22,"column_start":82,"column_end":97},"alias_span":null,"name":"RawArrayViewMut","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":6960},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457122,"byte_end":457126,"line_start":26,"line_end":26,"column_start":17,"column_end":21},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":6961},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457122,"byte_end":457126,"line_start":26,"line_end":26,"column_start":17,"column_end":21},"alias_span":null,"name":"Axis","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":7269},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457128,"byte_end":457131,"line_start":26,"line_end":26,"column_start":23,"column_end":26},"alias_span":null,"name":"Dim","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":3107},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457128,"byte_end":457131,"line_start":26,"line_end":26,"column_start":23,"column_end":26},"alias_span":null,"name":"Dim","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":3253},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457133,"byte_end":457142,"line_start":26,"line_end":26,"column_start":28,"column_end":37},"alias_span":null,"name":"Dimension","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457180,"byte_end":457186,"line_start":29,"line_end":29,"column_start":17,"column_end":23},"alias_span":null,"name":"Array0","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457188,"byte_end":457194,"line_start":29,"line_end":29,"column_start":25,"column_end":31},"alias_span":null,"name":"Array1","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457196,"byte_end":457202,"line_start":29,"line_end":29,"column_start":33,"column_end":39},"alias_span":null,"name":"Array2","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":197},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457204,"byte_end":457210,"line_start":29,"line_end":29,"column_start":41,"column_end":47},"alias_span":null,"name":"Array3","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":199},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457212,"byte_end":457218,"line_start":29,"line_end":29,"column_start":49,"column_end":55},"alias_span":null,"name":"Array4","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457220,"byte_end":457226,"line_start":29,"line_end":29,"column_start":57,"column_end":63},"alias_span":null,"name":"Array5","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":203},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457228,"byte_end":457234,"line_start":29,"line_end":29,"column_start":65,"column_end":71},"alias_span":null,"name":"Array6","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457236,"byte_end":457242,"line_start":29,"line_end":29,"column_start":73,"column_end":79},"alias_span":null,"name":"ArrayD","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457285,"byte_end":457295,"line_start":33,"line_end":33,"column_start":5,"column_end":15},"alias_span":null,"name":"ArrayView0","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":210},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457297,"byte_end":457307,"line_start":33,"line_end":33,"column_start":17,"column_end":27},"alias_span":null,"name":"ArrayView1","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457309,"byte_end":457319,"line_start":33,"line_end":33,"column_start":29,"column_end":39},"alias_span":null,"name":"ArrayView2","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":216},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457321,"byte_end":457331,"line_start":33,"line_end":33,"column_start":41,"column_end":51},"alias_span":null,"name":"ArrayView3","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":219},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457333,"byte_end":457343,"line_start":33,"line_end":33,"column_start":53,"column_end":63},"alias_span":null,"name":"ArrayView4","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457345,"byte_end":457355,"line_start":33,"line_end":33,"column_start":65,"column_end":75},"alias_span":null,"name":"ArrayView5","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457357,"byte_end":457367,"line_start":33,"line_end":33,"column_start":77,"column_end":87},"alias_span":null,"name":"ArrayView6","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":228},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457369,"byte_end":457379,"line_start":33,"line_end":33,"column_start":89,"column_end":99},"alias_span":null,"name":"ArrayViewD","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457424,"byte_end":457437,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"alias_span":null,"name":"ArrayViewMut0","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457439,"byte_end":457452,"line_start":38,"line_end":38,"column_start":20,"column_end":33},"alias_span":null,"name":"ArrayViewMut1","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457454,"byte_end":457467,"line_start":38,"line_end":38,"column_start":35,"column_end":48},"alias_span":null,"name":"ArrayViewMut2","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457469,"byte_end":457482,"line_start":38,"line_end":38,"column_start":50,"column_end":63},"alias_span":null,"name":"ArrayViewMut3","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457484,"byte_end":457497,"line_start":38,"line_end":38,"column_start":65,"column_end":78},"alias_span":null,"name":"ArrayViewMut4","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457499,"byte_end":457512,"line_start":38,"line_end":38,"column_start":80,"column_end":93},"alias_span":null,"name":"ArrayViewMut5","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457518,"byte_end":457531,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"alias_span":null,"name":"ArrayViewMut6","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457533,"byte_end":457546,"line_start":39,"line_end":39,"column_start":20,"column_end":33},"alias_span":null,"name":"ArrayViewMutD","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":176},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457586,"byte_end":457589,"line_start":43,"line_end":43,"column_start":17,"column_end":20},"alias_span":null,"name":"Ix0","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457586,"byte_end":457589,"line_start":43,"line_end":43,"column_start":17,"column_end":20},"alias_span":null,"name":"Ix0","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457591,"byte_end":457594,"line_start":43,"line_end":43,"column_start":22,"column_end":25},"alias_span":null,"name":"Ix1","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457591,"byte_end":457594,"line_start":43,"line_end":43,"column_start":22,"column_end":25},"alias_span":null,"name":"Ix1","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457596,"byte_end":457599,"line_start":43,"line_end":43,"column_start":27,"column_end":30},"alias_span":null,"name":"Ix2","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457596,"byte_end":457599,"line_start":43,"line_end":43,"column_start":27,"column_end":30},"alias_span":null,"name":"Ix2","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457601,"byte_end":457604,"line_start":43,"line_end":43,"column_start":32,"column_end":35},"alias_span":null,"name":"Ix3","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457601,"byte_end":457604,"line_start":43,"line_end":43,"column_start":32,"column_end":35},"alias_span":null,"name":"Ix3","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457606,"byte_end":457609,"line_start":43,"line_end":43,"column_start":37,"column_end":40},"alias_span":null,"name":"Ix4","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457606,"byte_end":457609,"line_start":43,"line_end":43,"column_start":37,"column_end":40},"alias_span":null,"name":"Ix4","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457611,"byte_end":457614,"line_start":43,"line_end":43,"column_start":42,"column_end":45},"alias_span":null,"name":"Ix5","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457611,"byte_end":457614,"line_start":43,"line_end":43,"column_start":42,"column_end":45},"alias_span":null,"name":"Ix5","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457616,"byte_end":457619,"line_start":43,"line_end":43,"column_start":47,"column_end":50},"alias_span":null,"name":"Ix6","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457616,"byte_end":457619,"line_start":43,"line_end":43,"column_start":47,"column_end":50},"alias_span":null,"name":"Ix6","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457621,"byte_end":457626,"line_start":43,"line_end":43,"column_start":52,"column_end":57},"alias_span":null,"name":"IxDyn","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457621,"byte_end":457626,"line_start":43,"line_end":43,"column_start":52,"column_end":57},"alias_span":null,"name":"IxDyn","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":934},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457664,"byte_end":457668,"line_start":46,"line_end":46,"column_start":17,"column_end":21},"alias_span":null,"name":"arr0","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":936},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457670,"byte_end":457674,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"alias_span":null,"name":"arr1","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":957},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457676,"byte_end":457680,"line_start":46,"line_end":46,"column_start":29,"column_end":33},"alias_span":null,"name":"arr2","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":940},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457682,"byte_end":457688,"line_start":46,"line_end":46,"column_start":35,"column_end":41},"alias_span":null,"name":"aview0","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":942},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457690,"byte_end":457696,"line_start":46,"line_end":46,"column_start":43,"column_end":49},"alias_span":null,"name":"aview1","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":944},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457698,"byte_end":457704,"line_start":46,"line_end":46,"column_start":51,"column_end":57},"alias_span":null,"name":"aview2","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":947},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457706,"byte_end":457716,"line_start":46,"line_end":46,"column_start":59,"column_end":69},"alias_span":null,"name":"aview_mut1","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457736,"byte_end":457741,"line_start":48,"line_end":48,"column_start":17,"column_end":22},"alias_span":null,"name":"array","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":2567},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457743,"byte_end":457747,"line_start":48,"line_end":48,"column_start":24,"column_end":28},"alias_span":null,"name":"azip","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":2476},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457749,"byte_end":457750,"line_start":48,"line_end":48,"column_start":30,"column_end":31},"alias_span":null,"name":"s","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":2251},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457787,"byte_end":457799,"line_start":51,"line_end":51,"column_start":16,"column_end":28},"alias_span":null,"name":"ShapeBuilder","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":5994},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457835,"byte_end":457842,"line_start":54,"line_end":54,"column_start":16,"column_end":23},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":5995},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457835,"byte_end":457842,"line_start":54,"line_end":54,"column_start":16,"column_end":23},"alias_span":null,"name":"NewAxis","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":558},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457878,"byte_end":457885,"line_start":57,"line_end":57,"column_start":16,"column_end":23},"alias_span":null,"name":"AsArray","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":2087},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":457945,"byte_end":457952,"line_start":61,"line_end":61,"column_start":16,"column_end":23},"alias_span":null,"name":"NdFloat","value":"","parent":{"krate":0,"index":3873}},{"kind":"Use","ref_id":{"krate":0,"index":5357},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52514,"byte_end":52523,"line_start":1449,"line_end":1449,"column_start":20,"column_end":29},"alias_span":null,"name":"OwnedRepr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4964},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/mod.rs","byte_start":633834,"byte_end":633849,"line_start":11,"line_end":11,"column_start":28,"column_end":43},"alias_span":null,"name":"general_mat_mul","value":"","parent":{"krate":0,"index":4878}},{"kind":"Use","ref_id":{"krate":0,"index":4969},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/mod.rs","byte_start":633878,"byte_end":633897,"line_start":12,"line_end":12,"column_start":28,"column_end":47},"alias_span":null,"name":"general_mat_vec_mul","value":"","parent":{"krate":0,"index":4878}},{"kind":"Use","ref_id":{"krate":0,"index":4915},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/mod.rs","byte_start":633926,"byte_end":633929,"line_start":13,"line_end":13,"column_start":28,"column_end":31},"alias_span":null,"name":"Dot","value":"","parent":{"krate":0,"index":4878}},{"kind":"Use","ref_id":{"krate":0,"index":4996},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":56821,"byte_end":56834,"line_start":1617,"line_end":1617,"column_start":26,"column_end":39},"alias_span":null,"name":"ScalarOperand","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":356,"byte_end":57169,"line_start":8,"line_end":1634,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":140},{"krate":0,"index":145},{"krate":0,"index":259},{"krate":0,"index":269},{"krate":0,"index":298},{"krate":0,"index":387},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":630},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":1010},{"krate":0,"index":1022},{"krate":0,"index":1045},{"krate":0,"index":1124},{"krate":0,"index":2010},{"krate":0,"index":2038},{"krate":0,"index":2090},{"krate":0,"index":2114},{"krate":0,"index":2138},{"krate":0,"index":2188},{"krate":0,"index":2204},{"krate":0,"index":2213},{"krate":0,"index":2230},{"krate":0,"index":2296},{"krate":0,"index":2504},{"krate":0,"index":2524},{"krate":0,"index":2557},{"krate":0,"index":2565},{"krate":0,"index":2859},{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3816},{"krate":0,"index":3819},{"krate":0,"index":3822},{"krate":0,"index":3825},{"krate":0,"index":3828},{"krate":0,"index":3873},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4062},{"krate":0,"index":4065},{"krate":0,"index":4068},{"krate":0,"index":4072},{"krate":0,"index":4076},{"krate":0,"index":4080},{"krate":0,"index":4083},{"krate":0,"index":4086},{"krate":0,"index":7754},{"krate":0,"index":7758},{"krate":0,"index":4089},{"krate":0,"index":7761},{"krate":0,"index":7764},{"krate":0,"index":7766},{"krate":0,"index":4092},{"krate":0,"index":7769},{"krate":0,"index":7772},{"krate":0,"index":7774},{"krate":0,"index":4095},{"krate":0,"index":4098},{"krate":0,"index":4107},{"krate":0,"index":4112},{"krate":0,"index":4125},{"krate":0,"index":4140},{"krate":0,"index":4270},{"krate":0,"index":4675},{"krate":0,"index":4766},{"krate":0,"index":4779},{"krate":0,"index":4792},{"krate":0,"index":4808},{"krate":0,"index":4820},{"krate":0,"index":4827},{"krate":0,"index":4878},{"krate":0,"index":4986},{"krate":0,"index":5076},{"krate":0,"index":5079},{"krate":0,"index":5274},{"krate":0,"index":5329},{"krate":0,"index":5347}],"decl_id":null,"docs":" The `ndarray` crate provides an *n*-dimensional container for general elements\n and for numerics.","sig":null,"attributes":[{"value":"crate_name = \"ndarray\"","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":356,"byte_end":382,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"allow(clippy :: many_single_char_names, clippy :: deref_addrof, clippy ::\n        unreadable_literal, clippy :: manual_map, clippy ::\n        while_let_on_iterator, clippy :: from_iter_instead_of_collect,)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":527,"byte_end":805,"line_start":11,"line_end":18,"column_start":1,"column_end":3}},{"value":"/ The `ndarray` crate provides an *n*-dimensional container for general elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":970,"byte_end":1052,"line_start":24,"line_end":24,"column_start":1,"column_end":83}},{"value":"/ and for numerics.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1053,"byte_end":1074,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1075,"byte_end":1078,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ In *n*-dimensional we include for example 1-dimensional rows or columns,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1079,"byte_end":1155,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ 2-dimensional matrices, and higher dimensional arrays. If the array has *n*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1156,"byte_end":1235,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ dimensions, then an element in the array is accessed by using that many indices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1236,"byte_end":1320,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/ Each dimension is also called an *axis*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1321,"byte_end":1365,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1366,"byte_end":1369,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ - **[`ArrayBase`](struct.ArrayBase.html)**:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1370,"byte_end":1417,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/   The *n*-dimensional array type itself.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1418,"byte_end":1466,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/   It is used to implement both the owned arrays and the views; see its docs","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1467,"byte_end":1546,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/   for an overview of all array features.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1547,"byte_end":1595,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/ - The main specific array type is **[`Array`](type.Array.html)**, which owns","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1596,"byte_end":1676,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ its elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1677,"byte_end":1694,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1695,"byte_end":1698,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Highlights","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1699,"byte_end":1716,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1717,"byte_end":1720,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ - Generic *n*-dimensional array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1721,"byte_end":1756,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ - Slicing, also with arbitrary step size, and negative indices to mean","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1757,"byte_end":1831,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/   elements from the end of the axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1832,"byte_end":1872,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/ - Views and subviews of arrays; iterators that yield subviews.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1873,"byte_end":1939,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ - Higher order operations and arithmetic are performant","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":1940,"byte_end":1999,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ - Array views can be used to slice and mutate any `[T]` data using","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2000,"byte_end":2070,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/   `ArrayView::from` and `ArrayViewMut::from`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2071,"byte_end":2120,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/ - [`Zip`](struct.Zip.html) for lock step function application across two or more arrays or other","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2121,"byte_end":2221,"line_start":48,"line_end":48,"column_start":1,"column_end":101}},{"value":"/   item producers ([`NdProducer`](trait.NdProducer.html) trait).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2222,"byte_end":2289,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2290,"byte_end":2293,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## Crate Status","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2294,"byte_end":2313,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2314,"byte_end":2317,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - Still iterating on and evolving the crate","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2318,"byte_end":2365,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/   + The crate is continuously developing, and breaking changes are expected","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2366,"byte_end":2445,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/     during evolution from version to version. We adopt the newest stable","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2446,"byte_end":2522,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/     rust features if we need them.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2523,"byte_end":2561,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/   + Note that functions/methods/traits/etc. hidden from the docs are not","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2562,"byte_end":2638,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/     considered part of the public API, so changes to them are not","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2639,"byte_end":2708,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/     considered breaking changes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2709,"byte_end":2745,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ - Performance:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2746,"byte_end":2764,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/   + Prefer higher order methods and arithmetic operations on arrays first,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2765,"byte_end":2843,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/     then iteration, and as a last priority using indexed algorithms.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2844,"byte_end":2916,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/   + The higher order functions like [`.map()`](ArrayBase::map),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2917,"byte_end":2984,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/     [`.map_inplace()`](ArrayBase::map_inplace), [`.zip_mut_with()`](ArrayBase::zip_mut_with),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":2985,"byte_end":3082,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/     [`Zip`] and [`azip!()`](azip) are the most efficient ways","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3083,"byte_end":3148,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/     to perform single traversal and lock step traversal respectively.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3149,"byte_end":3222,"line_start":66,"line_end":66,"column_start":1,"column_end":74}},{"value":"/   + Performance of an operation depends on the memory layout of the array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3223,"byte_end":3300,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/     or array view. Especially if it's a binary operation, which","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3301,"byte_end":3368,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/     needs matching memory layout to be efficient (with some exceptions).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3369,"byte_end":3445,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/   + Efficient floating point matrix multiplication even for very large","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3446,"byte_end":3520,"line_start":70,"line_end":70,"column_start":1,"column_end":75}},{"value":"/     matrices; can optionally use BLAS to improve it further.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3521,"byte_end":3585,"line_start":71,"line_end":71,"column_start":1,"column_end":65}},{"value":"/ - **Requires Rust 1.49 or later**","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3586,"byte_end":3623,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3624,"byte_end":3627,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3628,"byte_end":3654,"line_start":74,"line_end":74,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3655,"byte_end":3658,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The following crate feature flags are available. They are configured in your","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3659,"byte_end":3739,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ `Cargo.toml`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3740,"byte_end":3757,"line_start":77,"line_end":77,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3758,"byte_end":3761,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ - `std`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3762,"byte_end":3773,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/   - Rust standard library (enabled by default)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3774,"byte_end":3824,"line_start":80,"line_end":80,"column_start":1,"column_end":51}},{"value":"/   - This crate can be used without the standard library by disabling the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3825,"byte_end":3901,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/     default `std` feature. To do so, use `default-features = false` in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3902,"byte_end":3976,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/     your `Cargo.toml`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":3977,"byte_end":4003,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/   - The `geomspace` `linspace` `logspace` `range` `std` `var` `var_axis`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4004,"byte_end":4080,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/     and `std_axis` methods are only available when `std` is enabled.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4081,"byte_end":4153,"line_start":85,"line_end":85,"column_start":1,"column_end":73}},{"value":"/ - `serde`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4154,"byte_end":4167,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/   - Enables serialization support for serde 1.x","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4168,"byte_end":4219,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/ - `rayon`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4220,"byte_end":4233,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/   - Enables parallel iterators, parallelized methods, the [`parallel`] module and [`par_azip!`].","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4234,"byte_end":4334,"line_start":89,"line_end":89,"column_start":1,"column_end":101}},{"value":"/   - Implies std","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4335,"byte_end":4354,"line_start":90,"line_end":90,"column_start":1,"column_end":20}},{"value":"/ - `approx`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4355,"byte_end":4369,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/   - Enables implementations of traits from the [`approx`] crate.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4370,"byte_end":4438,"line_start":92,"line_end":92,"column_start":1,"column_end":69}},{"value":"/ - `blas`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4439,"byte_end":4451,"line_start":93,"line_end":93,"column_start":1,"column_end":13}},{"value":"/   - Enable transparent BLAS support for matrix multiplication.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4452,"byte_end":4518,"line_start":94,"line_end":94,"column_start":1,"column_end":67}},{"value":"/     Uses ``blas-src`` for pluggable backend, which needs to be configured","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4519,"byte_end":4596,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/     separately (see the README).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4597,"byte_end":4633,"line_start":96,"line_end":96,"column_start":1,"column_end":37}},{"value":"/ - `matrixmultiply-threading`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4634,"byte_end":4666,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/   - Enable the ``threading`` feature in the matrixmultiply package","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4667,"byte_end":4737,"line_start":98,"line_end":98,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4738,"byte_end":4741,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ## Documentation","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4742,"byte_end":4762,"line_start":100,"line_end":100,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4763,"byte_end":4766,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ * The docs for [`ArrayBase`](struct.ArrayBase.html) provide an overview of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4767,"byte_end":4845,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/   the *n*-dimensional array type. Other good pages to look at are the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4846,"byte_end":4919,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/   documentation for the [`s![]`](macro.s.html) and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4920,"byte_end":4974,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/   [`azip!()`](macro.azip.html) macros.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":4975,"byte_end":5017,"line_start":105,"line_end":105,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5018,"byte_end":5021,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ * If you have experience with NumPy, you may also be interested in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5022,"byte_end":5092,"line_start":107,"line_end":107,"column_start":1,"column_end":71}},{"value":"/   [`ndarray_for_numpy_users`](doc/ndarray_for_numpy_users/index.html).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5093,"byte_end":5167,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5168,"byte_end":5171,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## The ndarray ecosystem","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5172,"byte_end":5200,"line_start":110,"line_end":110,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5201,"byte_end":5204,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ `ndarray` provides a lot of functionality, but it's not a one-stop solution.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5205,"byte_end":5285,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5286,"byte_end":5289,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ `ndarray` includes matrix multiplication and other binary/unary operations out of the box.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5290,"byte_end":5384,"line_start":114,"line_end":114,"column_start":1,"column_end":95}},{"value":"/ More advanced linear algebra routines (e.g. SVD decomposition or eigenvalue computation)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5385,"byte_end":5477,"line_start":115,"line_end":115,"column_start":1,"column_end":93}},{"value":"/ can be found in [`ndarray-linalg`](https://crates.io/crates/ndarray-linalg).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5478,"byte_end":5558,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5559,"byte_end":5562,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The same holds for statistics: `ndarray` provides some basic functionalities (e.g. `mean`)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5563,"byte_end":5657,"line_start":118,"line_end":118,"column_start":1,"column_end":95}},{"value":"/ but more advanced routines can be found in [`ndarray-stats`](https://crates.io/crates/ndarray-stats).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5658,"byte_end":5763,"line_start":119,"line_end":119,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5764,"byte_end":5767,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ If you are looking to generate random arrays instead, check out [`ndarray-rand`](https://crates.io/crates/ndarray-rand).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5768,"byte_end":5892,"line_start":121,"line_end":121,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5893,"byte_end":5896,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ For conversion between `ndarray`, [`nalgebra`](https://crates.io/crates/nalgebra) and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5897,"byte_end":5986,"line_start":123,"line_end":123,"column_start":1,"column_end":90}},{"value":"/ [`image`](https://crates.io/crates/image) check out [`nshare`](https://crates.io/crates/nshare).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":5987,"byte_end":6087,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":141},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/private.rs","byte_start":59607,"byte_end":59620,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::private::PrivateMarker","value":"","parent":null,"children":[],"decl_id":null,"docs":" If this type is pub but not publicly reachable, third parties\n can't name it and can't implement traits using it.\n","sig":null,"attributes":[{"value":"/ If this type is pub but not publicly reachable, third parties","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/private.rs","byte_start":59475,"byte_end":59540,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ can't name it and can't implement traits using it.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/private.rs","byte_start":59541,"byte_end":59595,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60288,"byte_end":60291,"line_start":10,"line_end":10,"column_start":8,"column_end":11},"name":"Ix0","qualname":"::aliases::Ix0","value":"pub fn Ix0() -> Ix0","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional index","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60202,"byte_end":60237,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60238,"byte_end":60262,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60263,"byte_end":60280,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60407,"byte_end":60410,"line_start":16,"line_end":16,"column_start":8,"column_end":11},"name":"Ix1","qualname":"::aliases::Ix1","value":"pub fn Ix1(Ix) -> Ix1","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional index","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60322,"byte_end":60356,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60357,"byte_end":60381,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60382,"byte_end":60399,"line_start":15,"line_end":15,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60534,"byte_end":60537,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"Ix2","qualname":"::aliases::Ix2","value":"pub fn Ix2(Ix, Ix) -> Ix2","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a two-dimensional index","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60449,"byte_end":60483,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60484,"byte_end":60508,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60509,"byte_end":60526,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":171},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60675,"byte_end":60678,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"Ix3","qualname":"::aliases::Ix3","value":"pub fn Ix3(Ix, Ix, Ix) -> Ix3","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a three-dimensional index","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60588,"byte_end":60624,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60625,"byte_end":60649,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60650,"byte_end":60667,"line_start":27,"line_end":27,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":172},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60827,"byte_end":60830,"line_start":34,"line_end":34,"column_start":8,"column_end":11},"name":"Ix4","qualname":"::aliases::Ix4","value":"pub fn Ix4(Ix, Ix, Ix, Ix) -> Ix4","parent":null,"children":[],"decl_id":null,"docs":" Create a four-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a four-dimensional index","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60741,"byte_end":60776,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60777,"byte_end":60801,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60802,"byte_end":60819,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":173},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60991,"byte_end":60994,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"Ix5","qualname":"::aliases::Ix5","value":"pub fn Ix5(Ix, Ix, Ix, Ix, Ix) -> Ix5","parent":null,"children":[],"decl_id":null,"docs":" Create a five-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a five-dimensional index","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60905,"byte_end":60940,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60941,"byte_end":60965,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":60966,"byte_end":60983,"line_start":39,"line_end":39,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61166,"byte_end":61169,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"Ix6","qualname":"::aliases::Ix6","value":"pub fn Ix6(Ix, Ix, Ix, Ix, Ix, Ix) -> Ix6","parent":null,"children":[],"decl_id":null,"docs":" Create a six-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a six-dimensional index","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61081,"byte_end":61115,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61116,"byte_end":61140,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61141,"byte_end":61158,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61358,"byte_end":61363,"line_start":53,"line_end":53,"column_start":8,"column_end":13},"name":"IxDyn","qualname":"::aliases::IxDyn","value":"pub fn IxDyn(&[Ix]) -> IxDyn","parent":null,"children":[],"decl_id":null,"docs":" Create a dynamic-dimensional index\n","sig":null,"attributes":[{"value":"/ Create a dynamic-dimensional index","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61269,"byte_end":61307,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61308,"byte_end":61332,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61333,"byte_end":61350,"line_start":52,"line_end":52,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":176},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61432,"byte_end":61435,"line_start":58,"line_end":58,"column_start":10,"column_end":13},"name":"Ix0","qualname":"::aliases::Ix0","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensionial\n","sig":null,"attributes":[{"value":"/ zero-dimensionial","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61401,"byte_end":61422,"line_start":57,"line_end":57,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":178},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61481,"byte_end":61484,"line_start":60,"line_end":60,"column_start":10,"column_end":13},"name":"Ix1","qualname":"::aliases::Ix1","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional\n","sig":null,"attributes":[{"value":"/ one-dimensional","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61452,"byte_end":61471,"line_start":59,"line_end":59,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":180},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61530,"byte_end":61533,"line_start":62,"line_end":62,"column_start":10,"column_end":13},"name":"Ix2","qualname":"::aliases::Ix2","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional\n","sig":null,"attributes":[{"value":"/ two-dimensional","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61501,"byte_end":61520,"line_start":61,"line_end":61,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":182},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61581,"byte_end":61584,"line_start":64,"line_end":64,"column_start":10,"column_end":13},"name":"Ix3","qualname":"::aliases::Ix3","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional\n","sig":null,"attributes":[{"value":"/ three-dimensional","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61550,"byte_end":61571,"line_start":63,"line_end":63,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":184},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61631,"byte_end":61634,"line_start":66,"line_end":66,"column_start":10,"column_end":13},"name":"Ix4","qualname":"::aliases::Ix4","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional\n","sig":null,"attributes":[{"value":"/ four-dimensional","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61601,"byte_end":61621,"line_start":65,"line_end":65,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":186},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61681,"byte_end":61684,"line_start":68,"line_end":68,"column_start":10,"column_end":13},"name":"Ix5","qualname":"::aliases::Ix5","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional\n","sig":null,"attributes":[{"value":"/ five-dimensional","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61651,"byte_end":61671,"line_start":67,"line_end":67,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":188},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61730,"byte_end":61733,"line_start":70,"line_end":70,"column_start":10,"column_end":13},"name":"Ix6","qualname":"::aliases::Ix6","value":"Dim<[Ix; ]>","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional\n","sig":null,"attributes":[{"value":"/ six-dimensional","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61701,"byte_end":61720,"line_start":69,"line_end":69,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":190},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62802,"byte_end":62807,"line_start":99,"line_end":99,"column_start":10,"column_end":15},"name":"IxDyn","qualname":"::aliases::IxDyn","value":"Dim<IxDynImpl>","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional","sig":null,"attributes":[{"value":"/ dynamic-dimensional","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61750,"byte_end":61773,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61774,"byte_end":61777,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ You can use the `IxDyn` function to create a dimension for an array with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61778,"byte_end":61854,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/ dynamic number of dimensions.  (`Vec<usize>` and `&[usize]` also implement","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61855,"byte_end":61933,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ `IntoDimension` to produce `IxDyn`).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61934,"byte_end":61974,"line_start":75,"line_end":75,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61975,"byte_end":61978,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61979,"byte_end":61986,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use ndarray::ArrayD;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":61987,"byte_end":62011,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/ use ndarray::IxDyn;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62012,"byte_end":62035,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62036,"byte_end":62039,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Create a 5 × 6 × 3 × 4 array using the dynamic dimension type","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62040,"byte_end":62111,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ let mut a = ArrayD::<f64>::zeros(IxDyn(&[5, 6, 3, 4]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62112,"byte_end":62171,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"/ // Create a 1 × 3 × 4 array using the dynamic dimension type","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62172,"byte_end":62238,"line_start":83,"line_end":83,"column_start":1,"column_end":65}},{"value":"/ let mut b = ArrayD::<f64>::zeros(IxDyn(&[1, 3, 4]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62239,"byte_end":62295,"line_start":84,"line_end":84,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62296,"byte_end":62299,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // We can use broadcasting to add arrays of compatible shapes together:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62300,"byte_end":62375,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ a += &b;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62376,"byte_end":62388,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62389,"byte_end":62392,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // We can index into a, b using fixed size arrays:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62393,"byte_end":62447,"line_start":89,"line_end":89,"column_start":1,"column_end":55}},{"value":"/ a[[0, 0, 0, 0]] = 0.;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62448,"byte_end":62473,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/ b[[0, 2, 3]] = a[[0, 0, 2, 3]];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62474,"byte_end":62509,"line_start":91,"line_end":91,"column_start":1,"column_end":36}},{"value":"/ // Note: indexing will panic at runtime if the number of indices given does","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62510,"byte_end":62589,"line_start":92,"line_end":92,"column_start":1,"column_end":80}},{"value":"/ // not match the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62590,"byte_end":62617,"line_start":93,"line_end":93,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62618,"byte_end":62621,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // We can keep them in the same vector because both the arrays have","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62622,"byte_end":62693,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/ // the same type `Array<f64, IxDyn>` a.k.a `ArrayD<f64>`:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62694,"byte_end":62755,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/ let arrays = vec![a, b];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62756,"byte_end":62784,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62785,"byte_end":62792,"line_start":98,"line_end":98,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":191},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62863,"byte_end":62869,"line_start":102,"line_end":102,"column_start":10,"column_end":16},"name":"Array0","qualname":"::aliases::Array0","value":"Array<A, Ix0>","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional array\n","sig":null,"attributes":[{"value":"/ zero-dimensional array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62827,"byte_end":62853,"line_start":101,"line_end":101,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":193},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62925,"byte_end":62931,"line_start":104,"line_end":104,"column_start":10,"column_end":16},"name":"Array1","qualname":"::aliases::Array1","value":"Array<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional array\n","sig":null,"attributes":[{"value":"/ one-dimensional array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62890,"byte_end":62915,"line_start":103,"line_end":103,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":195},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62987,"byte_end":62993,"line_start":106,"line_end":106,"column_start":10,"column_end":16},"name":"Array2","qualname":"::aliases::Array2","value":"Array<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional array\n","sig":null,"attributes":[{"value":"/ two-dimensional array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":62952,"byte_end":62977,"line_start":105,"line_end":105,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":197},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63051,"byte_end":63057,"line_start":108,"line_end":108,"column_start":10,"column_end":16},"name":"Array3","qualname":"::aliases::Array3","value":"Array<A, Ix3>","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional array\n","sig":null,"attributes":[{"value":"/ three-dimensional array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63014,"byte_end":63041,"line_start":107,"line_end":107,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":199},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63114,"byte_end":63120,"line_start":110,"line_end":110,"column_start":10,"column_end":16},"name":"Array4","qualname":"::aliases::Array4","value":"Array<A, Ix4>","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional array\n","sig":null,"attributes":[{"value":"/ four-dimensional array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63078,"byte_end":63104,"line_start":109,"line_end":109,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":201},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63177,"byte_end":63183,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"Array5","qualname":"::aliases::Array5","value":"Array<A, Ix5>","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional array\n","sig":null,"attributes":[{"value":"/ five-dimensional array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63141,"byte_end":63167,"line_start":111,"line_end":111,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":203},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63239,"byte_end":63245,"line_start":114,"line_end":114,"column_start":10,"column_end":16},"name":"Array6","qualname":"::aliases::Array6","value":"Array<A, Ix6>","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional array\n","sig":null,"attributes":[{"value":"/ six-dimensional array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63204,"byte_end":63229,"line_start":113,"line_end":113,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":205},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63305,"byte_end":63311,"line_start":116,"line_end":116,"column_start":10,"column_end":16},"name":"ArrayD","qualname":"::aliases::ArrayD","value":"Array<A, IxDyn>","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional array\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63266,"byte_end":63295,"line_start":115,"line_end":115,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":207},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63376,"byte_end":63386,"line_start":119,"line_end":119,"column_start":10,"column_end":20},"name":"ArrayView0","qualname":"::aliases::ArrayView0","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional array view\n","sig":null,"attributes":[{"value":"/ zero-dimensional array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63335,"byte_end":63366,"line_start":118,"line_end":118,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":210},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63459,"byte_end":63469,"line_start":121,"line_end":121,"column_start":10,"column_end":20},"name":"ArrayView1","qualname":"::aliases::ArrayView1","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional array view\n","sig":null,"attributes":[{"value":"/ one-dimensional array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63419,"byte_end":63449,"line_start":120,"line_end":120,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":213},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63542,"byte_end":63552,"line_start":123,"line_end":123,"column_start":10,"column_end":20},"name":"ArrayView2","qualname":"::aliases::ArrayView2","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional array view\n","sig":null,"attributes":[{"value":"/ two-dimensional array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63502,"byte_end":63532,"line_start":122,"line_end":122,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":216},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63627,"byte_end":63637,"line_start":125,"line_end":125,"column_start":10,"column_end":20},"name":"ArrayView3","qualname":"::aliases::ArrayView3","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional array view\n","sig":null,"attributes":[{"value":"/ three-dimensional array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63585,"byte_end":63617,"line_start":124,"line_end":124,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":219},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63711,"byte_end":63721,"line_start":127,"line_end":127,"column_start":10,"column_end":20},"name":"ArrayView4","qualname":"::aliases::ArrayView4","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional array view\n","sig":null,"attributes":[{"value":"/ four-dimensional array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63670,"byte_end":63701,"line_start":126,"line_end":126,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":222},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63795,"byte_end":63805,"line_start":129,"line_end":129,"column_start":10,"column_end":20},"name":"ArrayView5","qualname":"::aliases::ArrayView5","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional array view\n","sig":null,"attributes":[{"value":"/ five-dimensional array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63754,"byte_end":63785,"line_start":128,"line_end":128,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63878,"byte_end":63888,"line_start":131,"line_end":131,"column_start":10,"column_end":20},"name":"ArrayView6","qualname":"::aliases::ArrayView6","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional array view\n","sig":null,"attributes":[{"value":"/ six-dimensional array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63838,"byte_end":63868,"line_start":130,"line_end":130,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":228},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63965,"byte_end":63975,"line_start":133,"line_end":133,"column_start":10,"column_end":20},"name":"ArrayViewD","qualname":"::aliases::ArrayViewD","value":"ArrayView","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional array view\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":63921,"byte_end":63955,"line_start":132,"line_end":132,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":231},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64063,"byte_end":64076,"line_start":136,"line_end":136,"column_start":10,"column_end":23},"name":"ArrayViewMut0","qualname":"::aliases::ArrayViewMut0","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" zero-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ zero-dimensional read-write array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64011,"byte_end":64053,"line_start":135,"line_end":135,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":234},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64163,"byte_end":64176,"line_start":138,"line_end":138,"column_start":10,"column_end":23},"name":"ArrayViewMut1","qualname":"::aliases::ArrayViewMut1","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ one-dimensional read-write array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64112,"byte_end":64153,"line_start":137,"line_end":137,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":237},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64263,"byte_end":64276,"line_start":140,"line_end":140,"column_start":10,"column_end":23},"name":"ArrayViewMut2","qualname":"::aliases::ArrayViewMut2","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ two-dimensional read-write array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64212,"byte_end":64253,"line_start":139,"line_end":139,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":240},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64365,"byte_end":64378,"line_start":142,"line_end":142,"column_start":10,"column_end":23},"name":"ArrayViewMut3","qualname":"::aliases::ArrayViewMut3","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" three-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ three-dimensional read-write array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64312,"byte_end":64355,"line_start":141,"line_end":141,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":243},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64466,"byte_end":64479,"line_start":144,"line_end":144,"column_start":10,"column_end":23},"name":"ArrayViewMut4","qualname":"::aliases::ArrayViewMut4","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" four-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ four-dimensional read-write array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64414,"byte_end":64456,"line_start":143,"line_end":143,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":246},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64567,"byte_end":64580,"line_start":146,"line_end":146,"column_start":10,"column_end":23},"name":"ArrayViewMut5","qualname":"::aliases::ArrayViewMut5","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" five-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ five-dimensional read-write array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64515,"byte_end":64557,"line_start":145,"line_end":145,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":249},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64667,"byte_end":64680,"line_start":148,"line_end":148,"column_start":10,"column_end":23},"name":"ArrayViewMut6","qualname":"::aliases::ArrayViewMut6","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" six-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ six-dimensional read-write array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64616,"byte_end":64657,"line_start":147,"line_end":147,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":252},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64771,"byte_end":64784,"line_start":150,"line_end":150,"column_start":10,"column_end":23},"name":"ArrayViewMutD","qualname":"::aliases::ArrayViewMutD","value":"ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" dynamic-dimensional read-write array view\n","sig":null,"attributes":[{"value":"/ dynamic-dimensional read-write array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64716,"byte_end":64761,"line_start":149,"line_end":149,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":255},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64875,"byte_end":64884,"line_start":153,"line_end":153,"column_start":10,"column_end":19},"name":"ArcArray1","qualname":"::aliases::ArcArray1","value":"ArcArray<A, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" one-dimensional shared ownership array\n","sig":null,"attributes":[{"value":"/ one-dimensional shared ownership array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64823,"byte_end":64865,"line_start":152,"line_end":152,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":257},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64960,"byte_end":64969,"line_start":155,"line_end":155,"column_start":10,"column_end":19},"name":"ArcArray2","qualname":"::aliases::ArcArray2","value":"ArcArray<A, Ix2>","parent":null,"children":[],"decl_id":null,"docs":" two-dimensional shared ownership array\n","sig":null,"attributes":[{"value":"/ two-dimensional shared ownership array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/aliases.rs","byte_start":64908,"byte_end":64950,"line_start":154,"line_end":154,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":279},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/argument_traits.rs","byte_start":68851,"byte_end":68861,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"AssignElem","qualname":"::argument_traits::AssignElem","value":"AssignElem<T>","parent":null,"children":[{"krate":0,"index":281}],"decl_id":null,"docs":" A producer element that can be assigned to once\n","sig":null,"attributes":[{"value":"/ A producer element that can be assigned to once","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/argument_traits.rs","byte_start":68789,"byte_end":68840,"line_start":6,"line_end":6,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/argument_traits.rs","byte_start":68944,"byte_end":68955,"line_start":9,"line_end":9,"column_start":8,"column_end":19},"name":"assign_elem","qualname":"::argument_traits::AssignElem::assign_elem","value":"pub fn assign_elem(Self, T)","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Assign the value `input` to the element that self represents.\n","sig":null,"attributes":[{"value":"/ Assign the value `input` to the element that self represents.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/argument_traits.rs","byte_start":68871,"byte_end":68936,"line_start":8,"line_end":8,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":558},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102825,"byte_end":102832,"line_start":400,"line_end":400,"column_start":11,"column_end":18},"name":"AsArray","qualname":"::arraytraits::AsArray","value":"AsArray<'a, A: 'a, D = Ix1>: Into<ArrayView>","parent":null,"children":[],"decl_id":null,"docs":" Argument conversion into an array view","sig":null,"attributes":[{"value":"/ Argument conversion into an array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102343,"byte_end":102385,"line_start":379,"line_end":379,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102386,"byte_end":102389,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ The trait is parameterized over `A`, the element type, and `D`, the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102390,"byte_end":102461,"line_start":381,"line_end":381,"column_start":1,"column_end":72}},{"value":"/ dimensionality of the array. `D` defaults to one-dimensional.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102462,"byte_end":102527,"line_start":382,"line_end":382,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102528,"byte_end":102531,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ Use `.into()` to do the conversion.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102532,"byte_end":102571,"line_start":384,"line_end":384,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102572,"byte_end":102575,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102576,"byte_end":102583,"line_start":386,"line_end":386,"column_start":1,"column_end":8}},{"value":"/ use ndarray::AsArray;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102584,"byte_end":102609,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102610,"byte_end":102613,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ fn sum<'a, V: AsArray<'a, f64>>(data: V) -> f64 {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102614,"byte_end":102667,"line_start":389,"line_end":389,"column_start":1,"column_end":54}},{"value":"/     let array_view = data.into();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102668,"byte_end":102705,"line_start":390,"line_end":390,"column_start":1,"column_end":38}},{"value":"/     array_view.sum()","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102706,"byte_end":102730,"line_start":391,"line_end":391,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102731,"byte_end":102736,"line_start":392,"line_end":392,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102737,"byte_end":102740,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102741,"byte_end":102756,"line_start":394,"line_end":394,"column_start":1,"column_end":16}},{"value":"/     sum(&[1., 2., 3.]),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102757,"byte_end":102784,"line_start":395,"line_end":395,"column_start":1,"column_end":28}},{"value":"/     6.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102785,"byte_end":102795,"line_start":396,"line_end":396,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102796,"byte_end":102802,"line_start":397,"line_end":397,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102803,"byte_end":102806,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102807,"byte_end":102814,"line_start":399,"line_end":399,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5357},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":104400,"byte_end":104409,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"OwnedRepr","qualname":"::data_repr::OwnedRepr","value":"OwnedRepr {  }","parent":null,"children":[{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5361}],"decl_id":null,"docs":" Array's representation.","sig":null,"attributes":[{"value":"/ Array's representation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":104071,"byte_end":104098,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":104099,"byte_end":104102,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type alias","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":104103,"byte_end":104159,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ [`Array`](type.Array.html) for the array type!*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":104160,"byte_end":104211,"line_start":14,"line_end":14,"column_start":1,"column_end":52}},{"value":"repr(C)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":104378,"byte_end":104388,"line_start":20,"line_end":20,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":675},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109982,"byte_end":109989,"line_start":30,"line_end":30,"column_start":18,"column_end":25},"name":"RawData","qualname":"::data_traits::RawData","value":"RawData: Sized","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":5365}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109534,"byte_end":109565,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109566,"byte_end":109569,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For an array that meets the invariants of the `ArrayBase` type. This trait","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109570,"byte_end":109648,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ does not imply any ownership or lifetime; pointers to elements in the array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109649,"byte_end":109728,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ may not be safe to dereference.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109729,"byte_end":109764,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109765,"byte_end":109768,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ***Note:*** `RawData` is not an extension interface at this point.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109769,"byte_end":109839,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ Traits in Rust can serve many different roles. This trait is public because","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109840,"byte_end":109919,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ it is used as a bound on public methods.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109920,"byte_end":109964,"line_start":29,"line_end":29,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":676},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110040,"byte_end":110044,"line_start":32,"line_end":32,"column_start":10,"column_end":14},"name":"Elem","qualname":"::data_traits::RawData::Elem","value":"type Elem;","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":" The array element type.\n","sig":null,"attributes":[{"value":"/ The array element type.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110003,"byte_end":110030,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110168,"byte_end":110179,"line_start":37,"line_end":37,"column_start":8,"column_end":19},"name":"_data_slice","qualname":"::data_traits::RawData::_data_slice","value":"pub fn _data_slice(&Self) -> Option<&[Self::Elem]>","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Unused\", since = \"0.15.2\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110116,"byte_end":110160,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110240,"byte_end":110260,"line_start":40,"line_end":40,"column_start":8,"column_end":28},"name":"_is_pointer_inbounds","qualname":"::data_traits::RawData::_is_pointer_inbounds","value":"pub fn _is_pointer_inbounds(&Self, *const Self::Elem) -> bool","parent":{"krate":0,"index":675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":679},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110465,"byte_end":110475,"line_start":50,"line_end":50,"column_start":18,"column_end":28},"name":"RawDataMut","qualname":"::data_traits::RawDataMut","value":"RawDataMut: RawData","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":682}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110326,"byte_end":110357,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110358,"byte_end":110361,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ For an array with writable elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110362,"byte_end":110402,"line_start":47,"line_end":47,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110403,"byte_end":110406,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110407,"byte_end":110447,"line_start":49,"line_end":49,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110883,"byte_end":110900,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"try_ensure_unique","qualname":"::data_traits::RawDataMut::try_ensure_unique","value":"pub fn try_ensure_unique<D>(&mut ArrayBase<Self, D>) where Self: Sized,\nD: Dimension","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" If possible, ensures that the array has unique access to its data.","sig":null,"attributes":[{"value":"/ If possible, ensures that the array has unique access to its data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110491,"byte_end":110561,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110566,"byte_end":110569,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The implementer must ensure that if the input is contiguous, then the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110574,"byte_end":110647,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ output has the same strides as input.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110652,"byte_end":110693,"line_start":54,"line_end":54,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110698,"byte_end":110701,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Additionally, if `Self` provides safe mutable access to array elements,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110706,"byte_end":110781,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ then this method **must** panic or ensure that the data is unique.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110786,"byte_end":110856,"line_start":57,"line_end":57,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111207,"byte_end":111220,"line_start":69,"line_end":69,"column_start":8,"column_end":21},"name":"try_is_unique","qualname":"::data_traits::RawDataMut::try_is_unique","value":"pub fn try_is_unique(&mut Self) -> Option<bool>","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" If possible, returns whether the array has unique access to its data.","sig":null,"attributes":[{"value":"/ If possible, returns whether the array has unique access to its data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110990,"byte_end":111063,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111068,"byte_end":111071,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If `Self` provides safe mutable access to array elements, then it","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111076,"byte_end":111145,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ **must** return `Some(_)`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111150,"byte_end":111180,"line_start":67,"line_end":67,"column_start":5,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":683},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111398,"byte_end":111410,"line_start":77,"line_end":77,"column_start":18,"column_end":30},"name":"RawDataClone","qualname":"::data_traits::RawDataClone","value":"RawDataClone: RawData","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111252,"byte_end":111283,"line_start":72,"line_end":72,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111284,"byte_end":111287,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ An array representation that can be cloned.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111288,"byte_end":111335,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111336,"byte_end":111339,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111340,"byte_end":111380,"line_start":76,"line_end":76,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111524,"byte_end":111538,"line_start":80,"line_end":80,"column_start":15,"column_end":29},"name":"clone_with_ptr","qualname":"::data_traits::RawDataClone::clone_with_ptr","value":"pub unsafe fn clone_with_ptr(&Self, NonNull<Self::Elem>)\n-> (Self, NonNull<Self::Elem>)","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Unsafe because, `ptr` must point inside the current storage.\n","sig":null,"attributes":[{"value":"/ Unsafe because, `ptr` must point inside the current storage.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111445,"byte_end":111509,"line_start":79,"line_end":79,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111638,"byte_end":111657,"line_start":83,"line_end":83,"column_start":15,"column_end":34},"name":"clone_from_with_ptr","qualname":"::data_traits::RawDataClone::clone_from_with_ptr","value":"pub unsafe fn clone_from_with_ptr(&mut Self, &Self, NonNull<Self::Elem>)\n-> NonNull<Self::Elem>","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":686},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112027,"byte_end":112031,"line_start":99,"line_end":99,"column_start":18,"column_end":22},"name":"Data","qualname":"::data_traits::Data","value":"Data: RawData","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":689}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111861,"byte_end":111892,"line_start":94,"line_end":94,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111893,"byte_end":111896,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ For an array with elements that can be accessed with safe code.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111897,"byte_end":111964,"line_start":96,"line_end":96,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111965,"byte_end":111968,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `RawData`.***","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111969,"byte_end":112009,"line_start":98,"line_end":98,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112198,"byte_end":112208,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::data_traits::Data::into_owned","value":"pub fn into_owned<D>(ArrayBase<Self, D>)\n-> ArrayBase<OwnedRepr<Self::Elem>, D> where Self::Elem: Clone, D: Dimension","parent":{"krate":0,"index":686},"children":[],"decl_id":null,"docs":" Converts the array to a uniquely owned array, cloning elements if necessary.\n","sig":null,"attributes":[{"value":"/ Converts the array to a uniquely owned array, cloning elements if necessary.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112047,"byte_end":112127,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112151,"byte_end":112190,"line_start":102,"line_end":102,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112530,"byte_end":112539,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"to_shared","qualname":"::data_traits::Data::to_shared","value":"pub fn to_shared<D>(&ArrayBase<Self, D>)\n-> ArrayBase<OwnedArcRepr<Self::Elem>, D> where Self::Elem: Clone,\nD: Dimension","parent":{"krate":0,"index":686},"children":[],"decl_id":null,"docs":" Return a shared ownership (copy on write) array based on the existing one,\n cloning elements if necessary.\n","sig":null,"attributes":[{"value":"/ Return a shared ownership (copy on write) array based on the existing one,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112342,"byte_end":112420,"line_start":108,"line_end":108,"column_start":5,"column_end":83}},{"value":"/ cloning elements if necessary.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112425,"byte_end":112459,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112483,"byte_end":112522,"line_start":111,"line_end":111,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":691},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113203,"byte_end":113210,"line_start":134,"line_end":134,"column_start":18,"column_end":25},"name":"DataMut","qualname":"::data_traits::DataMut","value":"DataMut: Data + RawDataMut","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":694}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112753,"byte_end":112784,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112785,"byte_end":112788,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ For an array with writable elements that can be accessed with safe code.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112789,"byte_end":112865,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112866,"byte_end":112869,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112870,"byte_end":112907,"line_start":126,"line_end":126,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113334,"byte_end":113347,"line_start":138,"line_end":138,"column_start":8,"column_end":21},"name":"ensure_unique","qualname":"::data_traits::DataMut::ensure_unique","value":"pub fn ensure_unique<D>(&mut ArrayBase<Self, D>) where Self: Sized,\nD: Dimension","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" Ensures that the array has unique access to its data.\n","sig":null,"attributes":[{"value":"/ Ensures that the array has unique access to its data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113236,"byte_end":113293,"line_start":135,"line_end":135,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113317,"byte_end":113326,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113593,"byte_end":113602,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"is_unique","qualname":"::data_traits::DataMut::is_unique","value":"pub fn is_unique(&mut Self) -> bool","parent":{"krate":0,"index":691},"children":[],"decl_id":null,"docs":" Returns whether the array has unique access to its data.\n","sig":null,"attributes":[{"value":"/ Returns whether the array has unique access to its data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113492,"byte_end":113552,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113576,"byte_end":113585,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":792},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121327,"byte_end":121336,"line_start":452,"line_end":452,"column_start":18,"column_end":27},"name":"DataOwned","qualname":"::data_traits::DataOwned","value":"DataOwned: Data","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120639,"byte_end":120670,"line_start":440,"line_end":440,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120671,"byte_end":120674,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ A representation that is a unique or shared owner of its data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120675,"byte_end":120741,"line_start":442,"line_end":442,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120742,"byte_end":120745,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120746,"byte_end":120783,"line_start":444,"line_end":444,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":793},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121413,"byte_end":121424,"line_start":454,"line_end":454,"column_start":10,"column_end":21},"name":"MaybeUninit","qualname":"::data_traits::DataOwned::MaybeUninit","value":"type MaybeUninit: DataOwned<Elem = MaybeUninit<Self::Elem>>\n        + RawDataSubst<Self::Elem, Output=Self>;","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" Corresponding owned data with MaybeUninit elements\n","sig":null,"attributes":[{"value":"/ Corresponding owned data with MaybeUninit elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121349,"byte_end":121403,"line_start":453,"line_end":453,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121543,"byte_end":121546,"line_start":457,"line_end":457,"column_start":8,"column_end":11},"name":"new","qualname":"::data_traits::DataOwned::new","value":"pub fn new(Vec<Self::Elem>) -> Self","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121724,"byte_end":121735,"line_start":462,"line_end":462,"column_start":8,"column_end":19},"name":"into_shared","qualname":"::data_traits::DataOwned::into_shared","value":"pub fn into_shared(Self) -> OwnedArcRepr<Self::Elem>","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" Converts the data representation to a shared (copy on write)\n representation, without any copying.\n","sig":null,"attributes":[{"value":"/ Converts the data representation to a shared (copy on write)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121588,"byte_end":121652,"line_start":459,"line_end":459,"column_start":5,"column_end":69}},{"value":"/ representation, without any copying.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121657,"byte_end":121697,"line_start":460,"line_end":460,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":796},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121918,"byte_end":121928,"line_start":470,"line_end":470,"column_start":18,"column_end":28},"name":"DataShared","qualname":"::data_traits::DataShared","value":"DataShared: Clone + Data + RawDataClone","parent":null,"children":[],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121774,"byte_end":121805,"line_start":465,"line_end":465,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121806,"byte_end":121809,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ A representation that is a lightweight view.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121810,"byte_end":121858,"line_start":467,"line_end":467,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121859,"byte_end":121862,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ ***Internal trait, see `Data`.***","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121863,"byte_end":121900,"line_start":469,"line_end":469,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":837},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126044,"byte_end":126056,"line_start":615,"line_end":615,"column_start":11,"column_end":23},"name":"RawDataSubst","qualname":"::data_traits::RawDataSubst","value":"RawDataSubst<A>: RawData","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840}],"decl_id":null,"docs":" Array representation trait.","sig":null,"attributes":[{"value":"/ Array representation trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":125797,"byte_end":125828,"line_start":609,"line_end":609,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":125829,"byte_end":125832,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ The RawDataSubst trait maps the element type of array storage, while","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":125833,"byte_end":125905,"line_start":611,"line_end":611,"column_start":1,"column_end":73}},{"value":"/ keeping the same kind of storage.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":125906,"byte_end":125943,"line_start":612,"line_end":612,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":125944,"byte_end":125947,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ For example, `RawDataSubst<B>` can map the type `OwnedRepr<A>` to `OwnedRepr<B>`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":125948,"byte_end":126033,"line_start":614,"line_end":614,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":839},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126162,"byte_end":126168,"line_start":617,"line_end":617,"column_start":10,"column_end":16},"name":"Output","qualname":"::data_traits::RawDataSubst::Output","value":"type Output: RawData<Elem = A>;","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":" The resulting array storage of the same kind but substituted element type\n","sig":null,"attributes":[{"value":"/ The resulting array storage of the same kind but substituted element type","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126075,"byte_end":126152,"line_start":616,"line_end":616,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126412,"byte_end":126422,"line_start":625,"line_end":625,"column_start":15,"column_end":25},"name":"data_subst","qualname":"::data_traits::RawDataSubst::data_subst","value":"pub unsafe fn data_subst(Self) -> Self::Output","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":" Unsafely translate the data representation from one element\n representation to another.","sig":null,"attributes":[{"value":"/ Unsafely translate the data representation from one element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126194,"byte_end":126257,"line_start":619,"line_end":619,"column_start":5,"column_end":68}},{"value":"/ representation to another.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126262,"byte_end":126292,"line_start":620,"line_end":620,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126297,"byte_end":126300,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126305,"byte_end":126318,"line_start":622,"line_end":622,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126323,"byte_end":126326,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Caller must ensure the two types have the same representation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126331,"byte_end":126397,"line_start":624,"line_end":624,"column_start":5,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":934},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":129428,"byte_end":129432,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"arr0","qualname":"::free_functions::arr0","value":"pub fn arr0<A>(A) -> Array0<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional array with the element `x`.\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional array with the element `x`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":129363,"byte_end":129420,"line_start":52,"line_end":52,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":936},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":129591,"byte_end":129595,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"arr1","qualname":"::free_functions::arr1","value":"pub fn arr1<A: Clone>(&[A]) -> Array1<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `xs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":129524,"byte_end":129583,"line_start":57,"line_end":57,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":938},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":129734,"byte_end":129740,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"rcarr1","qualname":"::free_functions::rcarr1","value":"pub fn rcarr1<A: Clone>(&[A]) -> ArcArray1<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `xs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":129667,"byte_end":129726,"line_start":62,"line_end":62,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":940},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":129872,"byte_end":129878,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"aview0","qualname":"::free_functions::aview0","value":"pub fn aview0<A>(&A) -> ArrayView0<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a zero-dimensional array view borrowing `x`.\n","sig":null,"attributes":[{"value":"/ Create a zero-dimensional array view borrowing `x`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":129809,"byte_end":129864,"line_start":67,"line_end":67,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":942},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130271,"byte_end":130277,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"aview1","qualname":"::free_functions::aview1","value":"pub fn aview1<A>(&[A]) -> ArrayView1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array view with elements borrowing `xs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":129966,"byte_end":130035,"line_start":72,"line_end":72,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130036,"byte_end":130039,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130040,"byte_end":130047,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ use ndarray::aview1;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130048,"byte_end":130072,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130073,"byte_end":130076,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let data = [1.0; 1024];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130077,"byte_end":130104,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130105,"byte_end":130108,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // Create a 2D array view from borrowed data","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130109,"byte_end":130157,"line_start":79,"line_end":79,"column_start":1,"column_end":49}},{"value":"/ let a2d = aview1(&data).into_shape((32, 32)).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130158,"byte_end":130216,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130217,"byte_end":130220,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a2d.sum(), 1024.0);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130221,"byte_end":130255,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130256,"byte_end":130263,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":944},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130546,"byte_end":130552,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"aview2","qualname":"::free_functions::aview2","value":"pub fn aview2<A, V: FixedInitializer<Elem = A>>(&[V]) -> ArrayView2<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array view with elements borrowing `xs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130341,"byte_end":130410,"line_start":88,"line_end":88,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130411,"byte_end":130414,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`. (This","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130415,"byte_end":130494,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"/ can only occur when `V` is zero-sized.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":130495,"byte_end":130538,"line_start":91,"line_end":91,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":947},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131869,"byte_end":131879,"line_start":124,"line_end":124,"column_start":8,"column_end":18},"name":"aview_mut1","qualname":"::free_functions::aview_mut1","value":"pub fn aview_mut1<A>(&mut [A]) -> ArrayViewMut1<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional read-write array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a one-dimensional read-write array view with elements borrowing `xs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131435,"byte_end":131515,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131516,"byte_end":131519,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131520,"byte_end":131527,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{aview_mut1, s};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131528,"byte_end":131561,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"/ // Create an array view over some data, then slice it and modify it.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131562,"byte_end":131634,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/ let mut data = [0; 1024];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131635,"byte_end":131664,"line_start":117,"line_end":117,"column_start":1,"column_end":30}},{"value":"/ {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131665,"byte_end":131670,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/     let mut a = aview_mut1(&mut data).into_shape((32, 32)).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131671,"byte_end":131743,"line_start":119,"line_end":119,"column_start":1,"column_end":73}},{"value":"/     a.slice_mut(s![.., ..;3]).fill(5);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131744,"byte_end":131786,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131787,"byte_end":131792,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(&data[..10], [5, 0, 0, 5, 0, 0, 5, 0, 0, 5]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131793,"byte_end":131853,"line_start":122,"line_end":122,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131854,"byte_end":131861,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":949},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132742,"byte_end":132752,"line_start":151,"line_end":151,"column_start":8,"column_end":18},"name":"aview_mut2","qualname":"::free_functions::aview_mut2","value":"pub fn aview_mut2<A, V: FixedInitializer<Elem = A>>(&mut [V])\n-> ArrayViewMut2<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional read-write array view with elements borrowing `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional read-write array view with elements borrowing `xs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":131953,"byte_end":132033,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132034,"byte_end":132037,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`. (This","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132038,"byte_end":132117,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ can only occur when `V` is zero-sized.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132118,"byte_end":132161,"line_start":131,"line_end":131,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132162,"byte_end":132165,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132166,"byte_end":132179,"line_start":133,"line_end":133,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132180,"byte_end":132183,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132184,"byte_end":132191,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ use ndarray::aview_mut2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132192,"byte_end":132220,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132221,"byte_end":132224,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // The inner (nested) array must be of length 1 to 16, but the outer","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132225,"byte_end":132297,"line_start":138,"line_end":138,"column_start":1,"column_end":73}},{"value":"/ // can be of any length.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132298,"byte_end":132326,"line_start":139,"line_end":139,"column_start":1,"column_end":29}},{"value":"/ let mut data = [[0.; 2]; 128];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132327,"byte_end":132361,"line_start":140,"line_end":140,"column_start":1,"column_end":35}},{"value":"/ {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132362,"byte_end":132367,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/     // Make a 128 x 2 mut array view then turn it into 2 x 128","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132368,"byte_end":132434,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/     let mut a = aview_mut2(&mut data).reversed_axes();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132435,"byte_end":132493,"line_start":143,"line_end":143,"column_start":1,"column_end":59}},{"value":"/     // Make the first row ones and second row minus ones.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132494,"byte_end":132555,"line_start":144,"line_end":144,"column_start":1,"column_end":62}},{"value":"/     a.row_mut(0).fill(1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132556,"byte_end":132586,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/     a.row_mut(1).fill(-1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132587,"byte_end":132618,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132619,"byte_end":132624,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ // look at the start of the result","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132625,"byte_end":132663,"line_start":148,"line_end":148,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(&data[..3], [[1., -1.], [1., -1.], [1., -1.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132664,"byte_end":132726,"line_start":149,"line_end":149,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":132727,"byte_end":132734,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":952},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":133723,"byte_end":133739,"line_start":172,"line_end":172,"column_start":18,"column_end":34},"name":"FixedInitializer","qualname":"::free_functions::FixedInitializer","value":"FixedInitializer","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955}],"decl_id":null,"docs":" Fixed-size array used for array initialization\n","sig":null,"attributes":[{"value":"/ Fixed-size array used for array initialization","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":133655,"byte_end":133705,"line_start":171,"line_end":171,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":953},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":133751,"byte_end":133755,"line_start":173,"line_end":173,"column_start":10,"column_end":14},"name":"Elem","qualname":"::free_functions::FixedInitializer::Elem","value":"type Elem;","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":133764,"byte_end":133777,"line_start":174,"line_end":174,"column_start":8,"column_end":21},"name":"as_init_slice","qualname":"::free_functions::FixedInitializer::as_init_slice","value":"pub fn as_init_slice(&Self) -> &[Self::Elem]","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":133810,"byte_end":133813,"line_start":175,"line_end":175,"column_start":8,"column_end":11},"name":"len","qualname":"::free_functions::FixedInitializer::len","value":"pub fn len() -> usize","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":957},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134873,"byte_end":134877,"line_start":212,"line_end":212,"column_start":8,"column_end":12},"name":"arr2","qualname":"::free_functions::arr2","value":"pub fn arr2<A: Clone, V: FixedInitializer<Elem = A>>(&[V]) -> Array2<A> where\nV: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array with elements from `xs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134649,"byte_end":134708,"line_start":201,"line_end":201,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134709,"byte_end":134712,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134713,"byte_end":134720,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134721,"byte_end":134743,"line_start":204,"line_end":204,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134744,"byte_end":134747,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[1, 2, 3],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134748,"byte_end":134777,"line_start":206,"line_end":206,"column_start":1,"column_end":30}},{"value":"/                [4, 5, 6]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134778,"byte_end":134809,"line_start":207,"line_end":207,"column_start":1,"column_end":32}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134810,"byte_end":134822,"line_start":208,"line_end":208,"column_start":1,"column_end":13}},{"value":"/     a.shape() == [2, 3]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134823,"byte_end":134850,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134851,"byte_end":134857,"line_start":210,"line_end":210,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":134858,"byte_end":134865,"line_start":211,"line_end":211,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":969},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137390,"byte_end":137396,"line_start":282,"line_end":282,"column_start":8,"column_end":14},"name":"rcarr2","qualname":"::free_functions::rcarr2","value":"pub fn rcarr2<A: Clone, V: Clone + FixedInitializer<Elem = A>>(&[V])\n-> ArcArray2<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a two-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a two-dimensional array with elements from `xs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137319,"byte_end":137378,"line_start":280,"line_end":280,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137379,"byte_end":137382,"line_start":281,"line_end":281,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":972},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137909,"byte_end":137913,"line_start":303,"line_end":303,"column_start":8,"column_end":12},"name":"arr3","qualname":"::free_functions::arr3","value":"pub fn arr3<A: Clone, V: FixedInitializer<Elem = U>, U: FixedInitializer<Elem\n            = A>>(&[V]) -> Array3<A> where V: Clone, U: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional array with elements from `xs`.","sig":null,"attributes":[{"value":"/ Create a three-dimensional array with elements from `xs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137504,"byte_end":137565,"line_start":286,"line_end":286,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137566,"byte_end":137569,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the slices are not all of the same length.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137570,"byte_end":137630,"line_start":288,"line_end":288,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137631,"byte_end":137634,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137635,"byte_end":137642,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137643,"byte_end":137665,"line_start":291,"line_end":291,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137666,"byte_end":137669,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[1, 2],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137670,"byte_end":137697,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"/                 [3, 4]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137698,"byte_end":137726,"line_start":294,"line_end":294,"column_start":1,"column_end":29}},{"value":"/                [[5, 6],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137727,"byte_end":137754,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/                 [7, 8]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137755,"byte_end":137783,"line_start":296,"line_end":296,"column_start":1,"column_end":29}},{"value":"/                [[9, 0],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137784,"byte_end":137811,"line_start":297,"line_end":297,"column_start":1,"column_end":28}},{"value":"/                 [1, 2]]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137812,"byte_end":137842,"line_start":298,"line_end":298,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137843,"byte_end":137855,"line_start":299,"line_end":299,"column_start":1,"column_end":13}},{"value":"/     a.shape() == [3, 2, 2]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137856,"byte_end":137886,"line_start":300,"line_end":300,"column_start":1,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137887,"byte_end":137893,"line_start":301,"line_end":301,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":137894,"byte_end":137901,"line_start":302,"line_end":302,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":976},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":138154,"byte_end":138160,"line_start":314,"line_end":314,"column_start":8,"column_end":14},"name":"rcarr3","qualname":"::free_functions::rcarr3","value":"pub fn rcarr3<A: Clone, V: FixedInitializer<Elem = U>,\n              U: FixedInitializer<Elem = A>>(&[V]) -> ArcArray<A, Ix3> where\nV: Clone, U: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a three-dimensional array with elements from `xs`.\n","sig":null,"attributes":[{"value":"/ Create a three-dimensional array with elements from `xs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":138085,"byte_end":138146,"line_start":313,"line_end":313,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5475},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":138851,"byte_end":138861,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"ShapeError","qualname":"::error::ShapeError","value":"ShapeError {  }","parent":null,"children":[{"krate":0,"index":5476}],"decl_id":null,"docs":" An error related to array shape or layout.\n","sig":null,"attributes":[{"value":"/ An error related to array shape or layout.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":138776,"byte_end":138822,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139039,"byte_end":139043,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"kind","qualname":"<ShapeError>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the `ErrorKind` of this error.\n","sig":null,"attributes":[{"value":"/ Return the `ErrorKind` of this error.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":138972,"byte_end":139013,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139018,"byte_end":139027,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139136,"byte_end":139145,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ShapeError>::from_kind","value":"pub fn from_kind(ErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ShapeError`\n","sig":null,"attributes":[{"value":"/ Create a new `ShapeError`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139095,"byte_end":139124,"line_start":27,"line_end":27,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5480},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139468,"byte_end":139485,"line_start":41,"line_end":41,"column_start":5,"column_end":22},"name":"IncompatibleShape","qualname":"::error::ErrorKind::IncompatibleShape","value":"ErrorKind::IncompatibleShape","parent":{"krate":0,"index":5479},"children":[],"decl_id":null,"docs":" incompatible shape\n","sig":null,"attributes":[{"value":"/ incompatible shape","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139441,"byte_end":139463,"line_start":40,"line_end":40,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5483},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139530,"byte_end":139548,"line_start":43,"line_end":43,"column_start":5,"column_end":23},"name":"IncompatibleLayout","qualname":"::error::ErrorKind::IncompatibleLayout","value":"ErrorKind::IncompatibleLayout","parent":{"krate":0,"index":5479},"children":[],"decl_id":null,"docs":" incompatible memory layout\n","sig":null,"attributes":[{"value":"/ incompatible memory layout","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139495,"byte_end":139525,"line_start":42,"line_end":42,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5485},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139604,"byte_end":139616,"line_start":45,"line_end":45,"column_start":5,"column_end":17},"name":"RangeLimited","qualname":"::error::ErrorKind::RangeLimited","value":"ErrorKind::RangeLimited","parent":{"krate":0,"index":5479},"children":[],"decl_id":null,"docs":" the shape does not fit inside type limits\n","sig":null,"attributes":[{"value":"/ the shape does not fit inside type limits","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139554,"byte_end":139599,"line_start":44,"line_end":44,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5487},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139653,"byte_end":139664,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::error::ErrorKind::OutOfBounds","value":"ErrorKind::OutOfBounds","parent":{"krate":0,"index":5479},"children":[],"decl_id":null,"docs":" out of bounds indexing\n","sig":null,"attributes":[{"value":"/ out of bounds indexing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139622,"byte_end":139648,"line_start":46,"line_end":46,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5489},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139702,"byte_end":139713,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ErrorKind::Unsupported","value":"ErrorKind::Unsupported","parent":{"krate":0,"index":5479},"children":[],"decl_id":null,"docs":" aliasing array elements\n","sig":null,"attributes":[{"value":"/ aliasing array elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139670,"byte_end":139697,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5491},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139772,"byte_end":139780,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::error::ErrorKind::Overflow","value":"ErrorKind::Overflow","parent":{"krate":0,"index":5479},"children":[],"decl_id":null,"docs":" overflow when computing offset, length, etc.\n","sig":null,"attributes":[{"value":"/ overflow when computing offset, length, etc.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139719,"byte_end":139767,"line_start":50,"line_end":50,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5479},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139425,"byte_end":139434,"line_start":39,"line_end":39,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n    IncompatibleShape = ,\n    IncompatibleLayout,\n    RangeLimited,\n    OutOfBounds,\n    Unsupported,\n    Overflow,\n}","parent":null,"children":[{"krate":0,"index":5480},{"krate":0,"index":5483},{"krate":0,"index":5485},{"krate":0,"index":5487},{"krate":0,"index":5489},{"krate":0,"index":5491}],"decl_id":null,"docs":" Error code for an error related to array shape or layout.","sig":null,"attributes":[{"value":"/ Error code for an error related to array shape or layout.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139208,"byte_end":139269,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139270,"byte_end":139273,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This enumeration is not exhaustive. The representation of the enum","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139274,"byte_end":139344,"line_start":35,"line_end":35,"column_start":1,"column_end":71}},{"value":"/ is not guaranteed.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139345,"byte_end":139367,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139368,"byte_end":139385,"line_start":37,"line_end":37,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":5498},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":147873,"byte_end":147884,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"IndicesIter","qualname":"::indexes::IndicesIter","value":"IndicesIter {  }","parent":null,"children":[{"krate":0,"index":5500},{"krate":0,"index":5501}],"decl_id":null,"docs":" An iterator over the indexes of an array shape.","sig":null,"attributes":[{"value":"/ An iterator over the indexes of an array shape.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":147755,"byte_end":147806,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":147807,"byte_end":147810,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `D`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":147811,"byte_end":147844,"line_start":19,"line_end":19,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":148104,"byte_end":148111,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"indices","qualname":"::indexes::indices","value":"pub fn indices<E>(E) -> Indices<E::Dim> where E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Create an iterable of the array shape `shape`.","sig":null,"attributes":[{"value":"/ Create an iterable of the array shape `shape`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":147927,"byte_end":147977,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":147978,"byte_end":147981,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ *Note:* prefer higher order methods, arithmetic operations and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":147982,"byte_end":148048,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ non-indexed iteration before using indices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":148049,"byte_end":148096,"line_start":29,"line_end":29,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":148478,"byte_end":148488,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"indices_of","qualname":"::indexes::indices_of","value":"pub fn indices_of<S, D>(&ArrayBase<S, D>) -> Indices<D> where S: Data,\nD: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Return an iterable of the indices of the passed-in array.","sig":null,"attributes":[{"value":"/ Return an iterable of the indices of the passed-in array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":148290,"byte_end":148351,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":148352,"byte_end":148355,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ *Note:* prefer higher order methods, arithmetic operations and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":148356,"byte_end":148422,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/ non-indexed iteration before using indices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":148423,"byte_end":148470,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5505},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150815,"byte_end":150822,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"Indices","qualname":"::indexes::Indices","value":"Indices {  }","parent":null,"children":[{"krate":0,"index":5507},{"krate":0,"index":5508}],"decl_id":null,"docs":" Indices producer and iterable.","sig":null,"attributes":[{"value":"/ Indices producer and iterable.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150657,"byte_end":150691,"line_start":130,"line_end":130,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150692,"byte_end":150695,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ `Indices` is an `NdProducer` that produces the indices of an array shape.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150696,"byte_end":150773,"line_start":132,"line_end":132,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":5517},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150922,"byte_end":150930,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"IndexPtr","qualname":"::indexes::IndexPtr","value":"IndexPtr {  }","parent":null,"children":[{"krate":0,"index":5519}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":202597,"byte_end":202608,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"ExactChunks","qualname":"::iterators::chunks::ExactChunks","value":"ExactChunks {  }","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162}],"decl_id":null,"docs":" Exact chunks producer and iterable.","sig":null,"attributes":[{"value":"/ Exact chunks producer and iterable.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":202423,"byte_end":202462,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":202463,"byte_end":202466,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks()`](../struct.ArrayBase.html#method.exact_chunks) for more","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":202467,"byte_end":202549,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":202550,"byte_end":202566,"line_start":32,"line_end":32,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":204114,"byte_end":204129,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"ExactChunksIter","qualname":"::iterators::chunks::ExactChunksIter","value":"ExactChunksIter {  }","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182}],"decl_id":null,"docs":" Exact chunks iterator.","sig":null,"attributes":[{"value":"/ Exact chunks iterator.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":203972,"byte_end":203998,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":203999,"byte_end":204002,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks()`](../struct.ArrayBase.html#method.exact_chunks) for more","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":204003,"byte_end":204085,"line_start":91,"line_end":91,"column_start":1,"column_end":83}},{"value":"/ information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":204086,"byte_end":204102,"line_start":92,"line_end":92,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":204837,"byte_end":204851,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"ExactChunksMut","qualname":"::iterators::chunks::ExactChunksMut","value":"ExactChunksMut {  }","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189}],"decl_id":null,"docs":" Exact chunks producer and iterable.","sig":null,"attributes":[{"value":"/ Exact chunks producer and iterable.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":204655,"byte_end":204694,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":204695,"byte_end":204698,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks_mut()`](../struct.ArrayBase.html#method.exact_chunks_mut)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":204699,"byte_end":204780,"line_start":121,"line_end":121,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":204781,"byte_end":204806,"line_start":122,"line_end":122,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":207304,"byte_end":207322,"line_start":227,"line_end":227,"column_start":12,"column_end":30},"name":"ExactChunksIterMut","qualname":"::iterators::chunks::ExactChunksIterMut","value":"ExactChunksIterMut {  }","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"decl_id":null,"docs":" Exact chunks iterator.","sig":null,"attributes":[{"value":"/ Exact chunks iterator.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":207154,"byte_end":207180,"line_start":223,"line_end":223,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":207181,"byte_end":207184,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ See [`.exact_chunks_mut()`](../struct.ArrayBase.html#method.exact_chunks_mut)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":207185,"byte_end":207266,"line_start":225,"line_end":225,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":207267,"byte_end":207292,"line_start":226,"line_end":226,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":207976,"byte_end":207984,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::iterators::into_iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":" By-value iterator for an array\n","sig":null,"attributes":[{"value":"/ By-value iterator for an array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":207930,"byte_end":207964,"line_start":19,"line_end":19,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iterators::iter","value":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1287},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1332}],"decl_id":null,"docs":" Producers, iterables and iterators.","sig":null,"attributes":[{"value":"/ Producers, iterables and iterators.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":210958,"byte_end":210997,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":210998,"byte_end":211001,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module collects all concrete producer, iterable and iterator","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211002,"byte_end":211071,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ implementation structs.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211072,"byte_end":211099,"line_start":4,"line_end":4,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211100,"byte_end":211103,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211104,"byte_end":211107,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See also [`NdProducer`](../trait.NdProducer.html).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/iter.rs","byte_start":211108,"byte_end":211162,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":212121,"byte_end":212126,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"Lanes","qualname":"::iterators::lanes::Lanes","value":"Lanes {  }","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359}],"decl_id":null,"docs":" See [`.lanes()`](../struct.ArrayBase.html#method.lanes)\n for more information.\n","sig":null,"attributes":[{"value":"/ See [`.lanes()`](../struct.ArrayBase.html#method.lanes)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":212024,"byte_end":212083,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/ for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":212084,"byte_end":212109,"line_start":27,"line_end":27,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":213773,"byte_end":213781,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"LanesMut","qualname":"::iterators::lanes::LanesMut","value":"LanesMut {  }","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379}],"decl_id":null,"docs":" See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)\n for more information.\n","sig":null,"attributes":[{"value":"/ See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":213668,"byte_end":213735,"line_start":95,"line_end":95,"column_start":1,"column_end":68}},{"value":"/ for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":213736,"byte_end":213761,"line_start":96,"line_end":96,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":215230,"byte_end":215237,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Windows","qualname":"::iterators::windows::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413}],"decl_id":null,"docs":" Window producer and iterable","sig":null,"attributes":[{"value":"/ Window producer and iterable","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":215092,"byte_end":215124,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":215125,"byte_end":215128,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.windows()`](../struct.ArrayBase.html#method.windows) for more","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":215129,"byte_end":215201,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":215202,"byte_end":215218,"line_start":10,"line_end":10,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":217301,"byte_end":217312,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"WindowsIter","qualname":"::iterators::windows::WindowsIter","value":"WindowsIter {  }","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"decl_id":null,"docs":" Window iterator.","sig":null,"attributes":[{"value":"/ Window iterator.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":217175,"byte_end":217195,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":217196,"byte_end":217199,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ See [`.windows()`](../struct.ArrayBase.html#method.windows) for more","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":217200,"byte_end":217272,"line_start":89,"line_end":89,"column_start":1,"column_end":73}},{"value":"/ information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":217273,"byte_end":217289,"line_start":90,"line_end":90,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164643,"byte_end":164647,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iterators::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1597}],"decl_id":null,"docs":" An iterator over the elements of an array.","sig":null,"attributes":[{"value":"/ An iterator over the elements of an array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164459,"byte_end":164505,"line_start":314,"line_end":314,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164506,"byte_end":164509,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a A`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164510,"byte_end":164547,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164548,"byte_end":164551,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ See [`.iter()`](../struct.ArrayBase.html#method.iter) for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164552,"byte_end":164631,"line_start":318,"line_end":318,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165063,"byte_end":165070,"line_start":334,"line_end":334,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::iterators::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1608}],"decl_id":null,"docs":" An iterator over the elements of an array (mutable).","sig":null,"attributes":[{"value":"/ An iterator over the elements of an array (mutable).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164857,"byte_end":164913,"line_start":329,"line_end":329,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164914,"byte_end":164917,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `&'a mut A`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164918,"byte_end":164959,"line_start":331,"line_end":331,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164960,"byte_end":164963,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ See [`.iter_mut()`](../struct.ArrayBase.html#method.iter_mut) for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164964,"byte_end":165051,"line_start":333,"line_end":333,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":5699},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165763,"byte_end":165774,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"IndexedIter","qualname":"::iterators::IndexedIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the indexes and elements of an array.","sig":null,"attributes":[{"value":"/ An iterator over the indexes and elements of an array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165576,"byte_end":165634,"line_start":355,"line_end":355,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165635,"byte_end":165638,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ See [`.indexed_iter()`](../struct.ArrayBase.html#method.indexed_iter) for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165639,"byte_end":165734,"line_start":357,"line_end":357,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165998,"byte_end":166012,"line_start":363,"line_end":363,"column_start":12,"column_end":26},"name":"IndexedIterMut","qualname":"::iterators::IndexedIterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the indexes and elements of an array (mutable).","sig":null,"attributes":[{"value":"/ An iterator over the indexes and elements of an array (mutable).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165810,"byte_end":165878,"line_start":360,"line_end":360,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165879,"byte_end":165882,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ See [`.indexed_iter_mut()`](../struct.ArrayBase.html#method.indexed_iter_mut) for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165883,"byte_end":165986,"line_start":362,"line_end":362,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":173844,"byte_end":173853,"line_start":685,"line_end":685,"column_start":12,"column_end":21},"name":"LanesIter","qualname":"::iterators::LanesIter","value":"LanesIter {  }","parent":null,"children":[{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771}],"decl_id":null,"docs":" An iterator that traverses over all axes but one, and yields a view for\n each lane along that axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over all axes but one, and yields a view for","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":173640,"byte_end":173715,"line_start":681,"line_end":681,"column_start":1,"column_end":76}},{"value":"/ each lane along that axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":173716,"byte_end":173746,"line_start":682,"line_end":682,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":173747,"byte_end":173750,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ See [`.lanes()`](../struct.ArrayBase.html#method.lanes) for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":173751,"byte_end":173832,"line_start":684,"line_end":684,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":175071,"byte_end":175083,"line_start":737,"line_end":737,"column_start":12,"column_end":24},"name":"LanesIterMut","qualname":"::iterators::LanesIterMut","value":"LanesIterMut {  }","parent":null,"children":[{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792}],"decl_id":null,"docs":" An iterator that traverses over all dimensions but the innermost,\n and yields each inner row (mutable).","sig":null,"attributes":[{"value":"/ An iterator that traverses over all dimensions but the innermost,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":174851,"byte_end":174920,"line_start":732,"line_end":732,"column_start":1,"column_end":70}},{"value":"/ and yields each inner row (mutable).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":174921,"byte_end":174961,"line_start":733,"line_end":733,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":174962,"byte_end":174965,"line_start":734,"line_end":734,"column_start":1,"column_end":4}},{"value":"/ See [`.lanes_mut()`](../struct.ArrayBase.html#method.lanes_mut)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":174966,"byte_end":175033,"line_start":735,"line_end":735,"column_start":1,"column_end":68}},{"value":"/ for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":175034,"byte_end":175059,"line_start":736,"line_end":736,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":5732},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180375,"byte_end":180383,"line_start":934,"line_end":934,"column_start":12,"column_end":20},"name":"AxisIter","qualname":"::iterators::AxisIter","value":"AxisIter {  }","parent":null,"children":[{"krate":0,"index":5736},{"krate":0,"index":5737}],"decl_id":null,"docs":" An iterator that traverses over an axis and\n and yields each subview.","sig":null,"attributes":[{"value":"/ An iterator that traverses over an axis and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179755,"byte_end":179802,"line_start":919,"line_end":919,"column_start":1,"column_end":48}},{"value":"/ and yields each subview.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179803,"byte_end":179831,"line_start":920,"line_end":920,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179832,"byte_end":179835,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ The outermost dimension is `Axis(0)`, created with `.outer_iter()`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179836,"byte_end":179907,"line_start":922,"line_end":922,"column_start":1,"column_end":72}},{"value":"/ but you can traverse arbitrary dimension with `.axis_iter()`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179908,"byte_end":179973,"line_start":923,"line_end":923,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179974,"byte_end":179977,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ For example, in a 3 × 5 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179978,"byte_end":180050,"line_start":925,"line_end":925,"column_start":1,"column_end":71}},{"value":"/ the iterator element is a 3 × 5 subview (and there are 5 in total).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180051,"byte_end":180123,"line_start":926,"line_end":926,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180124,"byte_end":180127,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayView<'a, A, D>`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180128,"byte_end":180179,"line_start":928,"line_end":928,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180180,"byte_end":180183,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ See [`.outer_iter()`](../struct.ArrayBase.html#method.outer_iter)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180184,"byte_end":180253,"line_start":930,"line_end":930,"column_start":1,"column_end":70}},{"value":"/ or [`.axis_iter()`](../struct.ArrayBase.html#method.axis_iter)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180254,"byte_end":180320,"line_start":931,"line_end":931,"column_start":1,"column_end":67}},{"value":"/ for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180321,"byte_end":180346,"line_start":932,"line_end":932,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181248,"byte_end":181256,"line_start":968,"line_end":968,"column_start":12,"column_end":20},"name":"split_at","qualname":"<AxisIter>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the iterator at `index`, yielding two disjoint iterators.","sig":null,"attributes":[{"value":"/ Splits the iterator at `index`, yielding two disjoint iterators.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180933,"byte_end":181001,"line_start":961,"line_end":961,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181006,"byte_end":181009,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ `index` is relative to the current state of the iterator (which is not","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181014,"byte_end":181088,"line_start":963,"line_end":963,"column_start":5,"column_end":79}},{"value":"/ necessarily the start of the axis).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181093,"byte_end":181132,"line_start":964,"line_end":964,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181137,"byte_end":181140,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is strictly greater than the iterator's remaining","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181145,"byte_end":181220,"line_start":966,"line_end":966,"column_start":5,"column_end":80}},{"value":"/ length.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181225,"byte_end":181236,"line_start":967,"line_end":967,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182887,"byte_end":182898,"line_start":1030,"line_end":1030,"column_start":12,"column_end":23},"name":"AxisIterMut","qualname":"::iterators::AxisIterMut","value":"AxisIterMut {  }","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863}],"decl_id":null,"docs":" An iterator that traverses over an axis and\n and yields each subview (mutable)","sig":null,"attributes":[{"value":"/ An iterator that traverses over an axis and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182256,"byte_end":182303,"line_start":1016,"line_end":1016,"column_start":1,"column_end":48}},{"value":"/ and yields each subview (mutable)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182304,"byte_end":182341,"line_start":1017,"line_end":1017,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182342,"byte_end":182345,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ The outermost dimension is `Axis(0)`, created with `.outer_iter()`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182346,"byte_end":182417,"line_start":1019,"line_end":1019,"column_start":1,"column_end":72}},{"value":"/ but you can traverse arbitrary dimension with `.axis_iter()`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182418,"byte_end":182483,"line_start":1020,"line_end":1020,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182484,"byte_end":182487,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ For example, in a 3 × 5 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182488,"byte_end":182560,"line_start":1022,"line_end":1022,"column_start":1,"column_end":71}},{"value":"/ the iterator element is a 3 × 5 subview (and there are 5 in total).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182561,"byte_end":182633,"line_start":1023,"line_end":1023,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182634,"byte_end":182637,"line_start":1024,"line_end":1024,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayViewMut<'a, A, D>`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182638,"byte_end":182692,"line_start":1025,"line_end":1025,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182693,"byte_end":182696,"line_start":1026,"line_end":1026,"column_start":1,"column_end":4}},{"value":"/ See [`.outer_iter_mut()`](../struct.ArrayBase.html#method.outer_iter_mut)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182697,"byte_end":182774,"line_start":1027,"line_end":1027,"column_start":1,"column_end":78}},{"value":"/ or [`.axis_iter_mut()`](../struct.ArrayBase.html#method.axis_iter_mut)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182775,"byte_end":182849,"line_start":1028,"line_end":1028,"column_start":1,"column_end":75}},{"value":"/ for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182850,"byte_end":182875,"line_start":1029,"line_end":1029,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":183646,"byte_end":183654,"line_start":1054,"line_end":1054,"column_start":12,"column_end":20},"name":"split_at","qualname":"<AxisIterMut>::split_at","value":"pub fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Splits the iterator at `index`, yielding two disjoint iterators.","sig":null,"attributes":[{"value":"/ Splits the iterator at `index`, yielding two disjoint iterators.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":183331,"byte_end":183399,"line_start":1047,"line_end":1047,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":183404,"byte_end":183407,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ `index` is relative to the current state of the iterator (which is not","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":183412,"byte_end":183486,"line_start":1049,"line_end":1049,"column_start":5,"column_end":79}},{"value":"/ necessarily the start of the axis).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":183491,"byte_end":183530,"line_start":1050,"line_end":1050,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":183535,"byte_end":183538,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is strictly greater than the iterator's remaining","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":183543,"byte_end":183618,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ length.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":183623,"byte_end":183634,"line_start":1053,"line_end":1053,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":188412,"byte_end":188426,"line_start":1226,"line_end":1226,"column_start":12,"column_end":26},"name":"AxisChunksIter","qualname":"::iterators::AxisChunksIter","value":"AxisChunksIter {  }","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929}],"decl_id":null,"docs":" An iterator that traverses over the specified axis\n and yields views of the specified size on this axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over the specified axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":187946,"byte_end":188000,"line_start":1216,"line_end":1216,"column_start":1,"column_end":55}},{"value":"/ and yields views of the specified size on this axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":188001,"byte_end":188057,"line_start":1217,"line_end":1217,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":188058,"byte_end":188061,"line_start":1218,"line_end":1218,"column_start":1,"column_end":4}},{"value":"/ For example, in a 2 × 8 × 3 array, if the axis of iteration","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":188062,"byte_end":188127,"line_start":1219,"line_end":1219,"column_start":1,"column_end":64}},{"value":"/ is 1 and the chunk size is 2, the yielded elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":188128,"byte_end":188182,"line_start":1220,"line_end":1220,"column_start":1,"column_end":55}},{"value":"/ are 2 × 2 × 3 views (and there are 4 in total).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":188183,"byte_end":188236,"line_start":1221,"line_end":1221,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":188237,"byte_end":188240,"line_start":1222,"line_end":1222,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayView<'a, A, D>`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":188241,"byte_end":188292,"line_start":1223,"line_end":1223,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":188293,"byte_end":188296,"line_start":1224,"line_end":1224,"column_start":1,"column_end":4}},{"value":"/ See [`.axis_chunks_iter()`](../struct.ArrayBase.html#method.axis_chunks_iter) for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":188297,"byte_end":188400,"line_start":1225,"line_end":1225,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1939},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":194250,"byte_end":194267,"line_start":1406,"line_end":1406,"column_start":12,"column_end":29},"name":"AxisChunksIterMut","qualname":"::iterators::AxisChunksIterMut","value":"AxisChunksIterMut {  }","parent":null,"children":[{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946}],"decl_id":null,"docs":" An iterator that traverses over the specified axis\n and yields mutable views of the specified size on this axis.","sig":null,"attributes":[{"value":"/ An iterator that traverses over the specified axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":193761,"byte_end":193815,"line_start":1395,"line_end":1395,"column_start":1,"column_end":55}},{"value":"/ and yields mutable views of the specified size on this axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":193816,"byte_end":193880,"line_start":1396,"line_end":1396,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":193881,"byte_end":193884,"line_start":1397,"line_end":1397,"column_start":1,"column_end":4}},{"value":"/ For example, in a 2 × 8 × 3 array, if the axis of iteration","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":193885,"byte_end":193950,"line_start":1398,"line_end":1398,"column_start":1,"column_end":64}},{"value":"/ is 1 and the chunk size is 2, the yielded elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":193951,"byte_end":194005,"line_start":1399,"line_end":1399,"column_start":1,"column_end":55}},{"value":"/ are 2 × 2 × 3 views (and there are 4 in total).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":194006,"byte_end":194059,"line_start":1400,"line_end":1400,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":194060,"byte_end":194063,"line_start":1401,"line_end":1401,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `ArrayViewMut<'a, A, D>`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":194064,"byte_end":194118,"line_start":1402,"line_end":1402,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":194119,"byte_end":194122,"line_start":1403,"line_end":1403,"column_start":1,"column_end":4}},{"value":"/ See [`.axis_chunks_iter_mut()`](../struct.ArrayBase.html#method.axis_chunks_iter_mut)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":194123,"byte_end":194212,"line_start":1404,"line_end":1404,"column_start":1,"column_end":90}},{"value":"/ for more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":194213,"byte_end":194238,"line_start":1405,"line_end":1405,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":5899},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/layout/mod.rs","byte_start":218094,"byte_end":218100,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Layout","qualname":"::layout::Layout","value":"","parent":null,"children":[],"decl_id":null,"docs":" Memory layout description\n","sig":null,"attributes":[{"value":"/ Memory layout description","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/layout/mod.rs","byte_start":218030,"byte_end":218059,"line_start":7,"line_end":7,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":226989,"byte_end":227001,"line_start":26,"line_end":26,"column_start":11,"column_end":23},"name":"LinalgScalar","qualname":"::linalg_traits::LinalgScalar","value":"LinalgScalar: 'static + Copy + Zero + One + Add<Output = Self> + Sub<Output = Self> +\nMul<Output = Self> + Div<Output = Self>","parent":null,"children":[],"decl_id":null,"docs":" Elements that support linear algebra operations.","sig":null,"attributes":[{"value":"/ Elements that support linear algebra operations.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":226776,"byte_end":226828,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":226829,"byte_end":226832,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `'static` for type-based specialization, `Copy` so that they don't need move","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":226833,"byte_end":226913,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ semantics or destructors, and the rest are numerical traits.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":226914,"byte_end":226978,"line_start":25,"line_end":25,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227760,"byte_end":227767,"line_start":59,"line_end":59,"column_start":11,"column_end":18},"name":"NdFloat","qualname":"::linalg_traits::NdFloat","value":"NdFloat: Float + AddAssign + SubAssign + MulAssign + DivAssign + RemAssign +\nfmt::Display + fmt::Debug + fmt::LowerExp + fmt::UpperExp + ScalarOperand +\nLinalgScalar + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Floating-point element types `f32` and `f64`.","sig":null,"attributes":[{"value":"/ Floating-point element types `f32` and `f64`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227353,"byte_end":227402,"line_start":50,"line_end":50,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227403,"byte_end":227406,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Trait `NdFloat` is only implemented for `f32` and `f64` but encompasses as","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227407,"byte_end":227485,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ much float-relevant ndarray functionality as possible, including the traits","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227486,"byte_end":227565,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ needed for linear algebra and for *right hand side* scalar","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227566,"byte_end":227628,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/ operations (`ScalarOperand`).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227629,"byte_end":227662,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227663,"byte_end":227666,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This trait can only be implemented by `f32` and `f64`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227667,"byte_end":227725,"line_start":57,"line_end":57,"column_start":1,"column_end":59}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227726,"byte_end":227749,"line_start":58,"line_end":58,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5905},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":235992,"byte_end":236000,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"MathCell","qualname":"::math_cell::MathCell","value":"","parent":null,"children":[],"decl_id":null,"docs":" A transparent wrapper of [`Cell<T>`](std::cell::Cell) which is identical in every way, except\n it will implement arithmetic operators as well.","sig":null,"attributes":[{"value":"/ A transparent wrapper of [`Cell<T>`](std::cell::Cell) which is identical in every way, except","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":235615,"byte_end":235712,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ it will implement arithmetic operators as well.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":235713,"byte_end":235764,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":235765,"byte_end":235768,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The purpose of `MathCell` is to be used from [.cell_view()](crate::ArrayBase::cell_view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":235769,"byte_end":235862,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/ The `MathCell` derefs to `Cell`, so all the cell's methods are available.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":235863,"byte_end":235940,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"repr(transparent)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":235941,"byte_end":235961,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236123,"byte_end":236126,"line_start":20,"line_end":20,"column_start":18,"column_end":21},"name":"new","qualname":"<MathCell<T>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new cell with the given value\n","sig":null,"attributes":[{"value":"/ Create a new cell with the given value","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236041,"byte_end":236083,"line_start":18,"line_end":18,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236088,"byte_end":236105,"line_start":19,"line_end":19,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236219,"byte_end":236229,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MathCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value\n","sig":null,"attributes":[{"value":"/ Return the inner value","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236181,"byte_end":236207,"line_start":22,"line_end":22,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236319,"byte_end":236323,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"swap","qualname":"<MathCell<T>>::swap","value":"pub fn swap(&Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":" Swap value with another cell\n","sig":null,"attributes":[{"value":"/ Swap value with another cell","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236275,"byte_end":236307,"line_start":25,"line_end":25,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5913},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242856,"byte_end":242864,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"RowMajor","qualname":"::order::Order::RowMajor","value":"Order::RowMajor","parent":{"krate":0,"index":5912},"children":[],"decl_id":null,"docs":" Row major or \"C\" order\n","sig":null,"attributes":[{"value":"/ Row major or \"C\" order","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242825,"byte_end":242851,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5915},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242904,"byte_end":242915,"line_start":38,"line_end":38,"column_start":5,"column_end":16},"name":"ColumnMajor","qualname":"::order::Order::ColumnMajor","value":"Order::ColumnMajor","parent":{"krate":0,"index":5912},"children":[],"decl_id":null,"docs":" Column major or \"F\" order\n","sig":null,"attributes":[{"value":"/ Column major or \"F\" order","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242870,"byte_end":242899,"line_start":37,"line_end":37,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5912},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242813,"byte_end":242818,"line_start":34,"line_end":34,"column_start":10,"column_end":15},"name":"Order","qualname":"::order::Order","value":"pub enum Order { RowMajor, ColumnMajor, }","parent":null,"children":[{"krate":0,"index":5913},{"krate":0,"index":5915}],"decl_id":null,"docs":" Array order","sig":null,"attributes":[{"value":"/ Array order","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":241738,"byte_end":241753,"line_start":2,"line_end":2,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":241754,"byte_end":241757,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Order refers to indexing order, or how a linear sequence is translated","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":241758,"byte_end":241832,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ into a two-dimensional or multi-dimensional array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":241833,"byte_end":241887,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":241888,"byte_end":241891,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - `RowMajor` means that the index along the row is the most rapidly changing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":241892,"byte_end":241972,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ - `ColumnMajor` means that the index along the column is the most rapidly changing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":241973,"byte_end":242059,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242060,"byte_end":242063,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Given a sequence like: 1, 2, 3, 4, 5, 6","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242064,"byte_end":242107,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242108,"byte_end":242111,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If it is laid it out in a 2 x 3 matrix using row major ordering, it results in:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242112,"byte_end":242195,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242196,"byte_end":242199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242200,"byte_end":242211,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ 1  2  3","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242212,"byte_end":242223,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ 4  5  6","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242224,"byte_end":242235,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242236,"byte_end":242243,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242244,"byte_end":242247,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If it is laid using column major ordering, it results in:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242248,"byte_end":242309,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242310,"byte_end":242313,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242314,"byte_end":242325,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ 1  3  5","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242326,"byte_end":242337,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/ 2  4  6","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242338,"byte_end":242349,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242350,"byte_end":242357,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242358,"byte_end":242361,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It can be seen as filling in \"rows first\" or \"columns first\".","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242362,"byte_end":242427,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242428,"byte_end":242431,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Order` can be used both to refer to logical ordering as well as memory ordering or memory","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242432,"byte_end":242526,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ layout. The orderings have common short names, also seen in other environments, where","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242527,"byte_end":242616,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/ row major is called \"C\" order (after the C programming language) and column major is called \"F\"","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242617,"byte_end":242716,"line_start":30,"line_end":30,"column_start":1,"column_end":100}},{"value":"/ or \"Fortran\" order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242717,"byte_end":242740,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"non_exhaustive","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242786,"byte_end":242803,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242994,"byte_end":242995,"line_start":43,"line_end":43,"column_start":15,"column_end":16},"name":"C","qualname":"::order::Order::C","value":"Order","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" \"C\" is an alias for row major ordering\n","sig":null,"attributes":[{"value":"/ \"C\" is an alias for row major ordering","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242937,"byte_end":242979,"line_start":42,"line_end":42,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":2207},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243101,"byte_end":243102,"line_start":46,"line_end":46,"column_start":15,"column_end":16},"name":"F","qualname":"::order::Order::F","value":"Order","parent":{"krate":0,"index":2205},"children":[],"decl_id":null,"docs":" \"F\" (for Fortran) is an alias for column major ordering\n","sig":null,"attributes":[{"value":"/ \"F\" (for Fortran) is an alias for column major ordering","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243027,"byte_end":243086,"line_start":45,"line_end":45,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243223,"byte_end":243235,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"is_row_major","qualname":"<Order>::is_row_major","value":"pub fn is_row_major(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if input is Order::RowMajor, false otherwise\n","sig":null,"attributes":[{"value":"/ Return true if input is Order::RowMajor, false otherwise","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243137,"byte_end":243197,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243202,"byte_end":243211,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243461,"byte_end":243476,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"is_column_major","qualname":"<Order>::is_column_major","value":"pub fn is_column_major(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if input is Order::ColumnMajor, false otherwise\n","sig":null,"attributes":[{"value":"/ Return true if input is Order::ColumnMajor, false otherwise","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243372,"byte_end":243435,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243440,"byte_end":243449,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243636,"byte_end":243645,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"row_major","qualname":"<Order>::row_major","value":"pub fn row_major(bool) -> Order","parent":null,"children":[],"decl_id":null,"docs":" Return Order::RowMajor if the input is true, Order::ColumnMajor otherwise\n","sig":null,"attributes":[{"value":"/ Return Order::RowMajor if the input is true, Order::ColumnMajor otherwise","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243533,"byte_end":243610,"line_start":63,"line_end":63,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243615,"byte_end":243624,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243857,"byte_end":243869,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"column_major","qualname":"<Order>::column_major","value":"pub fn column_major(bool) -> Order","parent":null,"children":[],"decl_id":null,"docs":" Return Order::ColumnMajor if the input is true, Order::RowMajor otherwise\n","sig":null,"attributes":[{"value":"/ Return Order::ColumnMajor if the input is true, Order::RowMajor otherwise","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243754,"byte_end":243831,"line_start":69,"line_end":69,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243836,"byte_end":243845,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":244049,"byte_end":244058,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Order>::transpose","value":"pub fn transpose(Self) -> Order","parent":null,"children":[],"decl_id":null,"docs":" Return the transpose: row major becomes column major and vice versa.\n","sig":null,"attributes":[{"value":"/ Return the transpose: row major becomes column major and vice versa.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":243951,"byte_end":244023,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":244028,"byte_end":244037,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5928},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247240,"byte_end":247245,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Shape","qualname":"::shape_builder::Shape","value":"Shape {  }","parent":null,"children":[{"krate":0,"index":5930},{"krate":0,"index":5931}],"decl_id":null,"docs":" A contiguous array shape of n dimensions.","sig":null,"attributes":[{"value":"/ A contiguous array shape of n dimensions.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247074,"byte_end":247119,"line_start":5,"line_end":5,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247120,"byte_end":247123,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Either c- or f- memory ordered (*c* a.k.a *row major* is the default).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247124,"byte_end":247198,"line_start":7,"line_end":7,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":5946},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247678,"byte_end":247689,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"StrideShape","qualname":"::shape_builder::StrideShape","value":"StrideShape {  }","parent":null,"children":[{"krate":0,"index":5948},{"krate":0,"index":5949}],"decl_id":null,"docs":" An array shape of n dimensions in c-order, f-order or custom strides.\n","sig":null,"attributes":[{"value":"/ An array shape of n dimensions in c-order, f-order or custom strides.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247563,"byte_end":247636,"line_start":25,"line_end":25,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247861,"byte_end":247868,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"raw_dim","qualname":"<StrideShape<D>>::raw_dim","value":"pub fn raw_dim(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the dimension\n","sig":null,"attributes":[{"value":"/ Return a reference to the dimension","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247810,"byte_end":247849,"line_start":36,"line_end":36,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247978,"byte_end":247982,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"size","qualname":"<StrideShape<D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the shape in number of elements\n","sig":null,"attributes":[{"value":"/ Return the size of the shape in number of elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247912,"byte_end":247966,"line_start":40,"line_end":40,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":2251},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249235,"byte_end":249247,"line_start":89,"line_end":89,"column_start":11,"column_end":23},"name":"ShapeBuilder","qualname":"::shape_builder::ShapeBuilder","value":"ShapeBuilder","parent":null,"children":[{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257}],"decl_id":null,"docs":" A trait for `Shape` and `D where D: Dimension` that allows\n customizing the memory layout (strides) of an array shape.","sig":null,"attributes":[{"value":"/ A trait for `Shape` and `D where D: Dimension` that allows","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":248998,"byte_end":249060,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/ customizing the memory layout (strides) of an array shape.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249061,"byte_end":249123,"line_start":85,"line_end":85,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249124,"byte_end":249127,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This trait is used together with array constructor methods like","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249128,"byte_end":249195,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/ `Array::from_shape_vec`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249196,"byte_end":249224,"line_start":88,"line_end":88,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249259,"byte_end":249262,"line_start":90,"line_end":90,"column_start":10,"column_end":13},"name":"Dim","qualname":"::shape_builder::ShapeBuilder::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2253},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249284,"byte_end":249291,"line_start":91,"line_end":91,"column_start":10,"column_end":17},"name":"Strides","qualname":"::shape_builder::ShapeBuilder::Strides","value":"type Strides;","parent":{"krate":0,"index":2251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249301,"byte_end":249311,"line_start":93,"line_end":93,"column_start":8,"column_end":18},"name":"into_shape","qualname":"::shape_builder::ShapeBuilder::into_shape","value":"pub fn into_shape(Self) -> Shape<Self::Dim>","parent":{"krate":0,"index":2251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249346,"byte_end":249347,"line_start":94,"line_end":94,"column_start":8,"column_end":9},"name":"f","qualname":"::shape_builder::ShapeBuilder::f","value":"pub fn f(Self) -> Shape<Self::Dim>","parent":{"krate":0,"index":2251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249382,"byte_end":249387,"line_start":95,"line_end":95,"column_start":8,"column_end":13},"name":"set_f","qualname":"::shape_builder::ShapeBuilder::set_f","value":"pub fn set_f(Self, bool) -> Shape<Self::Dim>","parent":{"krate":0,"index":2251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249434,"byte_end":249441,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"strides","qualname":"::shape_builder::ShapeBuilder::strides","value":"pub fn strides(Self, Self::Strides) -> StrideShape<Self::Dim>","parent":{"krate":0,"index":2251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251185,"byte_end":251192,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"raw_dim","qualname":"<Shape<D>>::raw_dim","value":"pub fn raw_dim(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the dimension\n","sig":null,"attributes":[{"value":"/ Return a reference to the dimension","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251134,"byte_end":251173,"line_start":179,"line_end":179,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251302,"byte_end":251306,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"size","qualname":"<Shape<D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the shape in number of elements\n","sig":null,"attributes":[{"value":"/ Return the size of the shape in number of elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251236,"byte_end":251290,"line_start":183,"line_end":183,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251697,"byte_end":251705,"line_start":198,"line_end":198,"column_start":11,"column_end":19},"name":"ShapeArg","qualname":"::shape_builder::ShapeArg","value":"ShapeArg","parent":null,"children":[{"krate":0,"index":2286},{"krate":0,"index":2287}],"decl_id":null,"docs":" Array shape argument with optional order parameter","sig":null,"attributes":[{"value":"/ Array shape argument with optional order parameter","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251359,"byte_end":251413,"line_start":190,"line_end":190,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251414,"byte_end":251417,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ Shape or array dimension argument, with optional [`Order`] parameter.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251418,"byte_end":251491,"line_start":192,"line_end":192,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251492,"byte_end":251495,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ This is an argument conversion trait that is used to accept an array shape and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251496,"byte_end":251578,"line_start":194,"line_end":194,"column_start":1,"column_end":83}},{"value":"/ (optionally) an ordering argument.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251579,"byte_end":251617,"line_start":195,"line_end":195,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251618,"byte_end":251621,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ See for example [`.to_shape()`](crate::ArrayBase::to_shape).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251622,"byte_end":251686,"line_start":197,"line_end":197,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251717,"byte_end":251720,"line_start":199,"line_end":199,"column_start":10,"column_end":13},"name":"Dim","qualname":"::shape_builder::ShapeArg::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251740,"byte_end":251760,"line_start":200,"line_end":200,"column_start":8,"column_end":28},"name":"into_shape_and_order","qualname":"::shape_builder::ShapeArg::into_shape_and_order","value":"pub fn into_shape_and_order(Self) -> (Self::Dim, Option<Order>)","parent":{"krate":0,"index":2285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5975},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253776,"byte_end":253781,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, step }","parent":null,"children":[{"krate":0,"index":5976},{"krate":0,"index":5977},{"krate":0,"index":5978}],"decl_id":null,"docs":" A slice (range with step size).","sig":null,"attributes":[{"value":"/ A slice (range with step size).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":252905,"byte_end":252940,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":252941,"byte_end":252944,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `end` is an exclusive index. Negative `start` or `end` indexes are counted","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":252945,"byte_end":253023,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ from the back of the axis. If `end` is `None`, the slice extends to the end","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253024,"byte_end":253103,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ of the axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253104,"byte_end":253120,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253121,"byte_end":253124,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](macro.s.html) macro.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253125,"byte_end":253171,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253172,"byte_end":253175,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253176,"byte_end":253191,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253192,"byte_end":253195,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(0, None, 1)` is the full range of an axis. It can also be","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253196,"byte_end":253269,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ created with `Slice::from(..)`. The Python equivalent is `[:]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253270,"byte_end":253337,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253338,"byte_end":253341,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(a, b, 2)` is every second element from `a` until `b`. It can","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253342,"byte_end":253418,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ also be created with `Slice::from(a..b).step_by(2)`. The Python equivalent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253419,"byte_end":253497,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ is `[a:b:2]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253498,"byte_end":253515,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253516,"byte_end":253519,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ `Slice::new(a, None, -1)` is every element, from `a` until the end, in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253520,"byte_end":253594,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ reverse order. It can also be created with `Slice::from(a..).step_by(-1)`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253595,"byte_end":253673,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ The Python equivalent is `[a::-1]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253674,"byte_end":253713,"line_start":36,"line_end":36,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5976},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253860,"byte_end":253865,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"isize","parent":{"krate":0,"index":5975},"children":[],"decl_id":null,"docs":" start index; negative are counted from the back of the axis\n","sig":null,"attributes":[{"value":"/ start index; negative are counted from the back of the axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253788,"byte_end":253851,"line_start":39,"line_end":39,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":5977},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254018,"byte_end":254021,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"std::option::Option<isize>","parent":{"krate":0,"index":5975},"children":[],"decl_id":null,"docs":" end index; negative are counted from the back of the axis; when not present\n the default is the full length of the axis.\n","sig":null,"attributes":[{"value":"/ end index; negative are counted from the back of the axis; when not present","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253878,"byte_end":253957,"line_start":41,"line_end":41,"column_start":5,"column_end":84}},{"value":"/ the default is the full length of the axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":253962,"byte_end":254009,"line_start":42,"line_end":42,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5978},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254114,"byte_end":254118,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"step","qualname":"::slice::Slice::step","value":"isize","parent":{"krate":0,"index":5975},"children":[],"decl_id":null,"docs":" step size in elements; the default is 1, for every element.\n","sig":null,"attributes":[{"value":"/ step size in elements; the default is 1, for every element.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254042,"byte_end":254105,"line_start":44,"line_end":44,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254454,"byte_end":254457,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Slice>::new","value":"pub fn new(isize, Option<isize>, isize) -> Slice","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` with the given extents.","sig":null,"attributes":[{"value":"/ Create a new `Slice` with the given extents.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254147,"byte_end":254195,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254200,"byte_end":254203,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ See also the `From` impls, converting from ranges; for example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254208,"byte_end":254274,"line_start":51,"line_end":51,"column_start":5,"column_end":71}},{"value":"/ `Slice::from(i..)` or `Slice::from(j..k)`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254279,"byte_end":254325,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254330,"byte_end":254333,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254338,"byte_end":254365,"line_start":54,"line_end":54,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254370,"byte_end":254442,"line_start":55,"line_end":55,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2377},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254875,"byte_end":254882,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"step_by","qualname":"<Slice>::step_by","value":"pub fn step_by(Self, isize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Slice` with the given step size (multiplied with the\n previous step size).","sig":null,"attributes":[{"value":"/ Create a new `Slice` with the given step size (multiplied with the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254633,"byte_end":254703,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ previous step size).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254708,"byte_end":254732,"line_start":62,"line_end":62,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254737,"byte_end":254740,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ `step` must be nonzero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254745,"byte_end":254772,"line_start":64,"line_end":64,"column_start":5,"column_end":32}},{"value":"/ (This method checks with a debug assertion that `step` is not zero.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254777,"byte_end":254849,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254854,"byte_end":254863,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5994},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255228,"byte_end":255235,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"NewAxis","qualname":"::slice::NewAxis","value":"","parent":null,"children":[],"decl_id":null,"docs":" Token to represent a new axis in a slice description.","sig":null,"attributes":[{"value":"/ Token to represent a new axis in a slice description.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255077,"byte_end":255134,"line_start":76,"line_end":76,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255135,"byte_end":255138,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](macro.s!.html) macro.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255139,"byte_end":255186,"line_start":78,"line_end":78,"column_start":1,"column_end":48}}]},{"kind":"StructVariant","id":{"krate":0,"index":6002},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256911,"byte_end":256916,"line_start":115,"line_end":115,"column_start":5,"column_end":10},"name":"Slice","qualname":"::slice::SliceInfoElem::Slice","value":"SliceInfoElem::Slice { start, end, step }","parent":{"krate":0,"index":6001},"children":[],"decl_id":null,"docs":" A range with step size. `end` is an exclusive index. Negative `start`\n or `end` indexes are counted from the back of the axis. If `end` is\n `None`, the slice extends to the end of the axis.\n","sig":null,"attributes":[{"value":"/ A range with step size. `end` is an exclusive index. Negative `start`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256699,"byte_end":256772,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ or `end` indexes are counted from the back of the axis. If `end` is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256777,"byte_end":256848,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ `None`, the slice extends to the end of the axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256853,"byte_end":256906,"line_start":114,"line_end":114,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6006},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257313,"byte_end":257318,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Index","qualname":"::slice::SliceInfoElem::Index","value":"SliceInfoElem::Index(isize)","parent":{"krate":0,"index":6001},"children":[],"decl_id":null,"docs":" A single index.\n","sig":null,"attributes":[{"value":"/ A single index.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257289,"byte_end":257308,"line_start":124,"line_end":124,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6009},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257363,"byte_end":257370,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"NewAxis","qualname":"::slice::SliceInfoElem::NewAxis","value":"SliceInfoElem::NewAxis","parent":{"krate":0,"index":6001},"children":[],"decl_id":null,"docs":" A new axis of length 1.\n","sig":null,"attributes":[{"value":"/ A new axis of length 1.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257331,"byte_end":257358,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":6001},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256679,"byte_end":256692,"line_start":111,"line_end":111,"column_start":10,"column_end":23},"name":"SliceInfoElem","qualname":"::slice::SliceInfoElem","value":"pub enum SliceInfoElem {\n    Slice {\n        start: isize,\n        end: Option<isize>,\n        step: isize,\n    },\n    Index(isize),\n    NewAxis,\n}","parent":null,"children":[{"krate":0,"index":6002},{"krate":0,"index":6006},{"krate":0,"index":6009}],"decl_id":null,"docs":" A slice (range with step), an index, or a new axis token.","sig":null,"attributes":[{"value":"/ A slice (range with step), an index, or a new axis token.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255238,"byte_end":255299,"line_start":82,"line_end":82,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255300,"byte_end":255303,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ See also the [`s![]`](macro.s!.html) macro for a convenient way to create a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255304,"byte_end":255383,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/ `SliceInfo<[SliceInfoElem; n], Din, Dout>`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255384,"byte_end":255431,"line_start":85,"line_end":85,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255432,"byte_end":255435,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255436,"byte_end":255451,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255452,"byte_end":255455,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Index(a)` is the index `a`. It can also be created with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255456,"byte_end":255531,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ `SliceInfoElem::from(a)`. The Python equivalent is `[a]`. The macro","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255532,"byte_end":255603,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/ equivalent is `s![a]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255604,"byte_end":255630,"line_start":91,"line_end":91,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255631,"byte_end":255634,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Slice { start: 0, end: None, step: 1 }` is the full range","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255635,"byte_end":255712,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ of an axis. It can also be created with `SliceInfoElem::from(..)`. The","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255713,"byte_end":255787,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/ Python equivalent is `[:]`. The macro equivalent is `s![..]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255788,"byte_end":255853,"line_start":95,"line_end":95,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255854,"byte_end":255857,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Slice { start: a, end: Some(b), step: 2 }` is every second","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255858,"byte_end":255936,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ element from `a` until `b`. It can also be created with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255937,"byte_end":255996,"line_start":98,"line_end":98,"column_start":1,"column_end":60}},{"value":"/ `SliceInfoElem::from(Slice::from(a..b).step_by(2))`. The Python equivalent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":255997,"byte_end":256075,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/ is `[a:b:2]`. The macro equivalent is `s![a..b;2]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256076,"byte_end":256131,"line_start":100,"line_end":100,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256132,"byte_end":256135,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::Slice { start: a, end: None, step: -1 }` is every element,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256136,"byte_end":256214,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ from `a` until the end, in reverse order. It can also be created with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256215,"byte_end":256288,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/ `SliceInfoElem::from(Slice::from(a..).step_by(-1))`. The Python equivalent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256289,"byte_end":256367,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ is `[a::-1]`. The macro equivalent is `s![a..;-1]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256368,"byte_end":256423,"line_start":105,"line_end":105,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256424,"byte_end":256427,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `SliceInfoElem::NewAxis` is a new axis of length 1. It can also be created","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256428,"byte_end":256506,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ with `SliceInfoElem::from(NewAxis)`. The Python equivalent is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256507,"byte_end":256572,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ `[np.newaxis]`. The macro equivalent is `s![NewAxis]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":256573,"byte_end":256631,"line_start":109,"line_end":109,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257493,"byte_end":257501,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"is_slice","qualname":"<SliceInfoElem>::is_slice","value":"pub fn is_slice(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Slice` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `Slice` value.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257433,"byte_end":257481,"line_start":133,"line_end":133,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257643,"byte_end":257651,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"is_index","qualname":"<SliceInfoElem>::is_index","value":"pub fn is_index(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is an `Index` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is an `Index` value.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257582,"byte_end":257631,"line_start":138,"line_end":138,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257790,"byte_end":257801,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"is_new_axis","qualname":"<SliceInfoElem>::is_new_axis","value":"pub fn is_new_axis(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `NewAxis` value.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a `NewAxis` value.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257728,"byte_end":257778,"line_start":143,"line_end":143,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262272,"byte_end":262280,"line_start":298,"line_end":298,"column_start":18,"column_end":26},"name":"SliceArg","qualname":"::slice::SliceArg","value":"SliceArg<D: Dimension>: AsRef<[SliceInfoElem]>","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":6092}],"decl_id":null,"docs":" A type that can slice an array of dimension `D`.","sig":null,"attributes":[{"value":"/ A type that can slice an array of dimension `D`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":261890,"byte_end":261942,"line_start":292,"line_end":292,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":261943,"byte_end":261946,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ This trait is unsafe to implement because the implementation must ensure","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":261947,"byte_end":262023,"line_start":294,"line_end":294,"column_start":1,"column_end":77}},{"value":"/ that `D`, `Self::OutDim`, `self.in_dim()`, and `self.out_ndim()` are","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262024,"byte_end":262096,"line_start":295,"line_end":295,"column_start":1,"column_end":73}},{"value":"/ consistent with the `&[SliceInfoElem]` returned by `self.as_ref()` and that","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262097,"byte_end":262176,"line_start":296,"line_end":296,"column_start":1,"column_end":80}},{"value":"/ `self.as_ref()` always returns the same value when called multiple times.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262177,"byte_end":262254,"line_start":297,"line_end":297,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":2396},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262374,"byte_end":262380,"line_start":300,"line_end":300,"column_start":10,"column_end":16},"name":"OutDim","qualname":"::slice::SliceArg::OutDim","value":"type OutDim: Dimension;","parent":{"krate":0,"index":2394},"children":[],"decl_id":null,"docs":" Dimensionality of the output array.\n","sig":null,"attributes":[{"value":"/ Dimensionality of the output array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262325,"byte_end":262364,"line_start":299,"line_end":299,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262456,"byte_end":262463,"line_start":303,"line_end":303,"column_start":8,"column_end":15},"name":"in_ndim","qualname":"::slice::SliceArg::in_ndim","value":"pub fn in_ndim(&Self) -> usize","parent":{"krate":0,"index":2394},"children":[],"decl_id":null,"docs":" Returns the number of axes in the input array.\n","sig":null,"attributes":[{"value":"/ Returns the number of axes in the input array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262398,"byte_end":262448,"line_start":302,"line_end":302,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262545,"byte_end":262553,"line_start":306,"line_end":306,"column_start":8,"column_end":16},"name":"out_ndim","qualname":"::slice::SliceArg::out_ndim","value":"pub fn out_ndim(&Self) -> usize","parent":{"krate":0,"index":2394},"children":[],"decl_id":null,"docs":" Returns the number of axes in the output array.\n","sig":null,"attributes":[{"value":"/ Returns the number of axes in the output array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262486,"byte_end":262537,"line_start":305,"line_end":305,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":6145},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264777,"byte_end":264786,"line_start":402,"line_end":402,"column_start":12,"column_end":21},"name":"SliceInfo","qualname":"::slice::SliceInfo","value":"SliceInfo {  }","parent":null,"children":[{"krate":0,"index":6149},{"krate":0,"index":6150},{"krate":0,"index":6151}],"decl_id":null,"docs":" Represents all of the necessary information to perform a slice.","sig":null,"attributes":[{"value":"/ Represents all of the necessary information to perform a slice.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264184,"byte_end":264251,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264252,"byte_end":264255,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ The type `T` is typically `[SliceInfoElem; n]`, `&[SliceInfoElem]`, or","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264256,"byte_end":264330,"line_start":393,"line_end":393,"column_start":1,"column_end":75}},{"value":"/ `Vec<SliceInfoElem>`. The type `Din` is the dimension of the array to be","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264331,"byte_end":264407,"line_start":394,"line_end":394,"column_start":1,"column_end":77}},{"value":"/ sliced, and `Dout` is the output dimension after calling [`.slice()`]. Note","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264408,"byte_end":264487,"line_start":395,"line_end":395,"column_start":1,"column_end":80}},{"value":"/ that if `Din` is a fixed dimension type (`Ix0`, `Ix1`, `Ix2`, etc.), the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264488,"byte_end":264564,"line_start":396,"line_end":396,"column_start":1,"column_end":77}},{"value":"/ `SliceInfo` instance can still be used to slice an array with dimension","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264565,"byte_end":264640,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/ `IxDyn` as long as the number of axes matches.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264641,"byte_end":264691,"line_start":398,"line_end":398,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264692,"byte_end":264695,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ [`.slice()`]: struct.ArrayBase.html#method.slice","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264696,"byte_end":264748,"line_start":400,"line_end":400,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266110,"byte_end":266123,"line_start":453,"line_end":453,"column_start":19,"column_end":32},"name":"new_unchecked","qualname":"<SliceInfo<T, Din, Dout>>::new_unchecked","value":"pub unsafe fn new_unchecked(T, PhantomData<Din>, PhantomData<Dout>)\n-> SliceInfo<T, Din, Dout>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceInfo` instance.","sig":null,"attributes":[{"value":"/ Returns a new `SliceInfo` instance.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":265733,"byte_end":265772,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":265777,"byte_end":265780,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of `ndarray`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":265785,"byte_end":265848,"line_start":445,"line_end":445,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":265853,"byte_end":265856,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":265861,"byte_end":265873,"line_start":447,"line_end":447,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":265878,"byte_end":265881,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `in_dim` and `out_dim` are consistent with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":265886,"byte_end":265960,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ `indices` and that `indices.as_ref()` always returns the same value","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":265965,"byte_end":266036,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ when called multiple times.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266041,"byte_end":266072,"line_start":451,"line_end":451,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266912,"byte_end":266915,"line_start":479,"line_end":479,"column_start":19,"column_end":22},"name":"new","qualname":"<SliceInfo<T, Din, Dout>>::new","value":"pub unsafe fn new(T) -> Result<SliceInfo<T, Din, Dout>, ShapeError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `SliceInfo` instance.","sig":null,"attributes":[{"value":"/ Returns a new `SliceInfo` instance.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266547,"byte_end":266586,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266591,"byte_end":266594,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Errors if `Din` or `Dout` is not consistent with `indices`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266599,"byte_end":266662,"line_start":471,"line_end":471,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266667,"byte_end":266670,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ For common types, a safe alternative is to use `TryFrom` instead.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266675,"byte_end":266744,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266749,"byte_end":266752,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266757,"byte_end":266769,"line_start":475,"line_end":475,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266774,"byte_end":266777,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure `indices.as_ref()` always returns the same value","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266782,"byte_end":266857,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ when called multiple times.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":266862,"byte_end":266893,"line_start":478,"line_end":478,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267510,"byte_end":267517,"line_start":494,"line_end":494,"column_start":12,"column_end":19},"name":"in_ndim","qualname":"<SliceInfo<T, Din, Dout>>::in_ndim","value":"pub fn in_ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of dimensions of the input array for\n [`.slice()`](struct.ArrayBase.html#method.slice).","sig":null,"attributes":[{"value":"/ Returns the number of dimensions of the input array for","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267176,"byte_end":267235,"line_start":488,"line_end":488,"column_start":5,"column_end":64}},{"value":"/ [`.slice()`](struct.ArrayBase.html#method.slice).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267240,"byte_end":267293,"line_start":489,"line_end":489,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267298,"byte_end":267301,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ If `Din` is a fixed-size dimension type, then this is equivalent to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267306,"byte_end":267377,"line_start":491,"line_end":491,"column_start":5,"column_end":76}},{"value":"/ `Din::NDIM.unwrap()`. Otherwise, the value is calculated by iterating","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267382,"byte_end":267455,"line_start":492,"line_end":492,"column_start":5,"column_end":78}},{"value":"/ over the `SliceInfoElem` elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267460,"byte_end":267498,"line_start":493,"line_end":493,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":268038,"byte_end":268046,"line_start":509,"line_end":509,"column_start":12,"column_end":20},"name":"out_ndim","qualname":"<SliceInfo<T, Din, Dout>>::out_ndim","value":"pub fn out_ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of dimensions after calling\n [`.slice()`](struct.ArrayBase.html#method.slice) (including taking\n subviews).","sig":null,"attributes":[{"value":"/ Returns the number of dimensions after calling","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267675,"byte_end":267725,"line_start":502,"line_end":502,"column_start":5,"column_end":55}},{"value":"/ [`.slice()`](struct.ArrayBase.html#method.slice) (including taking","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267730,"byte_end":267800,"line_start":503,"line_end":503,"column_start":5,"column_end":75}},{"value":"/ subviews).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267805,"byte_end":267819,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267824,"byte_end":267827,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ If `Dout` is a fixed-size dimension type, then this is equivalent to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267832,"byte_end":267904,"line_start":506,"line_end":506,"column_start":5,"column_end":77}},{"value":"/ `Dout::NDIM.unwrap()`. Otherwise, the value is calculated by iterating","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267909,"byte_end":267983,"line_start":507,"line_end":507,"column_start":5,"column_end":79}},{"value":"/ over the `SliceInfoElem` elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":267988,"byte_end":268026,"line_start":508,"line_end":508,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":271387,"byte_end":271399,"line_start":638,"line_end":638,"column_start":11,"column_end":23},"name":"SliceNextDim","qualname":"::slice::SliceNextDim","value":"SliceNextDim","parent":null,"children":[{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2473}],"decl_id":null,"docs":" Trait for determining dimensionality of input and output for [`s!`] macro.\n","sig":null,"attributes":[{"value":"/ Trait for determining dimensionality of input and output for [`s!`] macro.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":271283,"byte_end":271361,"line_start":636,"line_end":636,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":271496,"byte_end":271501,"line_start":640,"line_end":640,"column_start":10,"column_end":15},"name":"InDim","qualname":"::slice::SliceNextDim::InDim","value":"type InDim: Dimension;","parent":{"krate":0,"index":2468},"children":[],"decl_id":null,"docs":" Number of dimensions that this slicing argument consumes in the input array.\n","sig":null,"attributes":[{"value":"/ Number of dimensions that this slicing argument consumes in the input array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":271406,"byte_end":271486,"line_start":639,"line_end":639,"column_start":5,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":271609,"byte_end":271615,"line_start":642,"line_end":642,"column_start":10,"column_end":16},"name":"OutDim","qualname":"::slice::SliceNextDim::OutDim","value":"type OutDim: Dimension;","parent":{"krate":0,"index":2468},"children":[],"decl_id":null,"docs":" Number of dimensions that this slicing argument produces in the output array.\n","sig":null,"attributes":[{"value":"/ Number of dimensions that this slicing argument produces in the output array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":271518,"byte_end":271599,"line_start":641,"line_end":641,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":271636,"byte_end":271647,"line_start":644,"line_end":644,"column_start":8,"column_end":19},"name":"next_in_dim","qualname":"::slice::SliceNextDim::next_in_dim","value":"pub fn next_in_dim<D>(&Self, PhantomData<D>)\n-> PhantomData<<D as DimAdd<Self::InDim>>::Output> where D: Dimension +\nDimAdd<Self::InDim>","parent":{"krate":0,"index":2468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":271822,"byte_end":271834,"line_start":651,"line_end":651,"column_start":8,"column_end":20},"name":"next_out_dim","qualname":"::slice::SliceNextDim::next_out_dim","value":"pub fn next_out_dim<D>(&Self, PhantomData<D>)\n-> PhantomData<<D as DimAdd<Self::OutDim>>::Output> where D: Dimension +\nDimAdd<Self::OutDim>","parent":{"krate":0,"index":2468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2477},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":280958,"byte_end":280971,"line_start":885,"line_end":885,"column_start":11,"column_end":24},"name":"MultiSliceArg","qualname":"::slice::MultiSliceArg","value":"MultiSliceArg<'a, A, D>","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":6276}],"decl_id":null,"docs":" Slicing information describing multiple mutable, disjoint slices.","sig":null,"attributes":[{"value":"/ Slicing information describing multiple mutable, disjoint slices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":280724,"byte_end":280793,"line_start":881,"line_end":881,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":280794,"byte_end":280797,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ It's unfortunate that we need `'a` and `A` to be parameters of the trait,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":280798,"byte_end":280875,"line_start":883,"line_end":883,"column_start":1,"column_end":78}},{"value":"/ but they're necessary until Rust supports generic associated types.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":280876,"byte_end":280947,"line_start":884,"line_end":884,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":281093,"byte_end":281099,"line_start":891,"line_end":891,"column_start":10,"column_end":16},"name":"Output","qualname":"::slice::MultiSliceArg::Output","value":"type Output;","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" The type of the slices created by `.multi_slice_move()`.\n","sig":null,"attributes":[{"value":"/ The type of the slices created by `.multi_slice_move()`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":281023,"byte_end":281083,"line_start":890,"line_end":890,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":281300,"byte_end":281316,"line_start":897,"line_end":897,"column_start":8,"column_end":24},"name":"multi_slice_move","qualname":"::slice::MultiSliceArg::multi_slice_move","value":"pub fn multi_slice_move(&Self, ArrayViewMut) -> Self::Output","parent":{"krate":0,"index":2477},"children":[],"decl_id":null,"docs":" Split the view into multiple disjoint slices.","sig":null,"attributes":[{"value":"/ Split the view into multiple disjoint slices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":281106,"byte_end":281155,"line_start":893,"line_end":893,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":281160,"byte_end":281163,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ **Panics** if performing any individual slice panics or if the slices","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":281168,"byte_end":281241,"line_start":895,"line_end":895,"column_start":5,"column_end":78}},{"value":"/ are not disjoint (i.e. if they intersect).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":281246,"byte_end":281292,"line_start":896,"line_end":896,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286119,"byte_end":286124,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"stack","qualname":"::stacking::stack","value":"pub fn stack<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D::Larger>, ShapeError> where A: Clone, D: Dimension,\nD::Larger: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Stack arrays along the new axis.","sig":null,"attributes":[{"value":"/ Stack arrays along the new axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285503,"byte_end":285539,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285540,"byte_end":285543,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285544,"byte_end":285599,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285600,"byte_end":285666,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285667,"byte_end":285725,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285726,"byte_end":285729,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285730,"byte_end":285737,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285738,"byte_end":285763,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285764,"byte_end":285767,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr2, arr3, stack, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285768,"byte_end":285811,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285812,"byte_end":285815,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285816,"byte_end":285833,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285834,"byte_end":285837,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285838,"byte_end":285866,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285867,"byte_end":285897,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285898,"byte_end":285910,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/     stack(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285911,"byte_end":285956,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/     == Ok(arr3(&[[[2., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285957,"byte_end":285988,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":285989,"byte_end":286021,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/                  [[2., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286022,"byte_end":286053,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]]]))","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286054,"byte_end":286088,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286089,"byte_end":286095,"line_start":36,"line_end":36,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286096,"byte_end":286103,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286104,"byte_end":286111,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286993,"byte_end":287004,"line_start":72,"line_end":72,"column_start":8,"column_end":19},"name":"concatenate","qualname":"::stacking::concatenate","value":"pub fn concatenate<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D>, ShapeError> where A: Clone, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Concatenate arrays along the given axis.","sig":null,"attributes":[{"value":"/ Concatenate arrays along the given axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286353,"byte_end":286397,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286398,"byte_end":286401,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes, apart from along `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286402,"byte_end":286482,"line_start":54,"line_end":54,"column_start":1,"column_end":81}},{"value":"/ (may be made more flexible in the future).<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286483,"byte_end":286533,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286534,"byte_end":286600,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286601,"byte_end":286659,"line_start":57,"line_end":57,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286660,"byte_end":286663,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286664,"byte_end":286671,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{arr2, Axis, concatenate};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286672,"byte_end":286715,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286716,"byte_end":286719,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286720,"byte_end":286748,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286749,"byte_end":286779,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286780,"byte_end":286792,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/     concatenate(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286793,"byte_end":286844,"line_start":65,"line_end":65,"column_start":1,"column_end":52}},{"value":"/     == Ok(arr2(&[[2., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286845,"byte_end":286875,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/                  [3., 3.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286876,"byte_end":286906,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/                  [2., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286907,"byte_end":286937,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/                  [3., 3.]]))","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286938,"byte_end":286970,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286971,"byte_end":286977,"line_start":70,"line_end":70,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":286978,"byte_end":286985,"line_start":71,"line_end":71,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288937,"byte_end":288951,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"stack_new_axis","qualname":"::stacking::stack_new_axis","value":"pub fn stack_new_axis<A, D>(Axis, &[ArrayView<, A, D>])\n-> Result<Array<A, D::Larger>, ShapeError> where A: Clone, D: Dimension,\nD::Larger: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Stack arrays along the new axis.","sig":null,"attributes":[{"value":"deprecated(note = \"Use under the name stack instead.\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288231,"byte_end":288302,"line_start":111,"line_end":111,"column_start":1,"column_end":72}},{"value":"/ Stack arrays along the new axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288303,"byte_end":288339,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288340,"byte_end":288343,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ***Errors*** if the arrays have mismatching shapes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288344,"byte_end":288399,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ ***Errors*** if `arrays` is empty, if `axis` is out of bounds,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288400,"byte_end":288466,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"/ if the result is larger than is possible to represent.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288467,"byte_end":288525,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288526,"byte_end":288529,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288530,"byte_end":288537,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ extern crate ndarray;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288538,"byte_end":288563,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288564,"byte_end":288567,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr2, arr3, stack_new_axis, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288568,"byte_end":288620,"line_start":121,"line_end":121,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288621,"byte_end":288624,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288625,"byte_end":288642,"line_start":123,"line_end":123,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288643,"byte_end":288646,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[2., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288647,"byte_end":288675,"line_start":125,"line_end":125,"column_start":1,"column_end":29}},{"value":"/                [3., 3.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288676,"byte_end":288706,"line_start":126,"line_end":126,"column_start":1,"column_end":31}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288707,"byte_end":288719,"line_start":127,"line_end":127,"column_start":1,"column_end":13}},{"value":"/     stack_new_axis(Axis(0), &[a.view(), a.view()])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288720,"byte_end":288774,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/     == Ok(arr3(&[[[2., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288775,"byte_end":288806,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288807,"byte_end":288839,"line_start":130,"line_end":130,"column_start":1,"column_end":33}},{"value":"/                  [[2., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288840,"byte_end":288871,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/                   [3., 3.]]]))","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288872,"byte_end":288906,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288907,"byte_end":288913,"line_start":133,"line_end":133,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288914,"byte_end":288921,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/stacking.rs","byte_start":288922,"byte_end":288929,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331802,"byte_end":331816,"line_start":13,"line_end":13,"column_start":11,"column_end":25},"name":"IntoNdProducer","qualname":"::zip::ndproducer::IntoNdProducer","value":"IntoNdProducer","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583}],"decl_id":null,"docs":" Argument conversion into a producer.","sig":null,"attributes":[{"value":"/ Argument conversion into a producer.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331587,"byte_end":331627,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331628,"byte_end":331631,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Slices and vectors can be used (equivalent to 1-dimensional array views).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331632,"byte_end":331709,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331710,"byte_end":331713,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait is like `IntoIterator` for `NdProducers` instead of iterators.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331714,"byte_end":331791,"line_start":12,"line_end":12,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331872,"byte_end":331876,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ndproducer::IntoNdProducer::Item","value":"type Item;","parent":{"krate":0,"index":2579},"children":[],"decl_id":null,"docs":" The element produced per iteration.\n","sig":null,"attributes":[{"value":"/ The element produced per iteration.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331823,"byte_end":331862,"line_start":14,"line_end":14,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331926,"byte_end":331929,"line_start":17,"line_end":17,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ndproducer::IntoNdProducer::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2579},"children":[],"decl_id":null,"docs":" Dimension type of the producer\n","sig":null,"attributes":[{"value":"/ Dimension type of the producer","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331882,"byte_end":331916,"line_start":16,"line_end":16,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":331951,"byte_end":331957,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Output","qualname":"::zip::ndproducer::IntoNdProducer::Output","value":"type Output: NdProducer<Dim = Self::Dim, Item = Self::Item>;","parent":{"krate":0,"index":2579},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332062,"byte_end":332075,"line_start":20,"line_end":20,"column_start":8,"column_end":21},"name":"into_producer","qualname":"::zip::ndproducer::IntoNdProducer::into_producer","value":"pub fn into_producer(Self) -> Self::Output","parent":{"krate":0,"index":2579},"children":[],"decl_id":null,"docs":" Convert the value into an `NdProducer`.\n","sig":null,"attributes":[{"value":"/ Convert the value into an `NdProducer`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332011,"byte_end":332054,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333202,"byte_end":333212,"line_start":55,"line_end":55,"column_start":11,"column_end":21},"name":"NdProducer","qualname":"::zip::ndproducer::NdProducer","value":"NdProducer","parent":null,"children":[{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":6335}],"decl_id":null,"docs":" A producer of an n-dimensional set of elements;\n for example an array view, mutable array view or an iterator\n that yields chunks.","sig":null,"attributes":[{"value":"/ A producer of an n-dimensional set of elements;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332297,"byte_end":332348,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"/ for example an array view, mutable array view or an iterator","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332349,"byte_end":332413,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ that yields chunks.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332414,"byte_end":332437,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332438,"byte_end":332441,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Producers are used as a arguments to [`Zip`](struct.Zip.html) and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332442,"byte_end":332511,"line_start":39,"line_end":39,"column_start":1,"column_end":70}},{"value":"/ [`azip!()`](macro.azip.html).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332512,"byte_end":332545,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332546,"byte_end":332549,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Comparison to `IntoIterator`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332550,"byte_end":332584,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332585,"byte_end":332588,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Most `NdProducers` are *iterable* (implement `IntoIterator`) but not directly","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332589,"byte_end":332670,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/ iterators. This separation is needed because the producer represents","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332671,"byte_end":332743,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ a multidimensional set of items, it can be split along a particular axis for","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332744,"byte_end":332824,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ parallelization, and it has no fixed correspondance to a sequence.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332825,"byte_end":332895,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332896,"byte_end":332899,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The natural exception is one dimensional producers, like `AxisIter`, which","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332900,"byte_end":332978,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ implement `Iterator` directly","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332979,"byte_end":333012,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ (`AxisIter` traverses a one dimensional sequence, along an axis, while","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333013,"byte_end":333087,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ *producing* multidimensional items).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333088,"byte_end":333128,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333129,"byte_end":333132,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ See also [`IntoNdProducer`](trait.IntoNdProducer.html)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333133,"byte_end":333191,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":2591},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333268,"byte_end":333272,"line_start":57,"line_end":57,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ndproducer::NdProducer::Item","value":"type Item;","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":" The element produced per iteration.\n","sig":null,"attributes":[{"value":"/ The element produced per iteration.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333219,"byte_end":333258,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2592},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333341,"byte_end":333344,"line_start":60,"line_end":60,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ndproducer::NdProducer::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":" Dimension type\n","sig":null,"attributes":[{"value":"/ Dimension type","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333313,"byte_end":333331,"line_start":59,"line_end":59,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":2593},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333683,"byte_end":333686,"line_start":68,"line_end":68,"column_start":10,"column_end":13},"name":"Ptr","qualname":"::zip::ndproducer::NdProducer::Ptr","value":"type Ptr: Offset<Stride = Self::Stride>;","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":" Pointer or stand-in for pointer\n","sig":null,"attributes":[{"value":"/ Pointer or stand-in for pointer","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333638,"byte_end":333673,"line_start":67,"line_end":67,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333770,"byte_end":333776,"line_start":71,"line_end":71,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ndproducer::NdProducer::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":" Pointer stride\n","sig":null,"attributes":[{"value":"/ Pointer stride","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333742,"byte_end":333760,"line_start":70,"line_end":70,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333811,"byte_end":333817,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"layout","qualname":"::zip::ndproducer::NdProducer::layout","value":"pub fn layout(&Self) -> Layout","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333885,"byte_end":333892,"line_start":76,"line_end":76,"column_start":8,"column_end":15},"name":"raw_dim","qualname":"::zip::ndproducer::NdProducer::raw_dim","value":"pub fn raw_dim(&Self) -> Self::Dim","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":" Return the shape of the producer.\n","sig":null,"attributes":[{"value":"/ Return the shape of the producer.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333840,"byte_end":333877,"line_start":75,"line_end":75,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":333940,"byte_end":333949,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"equal_dim","qualname":"::zip::ndproducer::NdProducer::equal_dim","value":"pub fn equal_dim(&Self, &Self::Dim) -> bool","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":334047,"byte_end":334053,"line_start":82,"line_end":82,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::zip::ndproducer::NdProducer::as_ptr","value":"pub fn as_ptr(&Self) -> Self::Ptr","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":334108,"byte_end":334114,"line_start":84,"line_end":84,"column_start":15,"column_end":21},"name":"as_ref","qualname":"::zip::ndproducer::NdProducer::as_ref","value":"pub unsafe fn as_ref(&Self, Self::Ptr) -> Self::Item","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":334186,"byte_end":334194,"line_start":86,"line_end":86,"column_start":15,"column_end":23},"name":"uget_ptr","qualname":"::zip::ndproducer::NdProducer::uget_ptr","value":"pub unsafe fn uget_ptr(&Self, &Self::Dim) -> Self::Ptr","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":334257,"byte_end":334266,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"stride_of","qualname":"::zip::ndproducer::NdProducer::stride_of","value":"pub fn stride_of(&Self, Axis) -> <Self::Ptr as Offset>::Stride","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":334346,"byte_end":334363,"line_start":90,"line_end":90,"column_start":8,"column_end":25},"name":"contiguous_stride","qualname":"::zip::ndproducer::NdProducer::contiguous_stride","value":"pub fn contiguous_stride(&Self) -> Self::Stride","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":334414,"byte_end":334422,"line_start":92,"line_end":92,"column_start":8,"column_end":16},"name":"split_at","qualname":"::zip::ndproducer::NdProducer::split_at","value":"pub fn split_at(Self, Axis, usize) -> (Self, Self) where Self: Sized","parent":{"krate":0,"index":2590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":334537,"byte_end":334543,"line_start":99,"line_end":99,"column_start":11,"column_end":17},"name":"Offset","qualname":"::zip::ndproducer::Offset","value":"Offset: Copy","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":6336}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2605},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":334561,"byte_end":334567,"line_start":100,"line_end":100,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ndproducer::Offset::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":334589,"byte_end":334602,"line_start":101,"line_end":101,"column_start":15,"column_end":28},"name":"stride_offset","qualname":"::zip::ndproducer::Offset::stride_offset","value":"pub unsafe fn stride_offset(Self, Self::Stride, usize) -> Self","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2770},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":295184,"byte_end":295190,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Output","qualname":"::zip::Broadcast::Output","value":"type Output: NdProducer<Dim = E::Dim>;","parent":{"krate":0,"index":2768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":296813,"byte_end":296817,"line_start":104,"line_end":104,"column_start":10,"column_end":14},"name":"Item","qualname":"::zip::ZippableTuple::Item","value":"type Item;","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":296828,"byte_end":296831,"line_start":105,"line_end":105,"column_start":10,"column_end":13},"name":"Ptr","qualname":"::zip::ZippableTuple::Ptr","value":"type Ptr: OffsetTuple<Args = Self::Stride> + Copy;","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":296883,"byte_end":296886,"line_start":106,"line_end":106,"column_start":10,"column_end":13},"name":"Dim","qualname":"::zip::ZippableTuple::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":296908,"byte_end":296914,"line_start":107,"line_end":107,"column_start":10,"column_end":16},"name":"Stride","qualname":"::zip::ZippableTuple::Stride","value":"type Stride: Copy;","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6345},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":300007,"byte_end":300010,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"Zip","qualname":"::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6351}],"decl_id":null,"docs":" Lock step function application across several arrays or other producers.","sig":null,"attributes":[{"value":"/ Lock step function application across several arrays or other producers.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297247,"byte_end":297323,"line_start":116,"line_end":116,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297324,"byte_end":297327,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Zip allows matching several producers to each other elementwise and applying","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297328,"byte_end":297408,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ a function over all tuples of elements (one item from each input at","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297409,"byte_end":297480,"line_start":119,"line_end":119,"column_start":1,"column_end":72}},{"value":"/ a time).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297481,"byte_end":297493,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297494,"byte_end":297497,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ In general, the zip uses a tuple of producers","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297498,"byte_end":297547,"line_start":122,"line_end":122,"column_start":1,"column_end":50}},{"value":"/ ([`NdProducer`](trait.NdProducer.html) trait) that all have to be of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297548,"byte_end":297624,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ same shape. The NdProducer implementation defines what its item type is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297625,"byte_end":297700,"line_start":124,"line_end":124,"column_start":1,"column_end":76}},{"value":"/ (for example if it's a shared reference, mutable reference or an array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297701,"byte_end":297775,"line_start":125,"line_end":125,"column_start":1,"column_end":75}},{"value":"/ view etc).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297776,"byte_end":297790,"line_start":126,"line_end":126,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297791,"byte_end":297794,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ If all the input arrays are of the same memory layout the zip performs much","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297795,"byte_end":297874,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ better and the compiler can usually vectorize the loop (if applicable).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297875,"byte_end":297950,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297951,"byte_end":297954,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The order elements are visited is not specified. The producers don’t have to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":297955,"byte_end":298037,"line_start":131,"line_end":131,"column_start":1,"column_end":81}},{"value":"/ have the same item type.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298038,"byte_end":298066,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298067,"byte_end":298070,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The `Zip` has two methods for function application: `for_each` and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298071,"byte_end":298141,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ `fold_while`. The zip object can be split, which allows parallelization.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298142,"byte_end":298218,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"/ A read-only zip object (no mutable producers) can be cloned.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298219,"byte_end":298283,"line_start":136,"line_end":136,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298284,"byte_end":298287,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ See also the [`azip!()` macro][az] which offers a convenient shorthand","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298288,"byte_end":298362,"line_start":138,"line_end":138,"column_start":1,"column_end":75}},{"value":"/ to common ways to use `Zip`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298363,"byte_end":298395,"line_start":139,"line_end":139,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298396,"byte_end":298399,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [az]: macro.azip.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298400,"byte_end":298425,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298426,"byte_end":298429,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298430,"byte_end":298437,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298438,"byte_end":298459,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298460,"byte_end":298484,"line_start":145,"line_end":145,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298485,"byte_end":298488,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ type M = Array2<f64>;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298489,"byte_end":298514,"line_start":147,"line_end":147,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298515,"byte_end":298518,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // Create four 2d arrays of the same size","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298519,"byte_end":298564,"line_start":149,"line_end":149,"column_start":1,"column_end":46}},{"value":"/ let mut a = M::zeros((64, 32));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298565,"byte_end":298600,"line_start":150,"line_end":150,"column_start":1,"column_end":36}},{"value":"/ let b = M::from_elem(a.dim(), 1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298601,"byte_end":298639,"line_start":151,"line_end":151,"column_start":1,"column_end":39}},{"value":"/ let c = M::from_elem(a.dim(), 2.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298640,"byte_end":298678,"line_start":152,"line_end":152,"column_start":1,"column_end":39}},{"value":"/ let d = M::from_elem(a.dim(), 3.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298679,"byte_end":298717,"line_start":153,"line_end":153,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298718,"byte_end":298721,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ // Example 1: Perform an elementwise arithmetic operation across","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298722,"byte_end":298790,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"/ // the four arrays a, b, c, d.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298791,"byte_end":298825,"line_start":156,"line_end":156,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298826,"byte_end":298829,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Zip::from(&mut a)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298830,"byte_end":298851,"line_start":158,"line_end":158,"column_start":1,"column_end":22}},{"value":"/     .and(&b)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298852,"byte_end":298868,"line_start":159,"line_end":159,"column_start":1,"column_end":17}},{"value":"/     .and(&c)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298869,"byte_end":298885,"line_start":160,"line_end":160,"column_start":1,"column_end":17}},{"value":"/     .and(&d)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298886,"byte_end":298902,"line_start":161,"line_end":161,"column_start":1,"column_end":17}},{"value":"/     .for_each(|w, &x, &y, &z| {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298903,"byte_end":298938,"line_start":162,"line_end":162,"column_start":1,"column_end":36}},{"value":"/         *w += x + y * z;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298939,"byte_end":298967,"line_start":163,"line_end":163,"column_start":1,"column_end":29}},{"value":"/     });","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298968,"byte_end":298979,"line_start":164,"line_end":164,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298980,"byte_end":298983,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Example 2: Create a new array `totals` with one entry per row of `a`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":298984,"byte_end":299060,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ //  Use Zip to traverse the rows of `a` and assign to the corresponding","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299061,"byte_end":299136,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"/ //  entry in `totals` with the sum across each row.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299137,"byte_end":299192,"line_start":168,"line_end":168,"column_start":1,"column_end":56}},{"value":"/ //  This is possible because the producer for `totals` and the row producer","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299193,"byte_end":299272,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ //  for `a` have the same shape and dimensionality.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299273,"byte_end":299328,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/ //  The rows producer yields one array view (`row`) per iteration.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299329,"byte_end":299399,"line_start":171,"line_end":171,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299400,"byte_end":299403,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{Array1, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299404,"byte_end":299436,"line_start":173,"line_end":173,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299437,"byte_end":299440,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ let mut totals = Array1::zeros(a.nrows());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299441,"byte_end":299487,"line_start":175,"line_end":175,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299488,"byte_end":299491,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Zip::from(&mut totals)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299492,"byte_end":299518,"line_start":177,"line_end":177,"column_start":1,"column_end":27}},{"value":"/     .and(a.rows())","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299519,"byte_end":299541,"line_start":178,"line_end":178,"column_start":1,"column_end":23}},{"value":"/     .for_each(|totals, row| *totals = row.sum());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299542,"byte_end":299595,"line_start":179,"line_end":179,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299596,"byte_end":299599,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ // Check the result against the built in `.sum_axis()` along axis 1.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299600,"byte_end":299672,"line_start":181,"line_end":181,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(totals, a.sum_axis(Axis(1)));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299673,"byte_end":299717,"line_start":182,"line_end":182,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299718,"byte_end":299721,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299722,"byte_end":299725,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ // Example 3: Recreate Example 2 using map_collect to make a new array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299726,"byte_end":299800,"line_start":185,"line_end":185,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299801,"byte_end":299804,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ let totals2 = Zip::from(a.rows()).map_collect(|row| row.sum());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299805,"byte_end":299872,"line_start":187,"line_end":187,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299873,"byte_end":299876,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ // Check the result against the previous example.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299877,"byte_end":299930,"line_start":189,"line_end":189,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(totals, totals2);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299931,"byte_end":299963,"line_start":190,"line_end":190,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":299964,"byte_end":299971,"line_start":191,"line_end":191,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":300527,"byte_end":300531,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"from","qualname":"<Zip<(P,), D>>::from","value":"pub fn from<IP>(IP) -> Self where IP: IntoNdProducer<Dim = D, Output = D, Item\n= D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` from the input array or other producer `p`.","sig":null,"attributes":[{"value":"/ Create a new `Zip` from the input array or other producer `p`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":300308,"byte_end":300374,"line_start":208,"line_end":208,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":300379,"byte_end":300382,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The Zip will take the exact dimension of `p` and all inputs","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":300387,"byte_end":300450,"line_start":210,"line_end":210,"column_start":5,"column_end":68}},{"value":"/ must have the same dimensions (or be broadcast to them).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":300455,"byte_end":300515,"line_start":211,"line_end":211,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301270,"byte_end":301277,"line_start":238,"line_end":238,"column_start":12,"column_end":19},"name":"indexed","qualname":"<Zip<(Indices<D>, P), D>>::indexed","value":"pub fn indexed<IP>(IP) -> Self where IP: IntoNdProducer<Dim = D, Output = D,\nItem = D>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Zip` with an index producer and the producer `p`.","sig":null,"attributes":[{"value":"/ Create a new `Zip` with an index producer and the producer `p`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301000,"byte_end":301067,"line_start":232,"line_end":232,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301072,"byte_end":301075,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The Zip will take the exact dimension of `p` and all inputs","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301080,"byte_end":301143,"line_start":234,"line_end":234,"column_start":5,"column_end":68}},{"value":"/ must have the same dimensions (or be broadcast to them).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301148,"byte_end":301208,"line_start":235,"line_end":235,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301213,"byte_end":301216,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ *Note:* Indexed zip has overhead.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301221,"byte_end":301258,"line_start":237,"line_end":237,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301920,"byte_end":301924,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"size","qualname":"<Zip<Parts, D>>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return a the number of element tuples in the Zip\n","sig":null,"attributes":[{"value":"/ Return a the number of element tuples in the Zip","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301856,"byte_end":301908,"line_start":267,"line_end":267,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":308616,"byte_end":308620,"line_start":475,"line_end":475,"column_start":10,"column_end":14},"name":"Args","qualname":"::zip::OffsetTuple::Args","value":"type Args;","parent":{"krate":0,"index":2845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6919},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326246,"byte_end":326254,"line_start":928,"line_end":928,"column_start":5,"column_end":13},"name":"Continue","qualname":"::zip::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":6917},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[{"value":"/ Continue folding with this value","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326205,"byte_end":326241,"line_start":927,"line_end":927,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6922},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326315,"byte_end":326319,"line_start":930,"line_end":930,"column_start":5,"column_end":9},"name":"Done","qualname":"::zip::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":6917},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[{"value":"/ Fold is complete and will return this value","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326263,"byte_end":326310,"line_start":929,"line_end":929,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":6917},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326186,"byte_end":326195,"line_start":926,"line_end":926,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::zip::FoldWhile","value":"pub enum FoldWhile<T> { Continue(T), Done(T), }","parent":null,"children":[{"krate":0,"index":6919},{"krate":0,"index":6922}],"decl_id":null,"docs":" Value controlling the execution of `.fold_while` on `Zip`.\n","sig":null,"attributes":[{"value":"/ Value controlling the execution of `.fold_while` on `Zip`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326084,"byte_end":326146,"line_start":924,"line_end":924,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326392,"byte_end":326402,"line_start":935,"line_end":935,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value\n","sig":null,"attributes":[{"value":"/ Return the inner value","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326354,"byte_end":326380,"line_start":934,"line_end":934,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326584,"byte_end":326591,"line_start":942,"line_end":942,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if it is `Done`, false if `Continue`\n","sig":null,"attributes":[{"value":"/ Return true if it is `Done`, false if `Continue`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326520,"byte_end":326572,"line_start":941,"line_end":941,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":6933},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382830,"byte_end":382834,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"Axes","qualname":"::dimension::axes::Axes","value":"Axes {  }","parent":null,"children":[{"krate":0,"index":6936},{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":6939}],"decl_id":null,"docs":" An iterator over the length and stride of each axis of an array.","sig":null,"attributes":[{"value":"/ An iterator over the length and stride of each axis of an array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382157,"byte_end":382225,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382226,"byte_end":382229,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This iterator is created from the array method","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382230,"byte_end":382280,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ [`.axes()`](crate::ArrayBase::axes).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382281,"byte_end":382321,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382322,"byte_end":382325,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is [`AxisDescription`].","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382326,"byte_end":382375,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382376,"byte_end":382379,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382380,"byte_end":382394,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382395,"byte_end":382398,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382399,"byte_end":382406,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382407,"byte_end":382431,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382432,"byte_end":382454,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382455,"byte_end":382458,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let a = Array3::<f32>::zeros((3, 5, 4));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382459,"byte_end":382503,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382504,"byte_end":382507,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // find the largest axis in the array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382508,"byte_end":382549,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ // check the axis index and its length","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382550,"byte_end":382592,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382593,"byte_end":382596,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let largest_axis = a.axes()","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382597,"byte_end":382628,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/                     .max_by_key(|ax| ax.len)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382629,"byte_end":382677,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/                     .unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382678,"byte_end":382712,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(largest_axis.axis, Axis(1));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382713,"byte_end":382756,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(largest_axis.len, 5);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382757,"byte_end":382793,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382794,"byte_end":382801,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6944},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383001,"byte_end":383016,"line_start":50,"line_end":50,"column_start":12,"column_end":27},"name":"AxisDescription","qualname":"::dimension::axes::AxisDescription","value":"AxisDescription { axis, len, stride }","parent":null,"children":[{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6947}],"decl_id":null,"docs":" Description of the axis, its length and its stride.\n","sig":null,"attributes":[{"value":"/ Description of the axis, its length and its stride.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":382917,"byte_end":382972,"line_start":48,"line_end":48,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":6945},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383059,"byte_end":383063,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"name":"axis","qualname":"::dimension::axes::AxisDescription::axis","value":"dimension::axis::Axis","parent":{"krate":0,"index":6944},"children":[],"decl_id":null,"docs":" Axis identifier (index)\n","sig":null,"attributes":[{"value":"/ Axis identifier (index)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383023,"byte_end":383050,"line_start":51,"line_end":51,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":6946},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383135,"byte_end":383138,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"name":"len","qualname":"::dimension::axes::AxisDescription::len","value":"usize","parent":{"krate":0,"index":6944},"children":[],"decl_id":null,"docs":" Length in count of elements of the current axis\n","sig":null,"attributes":[{"value":"/ Length in count of elements of the current axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383075,"byte_end":383126,"line_start":53,"line_end":53,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":6947},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383211,"byte_end":383217,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"stride","qualname":"::dimension::axes::AxisDescription::stride","value":"isize","parent":{"krate":0,"index":6944},"children":[],"decl_id":null,"docs":" Stride in count of elements of the current axis\n","sig":null,"attributes":[{"value":"/ Stride in count of elements of the current axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383151,"byte_end":383202,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383564,"byte_end":383568,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"axis","qualname":"<AxisDescription>::axis","value":"pub fn axis(Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Return axis\n","sig":null,"attributes":[{"value":"/ Return axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383445,"byte_end":383460,"line_start":65,"line_end":65,"column_start":5,"column_end":20}},{"value":"deprecated(note = \"Use .axis field instead\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383465,"byte_end":383530,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383535,"byte_end":383552,"line_start":67,"line_end":67,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383733,"byte_end":383736,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"len","qualname":"<AxisDescription>::len","value":"pub fn len(Self) -> Ix","parent":null,"children":[],"decl_id":null,"docs":" Return length\n","sig":null,"attributes":[{"value":"/ Return length","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383613,"byte_end":383630,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"deprecated(note = \"Use .len field instead\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383635,"byte_end":383699,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383704,"byte_end":383721,"line_start":73,"line_end":73,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383901,"byte_end":383907,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"stride","qualname":"<AxisDescription>::stride","value":"pub fn stride(Self) -> Ixs","parent":null,"children":[],"decl_id":null,"docs":" Return stride\n","sig":null,"attributes":[{"value":"/ Return stride","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383778,"byte_end":383795,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"deprecated(note = \"Use .stride field instead\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383800,"byte_end":383867,"line_start":78,"line_end":78,"column_start":5,"column_end":72}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383872,"byte_end":383889,"line_start":79,"line_end":79,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":6960},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":387111,"byte_end":387115,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Axis","qualname":"::dimension::axis::Axis","value":"","parent":null,"children":[],"decl_id":null,"docs":" An axis index.","sig":null,"attributes":[{"value":"/ An axis index.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386217,"byte_end":386235,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386236,"byte_end":386239,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An axis one of an array’s “dimensions”; an *n*-dimensional array has *n*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386240,"byte_end":386322,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ axes.  Axis *0* is the array’s outermost axis and *n*-1 is the innermost.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386323,"byte_end":386402,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386403,"byte_end":386406,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ All array axis arguments use this type to make the code easier to write","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386407,"byte_end":386482,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ correctly and easier to understand.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386483,"byte_end":386522,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/ ","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386523,"byte_end":386527,"line_start":16,"line_end":16,"column_start":1,"column_end":5}},{"value":"/ For example: in a method like `index_axis(axis, index)` the code becomes","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386528,"byte_end":386604,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ self-explanatory when it's called like `.index_axis(Axis(1), i)`; it's","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386605,"byte_end":386679,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ evident which integer is the axis number and which is the index.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386680,"byte_end":386748,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386749,"byte_end":386752,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note: This type does **not** implement From/Into usize and similar trait","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386753,"byte_end":386829,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ based conversions, because we want to preserve code readability and quality.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386830,"byte_end":386910,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386911,"byte_end":386914,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Axis(1)` in itself is a very clear code style and the style that should be","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386915,"byte_end":386994,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ avoided is code like `1.into()`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":386995,"byte_end":387031,"line_start":25,"line_end":25,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":6962},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":387116,"byte_end":387125,"line_start":27,"line_end":27,"column_start":17,"column_end":26},"name":"0","qualname":"::dimension::axis::Axis::0","value":"usize","parent":{"krate":0,"index":6960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":387212,"byte_end":387217,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"index","qualname":"<Axis>::index","value":"pub fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the axis.\n","sig":null,"attributes":[{"value":"/ Return the index of the axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":387145,"byte_end":387178,"line_start":30,"line_end":30,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":387183,"byte_end":387200,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/broadcast.rs","byte_start":388495,"byte_end":388501,"line_start":37,"line_end":37,"column_start":11,"column_end":17},"name":"DimMax","qualname":"::dimension::broadcast::DimMax","value":"DimMax<Other: Dimension>","parent":null,"children":[{"krate":0,"index":3021}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3021},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/broadcast.rs","byte_start":388588,"byte_end":388594,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Output","qualname":"::dimension::broadcast::DimMax::Output","value":"type Output: Dimension;","parent":{"krate":0,"index":3019},"children":[],"decl_id":null,"docs":" The resulting dimension type after broadcasting.\n","sig":null,"attributes":[{"value":"/ The resulting dimension type after broadcasting.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/broadcast.rs","byte_start":388526,"byte_end":388578,"line_start":38,"line_end":38,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":393533,"byte_end":393546,"line_start":42,"line_end":42,"column_start":11,"column_end":24},"name":"IntoDimension","qualname":"::dimension::conversion::IntoDimension","value":"IntoDimension","parent":null,"children":[{"krate":0,"index":3062},{"krate":0,"index":3063}],"decl_id":null,"docs":" Argument conversion a dimension.\n","sig":null,"attributes":[{"value":"/ Argument conversion a dimension.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":393486,"byte_end":393522,"line_start":41,"line_end":41,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":3062},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":393558,"byte_end":393561,"line_start":43,"line_end":43,"column_start":10,"column_end":13},"name":"Dim","qualname":"::dimension::conversion::IntoDimension::Dim","value":"type Dim: Dimension;","parent":{"krate":0,"index":3061},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":393581,"byte_end":393595,"line_start":44,"line_end":44,"column_start":8,"column_end":22},"name":"into_dimension","qualname":"::dimension::conversion::IntoDimension::into_dimension","value":"pub fn into_dimension(Self) -> Self::Dim","parent":{"krate":0,"index":3061},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":394259,"byte_end":394261,"line_start":83,"line_end":83,"column_start":10,"column_end":12},"name":"To","qualname":"::dimension::conversion::Convert::To","value":"type To;","parent":{"krate":0,"index":3077},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7269},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397462,"byte_end":397465,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"Dim","qualname":"::dimension::dim::Dim","value":"Dim {  }","parent":null,"children":[{"krate":0,"index":7271}],"decl_id":null,"docs":" Dimension description.","sig":null,"attributes":[{"value":"/ Dimension description.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":396771,"byte_end":396797,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":396798,"byte_end":396801,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `Dim` describes the number of axes and the length of each axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":396802,"byte_end":396868,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ in an array. It is also used as an index type.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":396869,"byte_end":396919,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":396920,"byte_end":396923,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See also the [`Dimension` trait](trait.Dimension.html) for its methods and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":396924,"byte_end":397002,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ operations.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397003,"byte_end":397018,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397019,"byte_end":397022,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397023,"byte_end":397037,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397038,"byte_end":397041,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ To create an array with a particular dimension, you'd just pass","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397042,"byte_end":397109,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ a tuple (in this example (3, 2) is used), which is converted to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397110,"byte_end":397177,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ `Dim` by the array constructor.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397178,"byte_end":397213,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397214,"byte_end":397217,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397218,"byte_end":397225,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397226,"byte_end":397250,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use ndarray::Dim;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397251,"byte_end":397272,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397273,"byte_end":397276,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let mut array = Array2::zeros((3, 2));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397277,"byte_end":397319,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/ array[[0, 0]] = 1.;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397320,"byte_end":397343,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(array.raw_dim(), Dim([3, 2]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397344,"byte_end":397389,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397390,"byte_end":397397,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3107},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397885,"byte_end":397888,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"Dim","qualname":"::dimension::dim::Dim","value":"pub fn Dim<T>(T) -> T::Dim where T: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Create a new dimension value.\n","sig":null,"attributes":[{"value":"/ Create a new dimension value.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397819,"byte_end":397852,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397853,"byte_end":397877,"line_start":59,"line_end":59,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402012,"byte_end":402021,"line_start":31,"line_end":31,"column_start":11,"column_end":20},"name":"Dimension","qualname":"::dimension::dimension_trait::Dimension","value":"Dimension: Clone + Eq + Debug + Send + Sync + Default + IndexMut<usize, Output = usize> +\nAdd<Self, Output = Self> + AddAssign + for<'x> AddAssign<&'x Self> + Sub<Self,\nOutput = Self> + SubAssign + for<'x> SubAssign<&'x Self> + Mul<usize, Output =\nSelf> + Mul<Self, Output = Self> + MulAssign + for<'x> MulAssign<&'x Self> +\nMulAssign<usize> + DimMax<Ix0, Output = Self> + DimMax<Self, Output = Self> +\nDimMax<IxDyn, Output = IxDyn> + DimMax<<Self as Dimension>::Smaller, Output =\nSelf> + DimMax<<Self as Dimension>::Larger, Output =\n<Self as Dimension>::Larger> + DimAdd<Self> +\nDimAdd<<Self as Dimension>::Smaller> + DimAdd<<Self as Dimension>::Larger> +\nDimAdd<Ix0, Output = Self> + DimAdd<Ix1, Output =\n<Self as Dimension>::Larger> + DimAdd<IxDyn, Output = IxDyn>","parent":null,"children":[{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3265},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3294},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":7350}],"decl_id":null,"docs":" Array shape and index trait.","sig":null,"attributes":[{"value":"/ Array shape and index trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":401787,"byte_end":401819,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":401820,"byte_end":401823,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This trait defines a number of methods and operations that can be used on","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":401824,"byte_end":401901,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ dimensions and indices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":401902,"byte_end":401929,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":401930,"byte_end":401933,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ **Note:** *This trait can not be implemented outside the crate*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":401934,"byte_end":402001,"line_start":30,"line_end":30,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403093,"byte_end":403097,"line_start":65,"line_end":65,"column_start":11,"column_end":15},"name":"NDIM","qualname":"::dimension::dimension_trait::Dimension::NDIM","value":"Option<usize>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" For fixed-size dimension representations (e.g. `Ix2`), this should be\n `Some(ndim)`, and for variable-size dimension representations (e.g.\n `IxDyn`), this should be `None`.\n","sig":null,"attributes":[{"value":"/ For fixed-size dimension representations (e.g. `Ix2`), this should be","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402892,"byte_end":402965,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ `Some(ndim)`, and for variable-size dimension representations (e.g.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402970,"byte_end":403041,"line_start":63,"line_end":63,"column_start":5,"column_end":76}},{"value":"/ `IxDyn`), this should be `None`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403046,"byte_end":403082,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403315,"byte_end":403322,"line_start":72,"line_end":72,"column_start":10,"column_end":17},"name":"Pattern","qualname":"::dimension::dimension_trait::Dimension::Pattern","value":"type Pattern: IntoDimension<Dim = Self> + Clone + Debug + PartialEq + Eq + Default;","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Pattern matching friendly form of the dimension value.","sig":null,"attributes":[{"value":"/ Pattern matching friendly form of the dimension value.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403118,"byte_end":403176,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403181,"byte_end":403184,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ - For `Ix1`: `usize`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403189,"byte_end":403214,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/ - For `Ix2`: `(usize, usize)`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403219,"byte_end":403252,"line_start":69,"line_end":69,"column_start":5,"column_end":38}},{"value":"/ - and so on..","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403257,"byte_end":403274,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ - For `IxDyn`: `IxDyn`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403279,"byte_end":403305,"line_start":71,"line_end":71,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":3259},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403450,"byte_end":403457,"line_start":74,"line_end":74,"column_start":10,"column_end":17},"name":"Smaller","qualname":"::dimension::dimension_trait::Dimension::Smaller","value":"type Smaller: Dimension;","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Next smaller dimension (if applicable)\n","sig":null,"attributes":[{"value":"/ Next smaller dimension (if applicable)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403398,"byte_end":403440,"line_start":73,"line_end":73,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":3260},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403509,"byte_end":403515,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Larger","qualname":"::dimension::dimension_trait::Dimension::Larger","value":"type Larger: Dimension + RemoveAxis;","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Next larger dimension\n","sig":null,"attributes":[{"value":"/ Next larger dimension","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403474,"byte_end":403499,"line_start":75,"line_end":75,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3261},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403608,"byte_end":403612,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"ndim","qualname":"::dimension::dimension_trait::Dimension::ndim","value":"pub fn ndim(&Self) -> usize","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Returns the number of dimensions (number of axes).\n","sig":null,"attributes":[{"value":"/ Returns the number of dimensions (number of axes).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403546,"byte_end":403600,"line_start":78,"line_end":78,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3262},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403708,"byte_end":403720,"line_start":82,"line_end":82,"column_start":8,"column_end":20},"name":"into_pattern","qualname":"::dimension::dimension_trait::Dimension::into_pattern","value":"pub fn into_pattern(Self) -> Self::Pattern","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Convert the dimension into a pattern matching friendly value.\n","sig":null,"attributes":[{"value":"/ Convert the dimension into a pattern matching friendly value.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403635,"byte_end":403700,"line_start":81,"line_end":81,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403816,"byte_end":403820,"line_start":85,"line_end":85,"column_start":8,"column_end":12},"name":"size","qualname":"::dimension::dimension_trait::Dimension::size","value":"pub fn size(&Self) -> usize","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Compute the size of the dimension (number of elements)\n","sig":null,"attributes":[{"value":"/ Compute the size of the dimension (number of elements)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403750,"byte_end":403808,"line_start":84,"line_end":84,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403967,"byte_end":403979,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"size_checked","qualname":"::dimension::dimension_trait::Dimension::size_checked","value":"pub fn size_checked(&Self) -> Option<usize>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Compute the size while checking for overflow.\n","sig":null,"attributes":[{"value":"/ Compute the size while checking for overflow.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":403910,"byte_end":403959,"line_start":89,"line_end":89,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404151,"byte_end":404156,"line_start":97,"line_end":97,"column_start":8,"column_end":13},"name":"slice","qualname":"::dimension::dimension_trait::Dimension::slice","value":"pub fn slice(&Self) -> &[Ix]","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404201,"byte_end":404210,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"slice_mut","qualname":"::dimension::dimension_trait::Dimension::slice_mut","value":"pub fn slice_mut(&mut Self) -> &mut [Ix]","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404286,"byte_end":404299,"line_start":103,"line_end":103,"column_start":8,"column_end":21},"name":"as_array_view","qualname":"::dimension::dimension_trait::Dimension::as_array_view","value":"pub fn as_array_view(&Self) -> ArrayView1<, Ix>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Borrow as a read-only array view.\n","sig":null,"attributes":[{"value":"/ Borrow as a read-only array view.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404241,"byte_end":404278,"line_start":102,"line_end":102,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404427,"byte_end":404444,"line_start":108,"line_end":108,"column_start":8,"column_end":25},"name":"as_array_view_mut","qualname":"::dimension::dimension_trait::Dimension::as_array_view_mut","value":"pub fn as_array_view_mut(&mut Self) -> ArrayViewMut1<, Ix>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Borrow as a read-write array view.\n","sig":null,"attributes":[{"value":"/ Borrow as a read-write array view.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404381,"byte_end":404419,"line_start":107,"line_end":107,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404562,"byte_end":404567,"line_start":113,"line_end":113,"column_start":8,"column_end":13},"name":"equal","qualname":"::dimension::dimension_trait::Dimension::equal","value":"pub fn equal(&Self, &Self) -> bool","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404886,"byte_end":404901,"line_start":122,"line_end":122,"column_start":8,"column_end":23},"name":"default_strides","qualname":"::dimension::dimension_trait::Dimension::default_strides","value":"pub fn default_strides(&Self) -> Self","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Returns the strides for a standard layout array with the given shape.","sig":null,"attributes":[{"value":"/ Returns the strides for a standard layout array with the given shape.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404644,"byte_end":404717,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404722,"byte_end":404725,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If the array is non-empty, the strides result in contiguous layout; if","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404730,"byte_end":404804,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ the array is empty, the strides are all zeros.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":404809,"byte_end":404859,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":405809,"byte_end":405824,"line_start":147,"line_end":147,"column_start":8,"column_end":23},"name":"fortran_strides","qualname":"::dimension::dimension_trait::Dimension::fortran_strides","value":"pub fn fortran_strides(&Self) -> Self","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Returns the strides for a Fortran layout array with the given shape.","sig":null,"attributes":[{"value":"/ Returns the strides for a Fortran layout array with the given shape.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":405568,"byte_end":405640,"line_start":142,"line_end":142,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":405645,"byte_end":405648,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ If the array is non-empty, the strides result in contiguous layout; if","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":405653,"byte_end":405727,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ the array is empty, the strides are all zeros.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":405732,"byte_end":405782,"line_start":145,"line_end":145,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":406739,"byte_end":406744,"line_start":173,"line_end":173,"column_start":8,"column_end":13},"name":"zeros","qualname":"::dimension::dimension_trait::Dimension::zeros","value":"pub fn zeros(usize) -> Self","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Creates a dimension of all zeros with the specified ndim.","sig":null,"attributes":[{"value":"/ Creates a dimension of all zeros with the specified ndim.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":406472,"byte_end":406533,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":406538,"byte_end":406541,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This method is useful for generalizing over fixed-size and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":406546,"byte_end":406608,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/ variable-size dimension representations.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":406613,"byte_end":406657,"line_start":170,"line_end":170,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":406662,"byte_end":406665,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `Self` has a fixed size that is not `ndim`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":406670,"byte_end":406731,"line_start":172,"line_end":172,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":406808,"byte_end":406819,"line_start":177,"line_end":177,"column_start":8,"column_end":19},"name":"first_index","qualname":"::dimension::dimension_trait::Dimension::first_index","value":"pub fn first_index(&Self) -> Option<Self>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":406791,"byte_end":406800,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":407211,"byte_end":407219,"line_start":191,"line_end":191,"column_start":8,"column_end":16},"name":"next_for","qualname":"::dimension::dimension_trait::Dimension::next_for","value":"pub fn next_for(&Self, Self) -> Option<Self>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Iteration -- Use self as size, and return next index after `index`\n or None if there are no more.\n","sig":null,"attributes":[{"value":"/ Iteration -- Use self as size, and return next index after `index`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":407033,"byte_end":407103,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ or None if there are no more.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":407108,"byte_end":407141,"line_start":188,"line_end":188,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":407194,"byte_end":407203,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":407848,"byte_end":407858,"line_start":216,"line_end":216,"column_start":8,"column_end":18},"name":"next_for_f","qualname":"::dimension::dimension_trait::Dimension::next_for_f","value":"pub fn next_for_f(&Self, &mut Self) -> bool","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Iteration -- Use self as size, and create the next index after `index`\n Return false if iteration is done","sig":null,"attributes":[{"value":"/ Iteration -- Use self as size, and create the next index after `index`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":407678,"byte_end":407752,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ Return false if iteration is done","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":407757,"byte_end":407794,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":407799,"byte_end":407802,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Next in f-order","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":407807,"byte_end":407826,"line_start":214,"line_end":214,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":407831,"byte_end":407840,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":408513,"byte_end":408531,"line_start":238,"line_end":238,"column_start":8,"column_end":26},"name":"strides_equivalent","qualname":"::dimension::dimension_trait::Dimension::strides_equivalent","value":"pub fn strides_equivalent<D>(&Self, &Self, &D) -> bool where D: Dimension","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Returns `true` iff `strides1` and `strides2` are equivalent for the\n shape `self`.","sig":null,"attributes":[{"value":"/ Returns `true` iff `strides1` and `strides2` are equivalent for the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":408213,"byte_end":408284,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/ shape `self`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":408289,"byte_end":408306,"line_start":231,"line_end":231,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":408311,"byte_end":408314,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The strides are equivalent if, for each axis with length > 1, the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":408319,"byte_end":408388,"line_start":233,"line_end":233,"column_start":5,"column_end":74}},{"value":"/ strides are equal.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":408393,"byte_end":408415,"line_start":234,"line_end":234,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":408420,"byte_end":408423,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note: Returns `false` if any of the ndims don't match.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":408428,"byte_end":408486,"line_start":236,"line_end":236,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":408960,"byte_end":408973,"line_start":251,"line_end":251,"column_start":8,"column_end":21},"name":"stride_offset","qualname":"::dimension::dimension_trait::Dimension::stride_offset","value":"pub fn stride_offset(&Self, &Self) -> isize","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Return stride offset for index.\n","sig":null,"attributes":[{"value":"/ Return stride offset for index.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":408917,"byte_end":408952,"line_start":250,"line_end":250,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":409267,"byte_end":409288,"line_start":261,"line_end":261,"column_start":8,"column_end":29},"name":"stride_offset_checked","qualname":"::dimension::dimension_trait::Dimension::stride_offset_checked","value":"pub fn stride_offset_checked(&Self, &Self, &Self) -> Option<isize>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Return stride offset for this dimension and index.\n","sig":null,"attributes":[{"value":"/ Return stride offset for this dimension and index.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":409205,"byte_end":409259,"line_start":260,"line_end":260,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":409454,"byte_end":409463,"line_start":266,"line_end":266,"column_start":8,"column_end":17},"name":"last_elem","qualname":"::dimension::dimension_trait::Dimension::last_elem","value":"pub fn last_elem(&Self) -> usize","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":409628,"byte_end":409641,"line_start":275,"line_end":275,"column_start":8,"column_end":21},"name":"set_last_elem","qualname":"::dimension::dimension_trait::Dimension::set_last_elem","value":"pub fn set_last_elem(&mut Self, usize)","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":409766,"byte_end":409779,"line_start":281,"line_end":281,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::dimension::dimension_trait::Dimension::is_contiguous","value":"pub fn is_contiguous(&Self, &Self) -> bool","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":410672,"byte_end":410701,"line_start":309,"line_end":309,"column_start":8,"column_end":37},"name":"_fastest_varying_stride_order","qualname":"::dimension::dimension_trait::Dimension::_fastest_varying_stride_order","value":"pub fn _fastest_varying_stride_order(&Self) -> Self","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Return the axis ordering corresponding to the fastest variation\n (in ascending order).","sig":null,"attributes":[{"value":"/ Return the axis ordering corresponding to the fastest variation","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":410488,"byte_end":410555,"line_start":304,"line_end":304,"column_start":5,"column_end":72}},{"value":"/ (in ascending order).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":410560,"byte_end":410585,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":410590,"byte_end":410593,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Assumes that no stride value appears twice.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":410598,"byte_end":410645,"line_start":307,"line_end":307,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":411157,"byte_end":411172,"line_start":324,"line_end":324,"column_start":8,"column_end":23},"name":"min_stride_axis","qualname":"::dimension::dimension_trait::Dimension::min_stride_axis","value":"pub fn min_stride_axis(&Self, &Self) -> Axis","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Compute the minimum stride axis (absolute value), under the constraint\n that the length of the axis is > 1;\n","sig":null,"attributes":[{"value":"/ Compute the minimum stride axis (absolute value), under the constraint","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":411012,"byte_end":411086,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ that the length of the axis is > 1;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":411091,"byte_end":411130,"line_start":322,"line_end":322,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3294},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":411675,"byte_end":411690,"line_start":339,"line_end":339,"column_start":8,"column_end":23},"name":"max_stride_axis","qualname":"::dimension::dimension_trait::Dimension::max_stride_axis","value":"pub fn max_stride_axis(&Self, &Self) -> Axis","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Compute the maximum stride axis (absolute value), under the constraint\n that the length of the axis is > 1;\n","sig":null,"attributes":[{"value":"/ Compute the maximum stride axis (absolute value), under the constraint","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":411530,"byte_end":411604,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ that the length of the axis is > 1;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":411609,"byte_end":411648,"line_start":337,"line_end":337,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":412124,"byte_end":412132,"line_start":352,"line_end":352,"column_start":8,"column_end":16},"name":"into_dyn","qualname":"::dimension::dimension_trait::Dimension::into_dyn","value":"pub fn into_dyn(Self) -> IxDyn","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" Convert the dimensional into a dynamic dimensional (IxDyn).\n","sig":null,"attributes":[{"value":"/ Convert the dimensional into a dynamic dimensional (IxDyn).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":412053,"byte_end":412116,"line_start":351,"line_end":351,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":412211,"byte_end":412225,"line_start":357,"line_end":357,"column_start":8,"column_end":22},"name":"from_dimension","qualname":"::dimension::dimension_trait::Dimension::from_dimension","value":"pub fn from_dimension<D2: Dimension>(&D2) -> Option<Self>","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":412513,"byte_end":412524,"line_start":370,"line_end":370,"column_start":8,"column_end":19},"name":"insert_axis","qualname":"::dimension::dimension_trait::Dimension::insert_axis","value":"pub fn insert_axis(&Self, Axis) -> Self::Larger","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":412588,"byte_end":412603,"line_start":373,"line_end":373,"column_start":8,"column_end":23},"name":"try_remove_axis","qualname":"::dimension::dimension_trait::Dimension::try_remove_axis","value":"pub fn try_remove_axis(&Self, Axis) -> Self::Smaller","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7424},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":429694,"byte_end":429703,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"IxDynImpl","qualname":"::dimension::dynindeximpl::IxDynImpl","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dynamic dimension or index type.","sig":null,"attributes":[{"value":"/ Dynamic dimension or index type.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":429409,"byte_end":429445,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":429446,"byte_end":429449,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Use `IxDyn` directly. This type implements a dynamic number of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":429450,"byte_end":429516,"line_start":116,"line_end":116,"column_start":1,"column_end":67}},{"value":"/ dimensions or indices. Short dimensions are stored inline and don't need","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":429517,"byte_end":429593,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ any dynamic memory allocation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":429594,"byte_end":429628,"line_start":118,"line_end":118,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":432409,"byte_end":432414,"line_start":228,"line_end":228,"column_start":12,"column_end":17},"name":"zeros","qualname":"<IxDyn>::zeros","value":"pub fn zeros(usize) -> IxDyn","parent":null,"children":[],"decl_id":null,"docs":" Create a new dimension value with `n` axes, all zeros\n","sig":null,"attributes":[{"value":"/ Create a new dimension value with `n` axes, all zeros","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":432326,"byte_end":432383,"line_start":226,"line_end":226,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":432388,"byte_end":432397,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3565},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":433114,"byte_end":433121,"line_start":21,"line_end":21,"column_start":18,"column_end":25},"name":"NdIndex","qualname":"::dimension::ndindex::NdIndex","value":"NdIndex<E>: Debug","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3568}],"decl_id":null,"docs":" Tuple or fixed size arrays that can be used to index an array.","sig":null,"attributes":[{"value":"/ Tuple or fixed size arrays that can be used to index an array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":432809,"byte_end":432875,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":432876,"byte_end":432879,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":432880,"byte_end":432887,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":432888,"byte_end":432910,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":432911,"byte_end":432914,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut a = arr2(&[[0, 1],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":432915,"byte_end":432945,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/                    [2, 3]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":432946,"byte_end":432978,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a[[0, 1]], 1);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":432979,"byte_end":433008,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a[[1, 1]], 3);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":433009,"byte_end":433038,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ a[[1, 1]] += 1;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":433039,"byte_end":433058,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(a[(1, 1)], 4);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":433059,"byte_end":433088,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":433089,"byte_end":433096,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3567},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":433160,"byte_end":433173,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"index_checked","qualname":"::dimension::ndindex::NdIndex::index_checked","value":"pub fn index_checked(&Self, &E, &E) -> Option<isize>","parent":{"krate":0,"index":3565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":433247,"byte_end":433262,"line_start":25,"line_end":25,"column_start":8,"column_end":23},"name":"index_unchecked","qualname":"::dimension::ndindex::NdIndex::index_unchecked","value":"pub fn index_unchecked(&Self, &E) -> isize","parent":{"krate":0,"index":3565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3612},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ops.rs","byte_start":439763,"byte_end":439769,"line_start":4,"line_end":4,"column_start":11,"column_end":17},"name":"DimAdd","qualname":"::dimension::ops::DimAdd","value":"DimAdd<D: Dimension>","parent":null,"children":[{"krate":0,"index":3614}],"decl_id":null,"docs":" Adds the two dimensions at compile time.\n","sig":null,"attributes":[{"value":"/ Adds the two dimensions at compile time.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ops.rs","byte_start":439708,"byte_end":439752,"line_start":3,"line_end":3,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":3614},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ops.rs","byte_start":439834,"byte_end":439840,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Output","qualname":"::dimension::ops::DimAdd::Output","value":"type Output: Dimension;","parent":{"krate":0,"index":3612},"children":[],"decl_id":null,"docs":" The sum of the two dimensions.\n","sig":null,"attributes":[{"value":"/ The sum of the two dimensions.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ops.rs","byte_start":439790,"byte_end":439824,"line_start":5,"line_end":5,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":3643},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":442829,"byte_end":442839,"line_start":15,"line_end":15,"column_start":11,"column_end":21},"name":"RemoveAxis","qualname":"::dimension::remove_axis::RemoveAxis","value":"RemoveAxis: Dimension","parent":null,"children":[{"krate":0,"index":3644}],"decl_id":null,"docs":" Array shape with a next smaller dimension.","sig":null,"attributes":[{"value":"/ Array shape with a next smaller dimension.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":442633,"byte_end":442679,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":442680,"byte_end":442683,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `RemoveAxis` defines a larger-than relation for array shapes:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":442684,"byte_end":442749,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/ removing one axis from *Self* gives smaller dimension *Smaller*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":442750,"byte_end":442818,"line_start":14,"line_end":14,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":442860,"byte_end":442871,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"remove_axis","qualname":"::dimension::remove_axis::RemoveAxis::remove_axis","value":"pub fn remove_axis(&Self, Axis) -> Self::Smaller","parent":{"krate":0,"index":3643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3873},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","parent":null,"children":[{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3881},{"krate":0,"index":3884},{"krate":0,"index":3887},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3896},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3906},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3913},{"krate":0,"index":3916},{"krate":0,"index":3919},{"krate":0,"index":3922},{"krate":0,"index":3925},{"krate":0,"index":3928},{"krate":0,"index":3931},{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3938},{"krate":0,"index":3941},{"krate":0,"index":3944},{"krate":0,"index":3947},{"krate":0,"index":3950},{"krate":0,"index":3953},{"krate":0,"index":3956},{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":3963},{"krate":0,"index":3966},{"krate":0,"index":3969},{"krate":0,"index":3972},{"krate":0,"index":3975},{"krate":0,"index":3978},{"krate":0,"index":3981},{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3994},{"krate":0,"index":3995},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4013},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4022},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4035},{"krate":0,"index":4038},{"krate":0,"index":4041},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4047},{"krate":0,"index":4050}],"decl_id":null,"docs":" ndarray prelude.","sig":null,"attributes":[{"value":"/ ndarray prelude.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456698,"byte_end":456718,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456719,"byte_end":456722,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module contains the most used types, type aliases, traits, functions,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456723,"byte_end":456801,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ and macros that you can import easily as a group.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456802,"byte_end":456855,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456856,"byte_end":456859,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456860,"byte_end":456867,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use ndarray::prelude::*;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456868,"byte_end":456896,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456897,"byte_end":456900,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # let _ = arr0(1); // use the import","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456901,"byte_end":456941,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/prelude.rs","byte_start":456942,"byte_end":456949,"line_start":18,"line_end":18,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":4053},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8650,"byte_end":8652,"line_start":240,"line_end":240,"column_start":10,"column_end":12},"name":"Ix","qualname":"::Ix","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Array index type\n","sig":null,"attributes":[{"value":"/ Array index type","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8620,"byte_end":8640,"line_start":239,"line_end":239,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":4054},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8701,"byte_end":8704,"line_start":242,"line_end":242,"column_start":10,"column_end":13},"name":"Ixs","qualname":"::Ixs","value":"isize","parent":null,"children":[],"decl_id":null,"docs":" Array index type (signed)\n","sig":null,"attributes":[{"value":"/ Array index type (signed)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8662,"byte_end":8691,"line_start":241,"line_end":241,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":4055},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":45945,"byte_end":45954,"line_start":1285,"line_end":1285,"column_start":12,"column_end":21},"name":"ArrayBase","qualname":"::ArrayBase","value":"ArrayBase {  }","parent":null,"children":[{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4060},{"krate":0,"index":4061}],"decl_id":null,"docs":" An *n*-dimensional array.","sig":null,"attributes":[{"value":"/ An *n*-dimensional array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8715,"byte_end":8744,"line_start":244,"line_end":244,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8745,"byte_end":8748,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ The array is a general container of elements. It cannot grow or shrink (with some exceptions),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8749,"byte_end":8847,"line_start":246,"line_end":246,"column_start":1,"column_end":99}},{"value":"/ but can be sliced into subsets of its data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8848,"byte_end":8895,"line_start":247,"line_end":247,"column_start":1,"column_end":48}},{"value":"/ The array supports arithmetic operations by applying them elementwise.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8896,"byte_end":8970,"line_start":248,"line_end":248,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8971,"byte_end":8974,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ In *n*-dimensional we include for example 1-dimensional rows or columns,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8975,"byte_end":9051,"line_start":250,"line_end":250,"column_start":1,"column_end":77}},{"value":"/ 2-dimensional matrices, and higher dimensional arrays. If the array has *n*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9052,"byte_end":9131,"line_start":251,"line_end":251,"column_start":1,"column_end":80}},{"value":"/ dimensions, then an element is accessed by using that many indices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9132,"byte_end":9203,"line_start":252,"line_end":252,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9204,"byte_end":9207,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ The `ArrayBase<S, D>` is parameterized by `S` for the data container and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9208,"byte_end":9284,"line_start":254,"line_end":254,"column_start":1,"column_end":77}},{"value":"/ `D` for the dimensionality.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9285,"byte_end":9316,"line_start":255,"line_end":255,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9317,"byte_end":9320,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ Type aliases [`Array`], [`ArcArray`], [`CowArray`], [`ArrayView`], and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9321,"byte_end":9395,"line_start":257,"line_end":257,"column_start":1,"column_end":75}},{"value":"/ [`ArrayViewMut`] refer to `ArrayBase` with different types for the data","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9396,"byte_end":9471,"line_start":258,"line_end":258,"column_start":1,"column_end":76}},{"value":"/ container.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9472,"byte_end":9486,"line_start":259,"line_end":259,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9487,"byte_end":9490,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ [`Array`]: type.Array.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9491,"byte_end":9521,"line_start":261,"line_end":261,"column_start":1,"column_end":31}},{"value":"/ [`ArcArray`]: type.ArcArray.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9522,"byte_end":9558,"line_start":262,"line_end":262,"column_start":1,"column_end":37}},{"value":"/ [`ArrayView`]: type.ArrayView.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9559,"byte_end":9597,"line_start":263,"line_end":263,"column_start":1,"column_end":39}},{"value":"/ [`ArrayViewMut`]: type.ArrayViewMut.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9598,"byte_end":9642,"line_start":264,"line_end":264,"column_start":1,"column_end":45}},{"value":"/ [`CowArray`]: type.CowArray.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9643,"byte_end":9679,"line_start":265,"line_end":265,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9680,"byte_end":9683,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ ## Contents","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9684,"byte_end":9699,"line_start":267,"line_end":267,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9700,"byte_end":9703,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ + [Array](#array)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9704,"byte_end":9725,"line_start":269,"line_end":269,"column_start":1,"column_end":22}},{"value":"/ + [ArcArray](#arcarray)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9726,"byte_end":9753,"line_start":270,"line_end":270,"column_start":1,"column_end":28}},{"value":"/ + [CowArray](#cowarray)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9754,"byte_end":9781,"line_start":271,"line_end":271,"column_start":1,"column_end":28}},{"value":"/ + [Array Views](#array-views)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9782,"byte_end":9815,"line_start":272,"line_end":272,"column_start":1,"column_end":34}},{"value":"/ + [Indexing and Dimension](#indexing-and-dimension)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9816,"byte_end":9871,"line_start":273,"line_end":273,"column_start":1,"column_end":56}},{"value":"/ + [Loops, Producers and Iterators](#loops-producers-and-iterators)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9872,"byte_end":9942,"line_start":274,"line_end":274,"column_start":1,"column_end":71}},{"value":"/ + [Slicing](#slicing)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9943,"byte_end":9968,"line_start":275,"line_end":275,"column_start":1,"column_end":26}},{"value":"/ + [Subviews](#subviews)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9969,"byte_end":9996,"line_start":276,"line_end":276,"column_start":1,"column_end":28}},{"value":"/ + [Arithmetic Operations](#arithmetic-operations)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":9997,"byte_end":10050,"line_start":277,"line_end":277,"column_start":1,"column_end":54}},{"value":"/ + [Broadcasting](#broadcasting)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10051,"byte_end":10086,"line_start":278,"line_end":278,"column_start":1,"column_end":36}},{"value":"/ + [Conversions](#conversions)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10087,"byte_end":10120,"line_start":279,"line_end":279,"column_start":1,"column_end":34}},{"value":"/ + [Constructor Methods for Owned Arrays](#constructor-methods-for-owned-arrays)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10121,"byte_end":10204,"line_start":280,"line_end":280,"column_start":1,"column_end":84}},{"value":"/ + [Methods For All Array Types](#methods-for-all-array-types)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10205,"byte_end":10270,"line_start":281,"line_end":281,"column_start":1,"column_end":66}},{"value":"/ + [Methods For 1-D Arrays](#methods-for-1-d-arrays)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10271,"byte_end":10326,"line_start":282,"line_end":282,"column_start":1,"column_end":56}},{"value":"/ + [Methods For 2-D Arrays](#methods-for-2-d-arrays)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10327,"byte_end":10382,"line_start":283,"line_end":283,"column_start":1,"column_end":56}},{"value":"/ + [Methods for Dynamic-Dimensional Arrays](#methods-for-dynamic-dimensional-arrays)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10383,"byte_end":10470,"line_start":284,"line_end":284,"column_start":1,"column_end":88}},{"value":"/ + [Numerical Methods for Arrays](#numerical-methods-for-arrays)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10471,"byte_end":10538,"line_start":285,"line_end":285,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10539,"byte_end":10542,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ ## `Array`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10543,"byte_end":10557,"line_start":287,"line_end":287,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10558,"byte_end":10561,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ [`Array`](type.Array.html) is an owned array that owns the underlying array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10562,"byte_end":10641,"line_start":289,"line_end":289,"column_start":1,"column_end":80}},{"value":"/ elements directly (just like a `Vec`) and it is the default way to create and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10642,"byte_end":10723,"line_start":290,"line_end":290,"column_start":1,"column_end":82}},{"value":"/ store n-dimensional data. `Array<A, D>` has two type parameters: `A` for","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10724,"byte_end":10800,"line_start":291,"line_end":291,"column_start":1,"column_end":77}},{"value":"/ the element type, and `D` for the dimensionality. A particular","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10801,"byte_end":10867,"line_start":292,"line_end":292,"column_start":1,"column_end":67}},{"value":"/ dimensionality's type alias like `Array3<A>` just has the type parameter","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10868,"byte_end":10944,"line_start":293,"line_end":293,"column_start":1,"column_end":77}},{"value":"/ `A` for element type.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10945,"byte_end":10970,"line_start":294,"line_end":294,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10971,"byte_end":10974,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ An example:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10975,"byte_end":10990,"line_start":296,"line_end":296,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10991,"byte_end":10994,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":10995,"byte_end":11002,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/ // Create a three-dimensional f64 array, initialized with zeros","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11003,"byte_end":11070,"line_start":299,"line_end":299,"column_start":1,"column_end":68}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11071,"byte_end":11095,"line_start":300,"line_end":300,"column_start":1,"column_end":25}},{"value":"/ let mut temperature = Array3::<f64>::zeros((3, 4, 5));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11096,"byte_end":11154,"line_start":301,"line_end":301,"column_start":1,"column_end":59}},{"value":"/ // Increase the temperature in this location","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11155,"byte_end":11203,"line_start":302,"line_end":302,"column_start":1,"column_end":49}},{"value":"/ temperature[[2, 2, 2]] += 0.5;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11204,"byte_end":11238,"line_start":303,"line_end":303,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11239,"byte_end":11246,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11247,"byte_end":11250,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ ## `ArcArray`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11251,"byte_end":11268,"line_start":306,"line_end":306,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11269,"byte_end":11272,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`ArcArray`](type.ArcArray.html) is an owned array with reference counted","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11273,"byte_end":11350,"line_start":308,"line_end":308,"column_start":1,"column_end":78}},{"value":"/ data (shared ownership).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11351,"byte_end":11379,"line_start":309,"line_end":309,"column_start":1,"column_end":29}},{"value":"/ Sharing requires that it uses copy-on-write for mutable operations.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11380,"byte_end":11451,"line_start":310,"line_end":310,"column_start":1,"column_end":72}},{"value":"/ Calling a method for mutating elements on `ArcArray`, for example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11452,"byte_end":11521,"line_start":311,"line_end":311,"column_start":1,"column_end":70}},{"value":"/ [`view_mut()`](#method.view_mut) or [`get_mut()`](#method.get_mut),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11522,"byte_end":11593,"line_start":312,"line_end":312,"column_start":1,"column_end":72}},{"value":"/ will break sharing and require a clone of the data (if it is not uniquely held).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11594,"byte_end":11678,"line_start":313,"line_end":313,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11679,"byte_end":11682,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ ## `CowArray`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11683,"byte_end":11700,"line_start":315,"line_end":315,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11701,"byte_end":11704,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ [`CowArray`](type.CowArray.html) is analogous to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11705,"byte_end":11757,"line_start":317,"line_end":317,"column_start":1,"column_end":53}},{"value":"/ [`std::borrow::Cow`](https://doc.rust-lang.org/std/borrow/enum.Cow.html).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11758,"byte_end":11835,"line_start":318,"line_end":318,"column_start":1,"column_end":78}},{"value":"/ It can represent either an immutable view or a uniquely owned array. If a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11836,"byte_end":11913,"line_start":319,"line_end":319,"column_start":1,"column_end":78}},{"value":"/ `CowArray` instance is the immutable view variant, then calling a method","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11914,"byte_end":11990,"line_start":320,"line_end":320,"column_start":1,"column_end":77}},{"value":"/ for mutating elements in the array will cause it to be converted into the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":11991,"byte_end":12068,"line_start":321,"line_end":321,"column_start":1,"column_end":78}},{"value":"/ owned variant (by cloning all the elements) before the modification is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12069,"byte_end":12143,"line_start":322,"line_end":322,"column_start":1,"column_end":75}},{"value":"/ performed.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12144,"byte_end":12158,"line_start":323,"line_end":323,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12159,"byte_end":12162,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ ## Array Views","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12163,"byte_end":12181,"line_start":325,"line_end":325,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12182,"byte_end":12185,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ [`ArrayView`] and [`ArrayViewMut`] are read-only and read-write array views","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12186,"byte_end":12265,"line_start":327,"line_end":327,"column_start":1,"column_end":80}},{"value":"/ respectively. They use dimensionality, indexing, and almost all other","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12266,"byte_end":12339,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/ methods the same way as the other array types.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12340,"byte_end":12390,"line_start":329,"line_end":329,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12391,"byte_end":12394,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ Methods for `ArrayBase` apply to array views too, when the trait bounds","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12395,"byte_end":12470,"line_start":331,"line_end":331,"column_start":1,"column_end":76}},{"value":"/ allow.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12471,"byte_end":12481,"line_start":332,"line_end":332,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12482,"byte_end":12485,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ Please see the documentation for the respective array view for an overview","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12486,"byte_end":12564,"line_start":334,"line_end":334,"column_start":1,"column_end":79}},{"value":"/ of methods specific to array views: [`ArrayView`], [`ArrayViewMut`].","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12565,"byte_end":12637,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12638,"byte_end":12641,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ A view is created from an array using [`.view()`](ArrayBase::view),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12642,"byte_end":12713,"line_start":337,"line_end":337,"column_start":1,"column_end":72}},{"value":"/ [`.view_mut()`](ArrayBase::view_mut), using","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12714,"byte_end":12761,"line_start":338,"line_end":338,"column_start":1,"column_end":48}},{"value":"/ slicing ([`.slice()`](ArrayBase::slice), [`.slice_mut()`](ArrayBase::slice_mut)) or from one of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12762,"byte_end":12861,"line_start":339,"line_end":339,"column_start":1,"column_end":100}},{"value":"/ the many iterators that yield array views.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12862,"byte_end":12908,"line_start":340,"line_end":340,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12909,"byte_end":12912,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ You can also create an array view from a regular slice of data not","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12913,"byte_end":12983,"line_start":342,"line_end":342,"column_start":1,"column_end":71}},{"value":"/ allocated with `Array` — see array view methods or their `From` impls.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":12984,"byte_end":13060,"line_start":343,"line_end":343,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13061,"byte_end":13064,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ Note that all `ArrayBase` variants can change their view (slicing) of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13065,"byte_end":13142,"line_start":345,"line_end":345,"column_start":1,"column_end":78}},{"value":"/ data freely, even when their data can’t be mutated.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13143,"byte_end":13200,"line_start":346,"line_end":346,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13201,"byte_end":13204,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ ## Indexing and Dimension","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13205,"byte_end":13234,"line_start":348,"line_end":348,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13235,"byte_end":13238,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ The dimensionality of the array determines the number of *axes*, for example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13239,"byte_end":13319,"line_start":350,"line_end":350,"column_start":1,"column_end":81}},{"value":"/ a 2D array has two axes. These are listed in “big endian” order, so that","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13320,"byte_end":13400,"line_start":351,"line_end":351,"column_start":1,"column_end":77}},{"value":"/ the greatest dimension is listed first, the lowest dimension with the most","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13401,"byte_end":13479,"line_start":352,"line_end":352,"column_start":1,"column_end":79}},{"value":"/ rapidly varying index is the last.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13480,"byte_end":13518,"line_start":353,"line_end":353,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13519,"byte_end":13522,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ In a 2D array the index of each element is `[row, column]` as seen in this","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13523,"byte_end":13601,"line_start":355,"line_end":355,"column_start":1,"column_end":79}},{"value":"/ 4 × 3 example:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13602,"byte_end":13621,"line_start":356,"line_end":356,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13622,"byte_end":13625,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13626,"byte_end":13639,"line_start":358,"line_end":358,"column_start":1,"column_end":14}},{"value":"/ [[ [0, 0], [0, 1], [0, 2] ],  // row 0","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13640,"byte_end":13682,"line_start":359,"line_end":359,"column_start":1,"column_end":43}},{"value":"/  [ [1, 0], [1, 1], [1, 2] ],  // row 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13683,"byte_end":13725,"line_start":360,"line_end":360,"column_start":1,"column_end":43}},{"value":"/  [ [2, 0], [2, 1], [2, 2] ],  // row 2","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13726,"byte_end":13768,"line_start":361,"line_end":361,"column_start":1,"column_end":43}},{"value":"/  [ [3, 0], [3, 1], [3, 2] ]]  // row 3","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13769,"byte_end":13811,"line_start":362,"line_end":362,"column_start":1,"column_end":43}},{"value":"/ //    \\       \\       \\","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13812,"byte_end":13839,"line_start":363,"line_end":363,"column_start":1,"column_end":28}},{"value":"/ //   column 0  \\     column 2","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13840,"byte_end":13873,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ //            column 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13874,"byte_end":13900,"line_start":365,"line_end":365,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13901,"byte_end":13908,"line_start":366,"line_end":366,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13909,"byte_end":13912,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ The number of axes for an array is fixed by its `D` type parameter: `Ix1`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13913,"byte_end":13990,"line_start":368,"line_end":368,"column_start":1,"column_end":78}},{"value":"/ for a 1D array, `Ix2` for a 2D array etc. The dimension type `IxDyn` allows","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":13991,"byte_end":14070,"line_start":369,"line_end":369,"column_start":1,"column_end":80}},{"value":"/ a dynamic number of axes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14071,"byte_end":14100,"line_start":370,"line_end":370,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14101,"byte_end":14104,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ A fixed size array (`[usize; N]`) of the corresponding dimensionality is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14105,"byte_end":14181,"line_start":372,"line_end":372,"column_start":1,"column_end":77}},{"value":"/ used to index the `Array`, making the syntax `array[[` i, j,  ...`]]`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14182,"byte_end":14255,"line_start":373,"line_end":373,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14256,"byte_end":14259,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14260,"byte_end":14267,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14268,"byte_end":14292,"line_start":376,"line_end":376,"column_start":1,"column_end":25}},{"value":"/ let mut array = Array2::zeros((4, 3));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14293,"byte_end":14335,"line_start":377,"line_end":377,"column_start":1,"column_end":43}},{"value":"/ array[[1, 1]] = 7;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14336,"byte_end":14358,"line_start":378,"line_end":378,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14359,"byte_end":14366,"line_start":379,"line_end":379,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14367,"byte_end":14370,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ Important traits and types for dimension and indexing:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14371,"byte_end":14429,"line_start":381,"line_end":381,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14430,"byte_end":14433,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ - A [`Dim`](struct.Dim.html) value represents a dimensionality or index.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14434,"byte_end":14510,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ - Trait [`Dimension`](trait.Dimension.html) is implemented by all","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14511,"byte_end":14580,"line_start":384,"line_end":384,"column_start":1,"column_end":70}},{"value":"/ dimensionalities. It defines many operations for dimensions and indices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14581,"byte_end":14657,"line_start":385,"line_end":385,"column_start":1,"column_end":77}},{"value":"/ - Trait [`IntoDimension`](trait.IntoDimension.html) is used to convert into a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14658,"byte_end":14739,"line_start":386,"line_end":386,"column_start":1,"column_end":82}},{"value":"/ `Dim` value.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14740,"byte_end":14756,"line_start":387,"line_end":387,"column_start":1,"column_end":17}},{"value":"/ - Trait [`ShapeBuilder`](trait.ShapeBuilder.html) is an extension of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14757,"byte_end":14829,"line_start":388,"line_end":388,"column_start":1,"column_end":73}},{"value":"/ `IntoDimension` and is used when constructing an array. A shape describes","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14830,"byte_end":14907,"line_start":389,"line_end":389,"column_start":1,"column_end":78}},{"value":"/ not just the extent of each axis but also their strides.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14908,"byte_end":14968,"line_start":390,"line_end":390,"column_start":1,"column_end":61}},{"value":"/ - Trait [`NdIndex`](trait.NdIndex.html) is an extension of `Dimension` and is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":14969,"byte_end":15050,"line_start":391,"line_end":391,"column_start":1,"column_end":82}},{"value":"/ for values that can be used with indexing syntax.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15051,"byte_end":15104,"line_start":392,"line_end":392,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15105,"byte_end":15108,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15109,"byte_end":15112,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ The default memory order of an array is *row major* order (a.k.a “c” order),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15113,"byte_end":15197,"line_start":395,"line_end":395,"column_start":1,"column_end":81}},{"value":"/ where each row is contiguous in memory.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15198,"byte_end":15241,"line_start":396,"line_end":396,"column_start":1,"column_end":44}},{"value":"/ A *column major* (a.k.a. “f” or fortran) memory order array has","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15242,"byte_end":15313,"line_start":397,"line_end":397,"column_start":1,"column_end":68}},{"value":"/ columns (or, in general, the outermost axis) with contiguous elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15314,"byte_end":15388,"line_start":398,"line_end":398,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15389,"byte_end":15392,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ The logical order of any array’s elements is the row major order","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15393,"byte_end":15463,"line_start":400,"line_end":400,"column_start":1,"column_end":69}},{"value":"/ (the rightmost index is varying the fastest).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15464,"byte_end":15513,"line_start":401,"line_end":401,"column_start":1,"column_end":50}},{"value":"/ The iterators `.iter(), .iter_mut()` always adhere to this order, for example.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15514,"byte_end":15596,"line_start":402,"line_end":402,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15597,"byte_end":15600,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ ## Loops, Producers and Iterators","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15601,"byte_end":15638,"line_start":404,"line_end":404,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15639,"byte_end":15642,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ Using [`Zip`](struct.Zip.html) is the most general way to apply a procedure","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15643,"byte_end":15722,"line_start":406,"line_end":406,"column_start":1,"column_end":80}},{"value":"/ across one or several arrays or *producers*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15723,"byte_end":15771,"line_start":407,"line_end":407,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15772,"byte_end":15775,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ [`NdProducer`](trait.NdProducer.html) is like an iterable but for","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15776,"byte_end":15845,"line_start":409,"line_end":409,"column_start":1,"column_end":70}},{"value":"/ multidimensional data. All producers have dimensions and axes, like an","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15846,"byte_end":15920,"line_start":410,"line_end":410,"column_start":1,"column_end":75}},{"value":"/ array view, and they can be split and used with parallelization using `Zip`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":15921,"byte_end":16001,"line_start":411,"line_end":411,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16002,"byte_end":16005,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ For example, `ArrayView<A, D>` is a producer, it has the same dimensions","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16006,"byte_end":16082,"line_start":413,"line_end":413,"column_start":1,"column_end":77}},{"value":"/ as the array view and for each iteration it produces a reference to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16083,"byte_end":16154,"line_start":414,"line_end":414,"column_start":1,"column_end":72}},{"value":"/ the array element (`&A` in this case).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16155,"byte_end":16197,"line_start":415,"line_end":415,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16198,"byte_end":16201,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ Another example, if we have a 10 × 10 array and use `.exact_chunks((2, 2))`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16202,"byte_end":16282,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/ we get a producer of chunks which has the dimensions 5 × 5 (because","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16283,"byte_end":16355,"line_start":418,"line_end":418,"column_start":1,"column_end":72}},{"value":"/ there are *10 / 2 = 5* chunks in either direction). The 5 × 5 chunks producer","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16356,"byte_end":16438,"line_start":419,"line_end":419,"column_start":1,"column_end":82}},{"value":"/ can be paired with any other producers of the same dimension with `Zip`, for","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16439,"byte_end":16519,"line_start":420,"line_end":420,"column_start":1,"column_end":81}},{"value":"/ example 5 × 5 arrays.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16520,"byte_end":16546,"line_start":421,"line_end":421,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16547,"byte_end":16550,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ ### `.iter()` and `.iter_mut()`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16551,"byte_end":16586,"line_start":423,"line_end":423,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16587,"byte_end":16590,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ These are the element iterators of arrays and they produce an element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16591,"byte_end":16664,"line_start":425,"line_end":425,"column_start":1,"column_end":74}},{"value":"/ sequence in the logical order of the array, that means that the elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16665,"byte_end":16741,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/ will be visited in the sequence that corresponds to increasing the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16742,"byte_end":16812,"line_start":427,"line_end":427,"column_start":1,"column_end":71}},{"value":"/ last index first: *0, ..., 0,  0*; *0, ..., 0, 1*; *0, ...0, 2* and so on.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16813,"byte_end":16891,"line_start":428,"line_end":428,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16892,"byte_end":16895,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ ### `.outer_iter()` and `.axis_iter()`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16896,"byte_end":16938,"line_start":430,"line_end":430,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16939,"byte_end":16942,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ These iterators produce array views of one smaller dimension.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":16943,"byte_end":17008,"line_start":432,"line_end":432,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17009,"byte_end":17012,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ For example, for a 2D array, `.outer_iter()` will produce the 1D rows.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17013,"byte_end":17087,"line_start":434,"line_end":434,"column_start":1,"column_end":75}},{"value":"/ For a 3D array, `.outer_iter()` produces 2D subviews.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17088,"byte_end":17145,"line_start":435,"line_end":435,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17146,"byte_end":17149,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ `.axis_iter()` is like `outer_iter()` but allows you to pick which","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17150,"byte_end":17220,"line_start":437,"line_end":437,"column_start":1,"column_end":71}},{"value":"/ axis to traverse.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17221,"byte_end":17242,"line_start":438,"line_end":438,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17243,"byte_end":17246,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ The `outer_iter` and `axis_iter` are one dimensional producers.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17247,"byte_end":17314,"line_start":440,"line_end":440,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17315,"byte_end":17318,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ ## `.rows()`, `.columns()` and `.lanes()`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17319,"byte_end":17364,"line_start":442,"line_end":442,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17365,"byte_end":17368,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ [`.rows()`][gr] is a producer (and iterable) of all rows in an array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17369,"byte_end":17442,"line_start":444,"line_end":444,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17443,"byte_end":17446,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17447,"byte_end":17454,"line_start":446,"line_end":446,"column_start":1,"column_end":8}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17455,"byte_end":17478,"line_start":447,"line_end":447,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17479,"byte_end":17482,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ // 1. Loop over the rows of a 2D array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17483,"byte_end":17525,"line_start":449,"line_end":449,"column_start":1,"column_end":43}},{"value":"/ let mut a = Array::zeros((10, 10));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17526,"byte_end":17565,"line_start":450,"line_end":450,"column_start":1,"column_end":40}},{"value":"/ for mut row in a.rows_mut() {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17566,"byte_end":17599,"line_start":451,"line_end":451,"column_start":1,"column_end":34}},{"value":"/     row.fill(1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17600,"byte_end":17621,"line_start":452,"line_end":452,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17622,"byte_end":17627,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17628,"byte_end":17631,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ // 2. Use Zip to pair each row in 2D `a` with elements in 1D `b`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17632,"byte_end":17700,"line_start":455,"line_end":455,"column_start":1,"column_end":69}},{"value":"/ use ndarray::Zip;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17701,"byte_end":17722,"line_start":456,"line_end":456,"column_start":1,"column_end":22}},{"value":"/ let mut b = Array::zeros(a.nrows());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17723,"byte_end":17763,"line_start":457,"line_end":457,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17764,"byte_end":17767,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ Zip::from(a.rows())","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17768,"byte_end":17791,"line_start":459,"line_end":459,"column_start":1,"column_end":24}},{"value":"/     .and(&mut b)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17792,"byte_end":17812,"line_start":460,"line_end":460,"column_start":1,"column_end":21}},{"value":"/     .for_each(|a_row, b_elt| {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17813,"byte_end":17847,"line_start":461,"line_end":461,"column_start":1,"column_end":35}},{"value":"/         *b_elt = a_row[a.ncols() - 1] - a_row[0];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17848,"byte_end":17901,"line_start":462,"line_end":462,"column_start":1,"column_end":54}},{"value":"/     });","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17902,"byte_end":17913,"line_start":463,"line_end":463,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17914,"byte_end":17921,"line_start":464,"line_end":464,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17922,"byte_end":17925,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ The *lanes* of an array are 1D segments along an axis and when pointed","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":17926,"byte_end":18000,"line_start":466,"line_end":466,"column_start":1,"column_end":75}},{"value":"/ along the last axis they are *rows*, when pointed along the first axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18001,"byte_end":18075,"line_start":467,"line_end":467,"column_start":1,"column_end":75}},{"value":"/ they are *columns*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18076,"byte_end":18099,"line_start":468,"line_end":468,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18100,"byte_end":18103,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ A *m* × *n* array has *m* rows each of length *n* and conversely","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18104,"byte_end":18173,"line_start":470,"line_end":470,"column_start":1,"column_end":69}},{"value":"/ *n* columns each of length *m*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18174,"byte_end":18209,"line_start":471,"line_end":471,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18210,"byte_end":18213,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ To generalize this, we say that an array of dimension *a* × *m* × *n*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18214,"byte_end":18289,"line_start":473,"line_end":473,"column_start":1,"column_end":74}},{"value":"/ has *a m* rows. It's composed of *a* times the previous array, so it","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18290,"byte_end":18362,"line_start":474,"line_end":474,"column_start":1,"column_end":73}},{"value":"/ has *a* times as many rows.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18363,"byte_end":18394,"line_start":475,"line_end":475,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18395,"byte_end":18398,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ All methods: [`.rows()`][gr], [`.rows_mut()`][grm],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18399,"byte_end":18454,"line_start":477,"line_end":477,"column_start":1,"column_end":56}},{"value":"/ [`.columns()`][gc], [`.columns_mut()`][gcm],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18455,"byte_end":18503,"line_start":478,"line_end":478,"column_start":1,"column_end":49}},{"value":"/ [`.lanes(axis)`][l], [`.lanes_mut(axis)`][lm].","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18504,"byte_end":18554,"line_start":479,"line_end":479,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18555,"byte_end":18558,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ [gr]: #method.rows","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18559,"byte_end":18581,"line_start":481,"line_end":481,"column_start":1,"column_end":23}},{"value":"/ [grm]: #method.rows_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18582,"byte_end":18609,"line_start":482,"line_end":482,"column_start":1,"column_end":28}},{"value":"/ [gc]: #method.columns","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18610,"byte_end":18635,"line_start":483,"line_end":483,"column_start":1,"column_end":26}},{"value":"/ [gcm]: #method.columns_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18636,"byte_end":18666,"line_start":484,"line_end":484,"column_start":1,"column_end":31}},{"value":"/ [l]: #method.lanes","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18667,"byte_end":18689,"line_start":485,"line_end":485,"column_start":1,"column_end":23}},{"value":"/ [lm]: #method.lanes_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18690,"byte_end":18717,"line_start":486,"line_end":486,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18718,"byte_end":18721,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ Yes, for 2D arrays `.rows()` and `.outer_iter()` have about the same","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18722,"byte_end":18794,"line_start":488,"line_end":488,"column_start":1,"column_end":73}},{"value":"/ effect:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18795,"byte_end":18806,"line_start":489,"line_end":489,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18807,"byte_end":18810,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/  + `rows()` is a producer with *n* - 1 dimensions of 1 dimensional items","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18811,"byte_end":18887,"line_start":491,"line_end":491,"column_start":1,"column_end":77}},{"value":"/  + `outer_iter()` is a producer with 1 dimension of *n* - 1 dimensional items","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18888,"byte_end":18969,"line_start":492,"line_end":492,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18970,"byte_end":18973,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/ ## Slicing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18974,"byte_end":18988,"line_start":494,"line_end":494,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18989,"byte_end":18992,"line_start":495,"line_end":495,"column_start":1,"column_end":4}},{"value":"/ You can use slicing to create a view of a subset of the data in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":18993,"byte_end":19060,"line_start":496,"line_end":496,"column_start":1,"column_end":68}},{"value":"/ the array. Slicing methods include [`.slice()`], [`.slice_mut()`],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19061,"byte_end":19131,"line_start":497,"line_end":497,"column_start":1,"column_end":71}},{"value":"/ [`.slice_move()`], and [`.slice_collapse()`].","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19132,"byte_end":19181,"line_start":498,"line_end":498,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19182,"byte_end":19185,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ The slicing argument can be passed using the macro [`s![]`](macro.s!.html),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19186,"byte_end":19265,"line_start":500,"line_end":500,"column_start":1,"column_end":80}},{"value":"/ which will be used in all examples. (The explicit form is an instance of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19266,"byte_end":19342,"line_start":501,"line_end":501,"column_start":1,"column_end":77}},{"value":"/ [`SliceInfo`] or another type which implements [`SliceArg`]; see their docs","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19343,"byte_end":19422,"line_start":502,"line_end":502,"column_start":1,"column_end":80}},{"value":"/ for more information.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19423,"byte_end":19449,"line_start":503,"line_end":503,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19450,"byte_end":19453,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ If a range is used, the axis is preserved. If an index is used, that index","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19454,"byte_end":19532,"line_start":505,"line_end":505,"column_start":1,"column_end":79}},{"value":"/ is selected and the axis is removed; this selects a subview. See","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19533,"byte_end":19601,"line_start":506,"line_end":506,"column_start":1,"column_end":69}},{"value":"/ [*Subviews*](#subviews) for more information about subviews. If a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19602,"byte_end":19671,"line_start":507,"line_end":507,"column_start":1,"column_end":70}},{"value":"/ [`NewAxis`] instance is used, a new axis is inserted. Note that","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19672,"byte_end":19739,"line_start":508,"line_end":508,"column_start":1,"column_end":68}},{"value":"/ [`.slice_collapse()`] panics on `NewAxis` elements and behaves like","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19740,"byte_end":19811,"line_start":509,"line_end":509,"column_start":1,"column_end":72}},{"value":"/ [`.collapse_axis()`] by preserving the number of dimensions.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19812,"byte_end":19876,"line_start":510,"line_end":510,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19877,"byte_end":19880,"line_start":511,"line_end":511,"column_start":1,"column_end":4}},{"value":"/ [`.slice()`]: #method.slice","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19881,"byte_end":19912,"line_start":512,"line_end":512,"column_start":1,"column_end":32}},{"value":"/ [`.slice_mut()`]: #method.slice_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19913,"byte_end":19952,"line_start":513,"line_end":513,"column_start":1,"column_end":40}},{"value":"/ [`.slice_move()`]: #method.slice_move","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19953,"byte_end":19994,"line_start":514,"line_end":514,"column_start":1,"column_end":42}},{"value":"/ [`.slice_collapse()`]: #method.slice_collapse","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":19995,"byte_end":20044,"line_start":515,"line_end":515,"column_start":1,"column_end":50}},{"value":"/ [`NewAxis`]: struct.NewAxis.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20045,"byte_end":20081,"line_start":516,"line_end":516,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20082,"byte_end":20085,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ When slicing arrays with generic dimensionality, creating an instance of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20086,"byte_end":20162,"line_start":518,"line_end":518,"column_start":1,"column_end":77}},{"value":"/ [`SliceInfo`] to pass to the multi-axis slicing methods like [`.slice()`]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20163,"byte_end":20240,"line_start":519,"line_end":519,"column_start":1,"column_end":78}},{"value":"/ is awkward. In these cases, it's usually more convenient to use","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20241,"byte_end":20308,"line_start":520,"line_end":520,"column_start":1,"column_end":68}},{"value":"/ [`.slice_each_axis()`]/[`.slice_each_axis_mut()`]/[`.slice_each_axis_inplace()`]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20309,"byte_end":20393,"line_start":521,"line_end":521,"column_start":1,"column_end":85}},{"value":"/ or to create a view and then slice individual axes of the view using","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20394,"byte_end":20466,"line_start":522,"line_end":522,"column_start":1,"column_end":73}},{"value":"/ methods such as [`.slice_axis_inplace()`] and [`.collapse_axis()`].","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20467,"byte_end":20538,"line_start":523,"line_end":523,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20539,"byte_end":20542,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ [`.slice_each_axis()`]: #method.slice_each_axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20543,"byte_end":20594,"line_start":525,"line_end":525,"column_start":1,"column_end":52}},{"value":"/ [`.slice_each_axis_mut()`]: #method.slice_each_axis_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20595,"byte_end":20654,"line_start":526,"line_end":526,"column_start":1,"column_end":60}},{"value":"/ [`.slice_each_axis_inplace()`]: #method.slice_each_axis_inplace","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20655,"byte_end":20722,"line_start":527,"line_end":527,"column_start":1,"column_end":68}},{"value":"/ [`.slice_axis_inplace()`]: #method.slice_axis_inplace","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20723,"byte_end":20780,"line_start":528,"line_end":528,"column_start":1,"column_end":58}},{"value":"/ [`.collapse_axis()`]: #method.collapse_axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20781,"byte_end":20828,"line_start":529,"line_end":529,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20829,"byte_end":20832,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ It's possible to take multiple simultaneous *mutable* slices with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20833,"byte_end":20902,"line_start":531,"line_end":531,"column_start":1,"column_end":70}},{"value":"/ [`.multi_slice_mut()`] or (for [`ArrayViewMut`] only)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20903,"byte_end":20960,"line_start":532,"line_end":532,"column_start":1,"column_end":58}},{"value":"/ [`.multi_slice_move()`].","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20961,"byte_end":20989,"line_start":533,"line_end":533,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20990,"byte_end":20993,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ [`.multi_slice_mut()`]: #method.multi_slice_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":20994,"byte_end":21045,"line_start":535,"line_end":535,"column_start":1,"column_end":52}},{"value":"/ [`.multi_slice_move()`]: type.ArrayViewMut.html#method.multi_slice_move","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21046,"byte_end":21121,"line_start":536,"line_end":536,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21122,"byte_end":21125,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21126,"byte_end":21133,"line_start":538,"line_end":538,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{arr2, arr3, s, ArrayBase, DataMut, Dimension, NewAxis, Slice};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21134,"byte_end":21214,"line_start":539,"line_end":539,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21215,"byte_end":21218,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ // 2 submatrices of 2 rows with 3 elements per row, means a shape of `[2, 2, 3]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21219,"byte_end":21304,"line_start":541,"line_end":541,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21305,"byte_end":21308,"line_start":542,"line_end":542,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[ 1,  2,  3],     // -- 2 rows  \\_","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21309,"byte_end":21363,"line_start":543,"line_end":543,"column_start":1,"column_end":55}},{"value":"/                 [ 4,  5,  6]],    // --         /","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21364,"byte_end":21417,"line_start":544,"line_end":544,"column_start":1,"column_end":54}},{"value":"/                [[ 7,  8,  9],     //            \\_ 2 submatrices","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21418,"byte_end":21486,"line_start":545,"line_end":545,"column_start":1,"column_end":69}},{"value":"/                 [10, 11, 12]]]);  //            /","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21487,"byte_end":21540,"line_start":546,"line_end":546,"column_start":1,"column_end":54}},{"value":"/ //  3 columns ..../.../.../","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21541,"byte_end":21572,"line_start":547,"line_end":547,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21573,"byte_end":21576,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a.shape(), &[2, 2, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21577,"byte_end":21615,"line_start":549,"line_end":549,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21616,"byte_end":21619,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21620,"byte_end":21654,"line_start":551,"line_end":551,"column_start":1,"column_end":33}},{"value":"/ //","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21655,"byte_end":21661,"line_start":552,"line_end":552,"column_start":1,"column_end":7}},{"value":"/ // - Both of the submatrices of the greatest dimension: `..`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21662,"byte_end":21726,"line_start":553,"line_end":553,"column_start":1,"column_end":65}},{"value":"/ // - Only the first row in each submatrix: `0..1`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21727,"byte_end":21780,"line_start":554,"line_end":554,"column_start":1,"column_end":54}},{"value":"/ // - Every element in each row: `..`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21781,"byte_end":21821,"line_start":555,"line_end":555,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21822,"byte_end":21825,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ let b = a.slice(s![.., 0..1, ..]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21826,"byte_end":21864,"line_start":557,"line_end":557,"column_start":1,"column_end":39}},{"value":"/ let c = arr3(&[[[ 1,  2,  3]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21865,"byte_end":21899,"line_start":558,"line_end":558,"column_start":1,"column_end":35}},{"value":"/                [[ 7,  8,  9]]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21900,"byte_end":21936,"line_start":559,"line_end":559,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(b, c);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21937,"byte_end":21958,"line_start":560,"line_end":560,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(b.shape(), &[2, 1, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21959,"byte_end":21997,"line_start":561,"line_end":561,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":21998,"byte_end":22001,"line_start":562,"line_end":562,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22002,"byte_end":22036,"line_start":563,"line_end":563,"column_start":1,"column_end":33}},{"value":"/ //","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22037,"byte_end":22043,"line_start":564,"line_end":564,"column_start":1,"column_end":7}},{"value":"/ // - Both submatrices of the greatest dimension: `..`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22044,"byte_end":22101,"line_start":565,"line_end":565,"column_start":1,"column_end":58}},{"value":"/ // - The last row in each submatrix: `-1..`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22102,"byte_end":22149,"line_start":566,"line_end":566,"column_start":1,"column_end":48}},{"value":"/ // - Row elements in reverse order: `..;-1`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22150,"byte_end":22197,"line_start":567,"line_end":567,"column_start":1,"column_end":48}},{"value":"/ let d = a.slice(s![.., -1.., ..;-1]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22198,"byte_end":22239,"line_start":568,"line_end":568,"column_start":1,"column_end":42}},{"value":"/ let e = arr3(&[[[ 6,  5,  4]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22240,"byte_end":22274,"line_start":569,"line_end":569,"column_start":1,"column_end":35}},{"value":"/                [[12, 11, 10]]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22275,"byte_end":22311,"line_start":570,"line_end":570,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(d, e);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22312,"byte_end":22333,"line_start":571,"line_end":571,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(d.shape(), &[2, 1, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22334,"byte_end":22372,"line_start":572,"line_end":572,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22373,"byte_end":22376,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ // Let’s create a slice while selecting a subview and inserting a new axis with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22377,"byte_end":22462,"line_start":574,"line_end":574,"column_start":1,"column_end":84}},{"value":"/ //","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22463,"byte_end":22469,"line_start":575,"line_end":575,"column_start":1,"column_end":7}},{"value":"/ // - Both submatrices of the greatest dimension: `..`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22470,"byte_end":22527,"line_start":576,"line_end":576,"column_start":1,"column_end":58}},{"value":"/ // - The last row in each submatrix, removing that axis: `-1`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22528,"byte_end":22593,"line_start":577,"line_end":577,"column_start":1,"column_end":66}},{"value":"/ // - Row elements in reverse order: `..;-1`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22594,"byte_end":22641,"line_start":578,"line_end":578,"column_start":1,"column_end":48}},{"value":"/ // - A new axis at the end.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22642,"byte_end":22673,"line_start":579,"line_end":579,"column_start":1,"column_end":32}},{"value":"/ let f = a.slice(s![.., -1, ..;-1, NewAxis]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22674,"byte_end":22722,"line_start":580,"line_end":580,"column_start":1,"column_end":49}},{"value":"/ let g = arr3(&[[ [6],  [5],  [4]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22723,"byte_end":22761,"line_start":581,"line_end":581,"column_start":1,"column_end":39}},{"value":"/                [[12], [11], [10]]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22762,"byte_end":22802,"line_start":582,"line_end":582,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(f, g);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22803,"byte_end":22824,"line_start":583,"line_end":583,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(f.shape(), &[2, 3, 1]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22825,"byte_end":22863,"line_start":584,"line_end":584,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22864,"byte_end":22867,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ // Let's take two disjoint, mutable slices of a matrix with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22868,"byte_end":22931,"line_start":586,"line_end":586,"column_start":1,"column_end":64}},{"value":"/ //","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22932,"byte_end":22938,"line_start":587,"line_end":587,"column_start":1,"column_end":7}},{"value":"/ // - One containing all the even-index columns in the matrix","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":22939,"byte_end":23003,"line_start":588,"line_end":588,"column_start":1,"column_end":65}},{"value":"/ // - One containing all the odd-index columns in the matrix","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23004,"byte_end":23067,"line_start":589,"line_end":589,"column_start":1,"column_end":64}},{"value":"/ let mut h = arr2(&[[0, 1, 2, 3],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23068,"byte_end":23104,"line_start":590,"line_end":590,"column_start":1,"column_end":37}},{"value":"/                    [4, 5, 6, 7]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23105,"byte_end":23143,"line_start":591,"line_end":591,"column_start":1,"column_end":39}},{"value":"/ let (s0, s1) = h.multi_slice_mut((s![.., ..;2], s![.., 1..;2]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23144,"byte_end":23212,"line_start":592,"line_end":592,"column_start":1,"column_end":69}},{"value":"/ let i = arr2(&[[0, 2],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23213,"byte_end":23239,"line_start":593,"line_end":593,"column_start":1,"column_end":27}},{"value":"/                [4, 6]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23240,"byte_end":23268,"line_start":594,"line_end":594,"column_start":1,"column_end":29}},{"value":"/ let j = arr2(&[[1, 3],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23269,"byte_end":23295,"line_start":595,"line_end":595,"column_start":1,"column_end":27}},{"value":"/                [5, 7]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23296,"byte_end":23324,"line_start":596,"line_end":596,"column_start":1,"column_end":29}},{"value":"/ assert_eq!(s0, i);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23325,"byte_end":23347,"line_start":597,"line_end":597,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(s1, j);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23348,"byte_end":23370,"line_start":598,"line_end":598,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23371,"byte_end":23374,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ // Generic function which assigns the specified value to the elements which","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23375,"byte_end":23454,"line_start":600,"line_end":600,"column_start":1,"column_end":80}},{"value":"/ // have indices in the lower half along all axes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23455,"byte_end":23508,"line_start":601,"line_end":601,"column_start":1,"column_end":54}},{"value":"/ fn fill_lower<S, D>(arr: &mut ArrayBase<S, D>, x: S::Elem)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23509,"byte_end":23571,"line_start":602,"line_end":602,"column_start":1,"column_end":63}},{"value":"/ where","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23572,"byte_end":23581,"line_start":603,"line_end":603,"column_start":1,"column_end":10}},{"value":"/     S: DataMut,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23582,"byte_end":23601,"line_start":604,"line_end":604,"column_start":1,"column_end":20}},{"value":"/     S::Elem: Clone,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23602,"byte_end":23625,"line_start":605,"line_end":605,"column_start":1,"column_end":24}},{"value":"/     D: Dimension,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23626,"byte_end":23647,"line_start":606,"line_end":606,"column_start":1,"column_end":22}},{"value":"/ {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23648,"byte_end":23653,"line_start":607,"line_end":607,"column_start":1,"column_end":6}},{"value":"/     arr.slice_each_axis_mut(|ax| Slice::from(0..ax.len / 2)).fill(x);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23654,"byte_end":23727,"line_start":608,"line_end":608,"column_start":1,"column_end":74}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23728,"byte_end":23733,"line_start":609,"line_end":609,"column_start":1,"column_end":6}},{"value":"/ fill_lower(&mut h, 9);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23734,"byte_end":23760,"line_start":610,"line_end":610,"column_start":1,"column_end":27}},{"value":"/ let k = arr2(&[[9, 9, 2, 3],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23761,"byte_end":23793,"line_start":611,"line_end":611,"column_start":1,"column_end":33}},{"value":"/                [4, 5, 6, 7]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23794,"byte_end":23828,"line_start":612,"line_end":612,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(h, k);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23829,"byte_end":23850,"line_start":613,"line_end":613,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23851,"byte_end":23858,"line_start":614,"line_end":614,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23859,"byte_end":23862,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ ## Subviews","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23863,"byte_end":23878,"line_start":616,"line_end":616,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23879,"byte_end":23882,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ Subview methods allow you to restrict the array view while removing one","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23883,"byte_end":23958,"line_start":618,"line_end":618,"column_start":1,"column_end":76}},{"value":"/ axis from the array. Methods for selecting individual subviews include","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":23959,"byte_end":24033,"line_start":619,"line_end":619,"column_start":1,"column_end":75}},{"value":"/ [`.index_axis()`], [`.index_axis_mut()`], [`.index_axis_move()`], and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24034,"byte_end":24107,"line_start":620,"line_end":620,"column_start":1,"column_end":74}},{"value":"/ [`.index_axis_inplace()`]. You can also select a subview by using a single","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24108,"byte_end":24186,"line_start":621,"line_end":621,"column_start":1,"column_end":79}},{"value":"/ index instead of a range when slicing. Some other methods, such as","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24187,"byte_end":24257,"line_start":622,"line_end":622,"column_start":1,"column_end":71}},{"value":"/ [`.fold_axis()`], [`.axis_iter()`], [`.axis_iter_mut()`],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24258,"byte_end":24319,"line_start":623,"line_end":623,"column_start":1,"column_end":62}},{"value":"/ [`.outer_iter()`], and [`.outer_iter_mut()`] operate on all the subviews","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24320,"byte_end":24396,"line_start":624,"line_end":624,"column_start":1,"column_end":77}},{"value":"/ along an axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24397,"byte_end":24415,"line_start":625,"line_end":625,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24416,"byte_end":24419,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ A related method is [`.collapse_axis()`], which modifies the view in the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24420,"byte_end":24496,"line_start":627,"line_end":627,"column_start":1,"column_end":77}},{"value":"/ same way as [`.index_axis()`] except for removing the collapsed axis, since","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24497,"byte_end":24576,"line_start":628,"line_end":628,"column_start":1,"column_end":80}},{"value":"/ it operates *in place*. The length of the axis becomes 1.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24577,"byte_end":24638,"line_start":629,"line_end":629,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24639,"byte_end":24642,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ Methods for selecting an individual subview take two arguments: `axis` and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24643,"byte_end":24721,"line_start":631,"line_end":631,"column_start":1,"column_end":79}},{"value":"/ `index`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24722,"byte_end":24734,"line_start":632,"line_end":632,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24735,"byte_end":24738,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ [`.axis_iter()`]: #method.axis_iter","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24739,"byte_end":24778,"line_start":634,"line_end":634,"column_start":1,"column_end":40}},{"value":"/ [`.axis_iter_mut()`]: #method.axis_iter_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24779,"byte_end":24826,"line_start":635,"line_end":635,"column_start":1,"column_end":48}},{"value":"/ [`.fold_axis()`]: #method.fold_axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24827,"byte_end":24866,"line_start":636,"line_end":636,"column_start":1,"column_end":40}},{"value":"/ [`.index_axis()`]: #method.index_axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24867,"byte_end":24908,"line_start":637,"line_end":637,"column_start":1,"column_end":42}},{"value":"/ [`.index_axis_inplace()`]: #method.index_axis_inplace","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24909,"byte_end":24966,"line_start":638,"line_end":638,"column_start":1,"column_end":58}},{"value":"/ [`.index_axis_mut()`]: #method.index_axis_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":24967,"byte_end":25016,"line_start":639,"line_end":639,"column_start":1,"column_end":50}},{"value":"/ [`.index_axis_move()`]: #method.index_axis_move","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25017,"byte_end":25068,"line_start":640,"line_end":640,"column_start":1,"column_end":52}},{"value":"/ [`.collapse_axis()`]: #method.collapse_axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25069,"byte_end":25116,"line_start":641,"line_end":641,"column_start":1,"column_end":48}},{"value":"/ [`.outer_iter()`]: #method.outer_iter","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25117,"byte_end":25158,"line_start":642,"line_end":642,"column_start":1,"column_end":42}},{"value":"/ [`.outer_iter_mut()`]: #method.outer_iter_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25159,"byte_end":25208,"line_start":643,"line_end":643,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25209,"byte_end":25212,"line_start":644,"line_end":644,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25213,"byte_end":25220,"line_start":645,"line_end":645,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25221,"byte_end":25224,"line_start":646,"line_end":646,"column_start":1,"column_end":4}},{"value":"/ use ndarray::{arr3, aview1, aview2, s, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25225,"byte_end":25274,"line_start":647,"line_end":647,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25275,"byte_end":25278,"line_start":648,"line_end":648,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25279,"byte_end":25282,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ // 2 submatrices of 2 rows with 3 elements per row, means a shape of `[2, 2, 3]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25283,"byte_end":25368,"line_start":650,"line_end":650,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25369,"byte_end":25372,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ let a = arr3(&[[[ 1,  2,  3],    // \\ axis 0, submatrix 0","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25373,"byte_end":25434,"line_start":652,"line_end":652,"column_start":1,"column_end":62}},{"value":"/                 [ 4,  5,  6]],   // /","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25435,"byte_end":25476,"line_start":653,"line_end":653,"column_start":1,"column_end":42}},{"value":"/                [[ 7,  8,  9],    // \\ axis 0, submatrix 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25477,"byte_end":25538,"line_start":654,"line_end":654,"column_start":1,"column_end":62}},{"value":"/                 [10, 11, 12]]]); // /","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25539,"byte_end":25580,"line_start":655,"line_end":655,"column_start":1,"column_end":42}},{"value":"/         //        \\","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25581,"byte_end":25604,"line_start":656,"line_end":656,"column_start":1,"column_end":24}},{"value":"/         //         axis 2, column 0","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25605,"byte_end":25644,"line_start":657,"line_end":657,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25645,"byte_end":25648,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a.shape(), &[2, 2, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25649,"byte_end":25687,"line_start":659,"line_end":659,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25688,"byte_end":25691,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ // Let’s take a subview along the greatest dimension (axis 0),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25692,"byte_end":25760,"line_start":661,"line_end":661,"column_start":1,"column_end":67}},{"value":"/ // taking submatrix 0, then submatrix 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25761,"byte_end":25804,"line_start":662,"line_end":662,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25805,"byte_end":25808,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ let sub_0 = a.index_axis(Axis(0), 0);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25809,"byte_end":25850,"line_start":664,"line_end":664,"column_start":1,"column_end":42}},{"value":"/ let sub_1 = a.index_axis(Axis(0), 1);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25851,"byte_end":25892,"line_start":665,"line_end":665,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25893,"byte_end":25896,"line_start":666,"line_end":666,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(sub_0, aview2(&[[ 1,  2,  3],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25897,"byte_end":25941,"line_start":667,"line_end":667,"column_start":1,"column_end":45}},{"value":"/                            [ 4,  5,  6]]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25942,"byte_end":25989,"line_start":668,"line_end":668,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(sub_1, aview2(&[[ 7,  8,  9],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":25990,"byte_end":26034,"line_start":669,"line_end":669,"column_start":1,"column_end":45}},{"value":"/                            [10, 11, 12]]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26035,"byte_end":26082,"line_start":670,"line_end":670,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(sub_0.shape(), &[2, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26083,"byte_end":26122,"line_start":671,"line_end":671,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26123,"byte_end":26126,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ // This is the subview picking only axis 2, column 0","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26127,"byte_end":26183,"line_start":673,"line_end":673,"column_start":1,"column_end":57}},{"value":"/ let sub_col = a.index_axis(Axis(2), 0);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26184,"byte_end":26227,"line_start":674,"line_end":674,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26228,"byte_end":26231,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(sub_col, aview2(&[[ 1,  4],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26232,"byte_end":26274,"line_start":676,"line_end":676,"column_start":1,"column_end":43}},{"value":"/                              [ 7, 10]]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26275,"byte_end":26320,"line_start":677,"line_end":677,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26321,"byte_end":26324,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ // You can take multiple subviews at once (and slice at the same time)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26325,"byte_end":26399,"line_start":679,"line_end":679,"column_start":1,"column_end":75}},{"value":"/ let double_sub = a.slice(s![1, .., 0]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26400,"byte_end":26443,"line_start":680,"line_end":680,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(double_sub, aview1(&[7, 10]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26444,"byte_end":26489,"line_start":681,"line_end":681,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26490,"byte_end":26497,"line_start":682,"line_end":682,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26498,"byte_end":26501,"line_start":683,"line_end":683,"column_start":1,"column_end":4}},{"value":"/ ## Arithmetic Operations","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26502,"byte_end":26530,"line_start":684,"line_end":684,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26531,"byte_end":26534,"line_start":685,"line_end":685,"column_start":1,"column_end":4}},{"value":"/ Arrays support all arithmetic operations the same way: they apply elementwise.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26535,"byte_end":26617,"line_start":686,"line_end":686,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26618,"byte_end":26621,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ Since the trait implementations are hard to overview, here is a summary.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26622,"byte_end":26698,"line_start":688,"line_end":688,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26699,"byte_end":26702,"line_start":689,"line_end":689,"column_start":1,"column_end":4}},{"value":"/ ### Binary Operators with Two Arrays","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26703,"byte_end":26743,"line_start":690,"line_end":690,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26744,"byte_end":26747,"line_start":691,"line_end":691,"column_start":1,"column_end":4}},{"value":"/ Let `A` be an array or view of any kind. Let `B` be an array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26748,"byte_end":26812,"line_start":692,"line_end":692,"column_start":1,"column_end":65}},{"value":"/ with owned storage (either `Array` or `ArcArray`).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26813,"byte_end":26867,"line_start":693,"line_end":693,"column_start":1,"column_end":55}},{"value":"/ Let `C` be an array with mutable data (either `Array`, `ArcArray`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26868,"byte_end":26937,"line_start":694,"line_end":694,"column_start":1,"column_end":70}},{"value":"/ or `ArrayViewMut`).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26938,"byte_end":26961,"line_start":695,"line_end":695,"column_start":1,"column_end":24}},{"value":"/ The following combinations of operands","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":26962,"byte_end":27004,"line_start":696,"line_end":696,"column_start":1,"column_end":43}},{"value":"/ are supported for an arbitrary binary operator denoted by `@` (it can be","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27005,"byte_end":27081,"line_start":697,"line_end":697,"column_start":1,"column_end":77}},{"value":"/ `+`, `-`, `*`, `/` and so on).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27082,"byte_end":27116,"line_start":698,"line_end":698,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27117,"byte_end":27120,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/ - `&A @ &A` which produces a new `Array`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27121,"byte_end":27165,"line_start":700,"line_end":700,"column_start":1,"column_end":45}},{"value":"/ - `B @ A` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27166,"byte_end":27242,"line_start":701,"line_end":701,"column_start":1,"column_end":77}},{"value":"/ - `B @ &A` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27243,"byte_end":27320,"line_start":702,"line_end":702,"column_start":1,"column_end":78}},{"value":"/ - `C @= &A` which performs an arithmetic operation in place","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27321,"byte_end":27384,"line_start":703,"line_end":703,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27385,"byte_end":27388,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ Note that the element type needs to implement the operator trait and the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27389,"byte_end":27465,"line_start":705,"line_end":705,"column_start":1,"column_end":77}},{"value":"/ `Clone` trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27466,"byte_end":27484,"line_start":706,"line_end":706,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27485,"byte_end":27488,"line_start":707,"line_end":707,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27489,"byte_end":27496,"line_start":708,"line_end":708,"column_start":1,"column_end":8}},{"value":"/ use ndarray::{array, ArrayView1};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27497,"byte_end":27534,"line_start":709,"line_end":709,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27535,"byte_end":27538,"line_start":710,"line_end":710,"column_start":1,"column_end":4}},{"value":"/ let owned1 = array![1, 2];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27539,"byte_end":27569,"line_start":711,"line_end":711,"column_start":1,"column_end":31}},{"value":"/ let owned2 = array![3, 4];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27570,"byte_end":27600,"line_start":712,"line_end":712,"column_start":1,"column_end":31}},{"value":"/ let view1 = ArrayView1::from(&[5, 6]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27601,"byte_end":27643,"line_start":713,"line_end":713,"column_start":1,"column_end":43}},{"value":"/ let view2 = ArrayView1::from(&[7, 8]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27644,"byte_end":27686,"line_start":714,"line_end":714,"column_start":1,"column_end":43}},{"value":"/ let mut mutable = array![9, 10];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27687,"byte_end":27723,"line_start":715,"line_end":715,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27724,"byte_end":27727,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ let sum1 = &view1 + &view2;   // Allocates a new array. Note the explicit `&`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27728,"byte_end":27810,"line_start":717,"line_end":717,"column_start":1,"column_end":83}},{"value":"/ // let sum2 = view1 + &view2; // This doesn't work because `view1` is not an owned array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27811,"byte_end":27904,"line_start":718,"line_end":718,"column_start":1,"column_end":94}},{"value":"/ let sum3 = owned1 + view1;    // Consumes `owned1`, updates it, and returns it.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27905,"byte_end":27988,"line_start":719,"line_end":719,"column_start":1,"column_end":84}},{"value":"/ let sum4 = owned2 + &view2;   // Consumes `owned2`, updates it, and returns it.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":27989,"byte_end":28072,"line_start":720,"line_end":720,"column_start":1,"column_end":84}},{"value":"/ mutable += &view2;            // Updates `mutable` in-place.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28073,"byte_end":28137,"line_start":721,"line_end":721,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28138,"byte_end":28145,"line_start":722,"line_end":722,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28146,"byte_end":28149,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ ### Binary Operators with Array and Scalar","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28150,"byte_end":28196,"line_start":724,"line_end":724,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28197,"byte_end":28200,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ The trait [`ScalarOperand`](trait.ScalarOperand.html) marks types that can be used in arithmetic","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28201,"byte_end":28301,"line_start":726,"line_end":726,"column_start":1,"column_end":101}},{"value":"/ with arrays directly. For a scalar `K` the following combinations of operands","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28302,"byte_end":28383,"line_start":727,"line_end":727,"column_start":1,"column_end":82}},{"value":"/ are supported (scalar can be on either the left or right side, but","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28384,"byte_end":28454,"line_start":728,"line_end":728,"column_start":1,"column_end":71}},{"value":"/ `ScalarOperand` docs has the detailed condtions).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28455,"byte_end":28508,"line_start":729,"line_end":729,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28509,"byte_end":28512,"line_start":730,"line_end":730,"column_start":1,"column_end":4}},{"value":"/ - `&A @ K` or `K @ &A` which produces a new `Array`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28513,"byte_end":28568,"line_start":731,"line_end":731,"column_start":1,"column_end":56}},{"value":"/ - `B @ K` or `K @ B` which consumes `B`, updates it with the result and returns it","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28569,"byte_end":28655,"line_start":732,"line_end":732,"column_start":1,"column_end":87}},{"value":"/ - `C @= K` which performs an arithmetic operation in place","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28656,"byte_end":28718,"line_start":733,"line_end":733,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28719,"byte_end":28722,"line_start":734,"line_end":734,"column_start":1,"column_end":4}},{"value":"/ ### Unary Operators","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28723,"byte_end":28746,"line_start":735,"line_end":735,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28747,"byte_end":28750,"line_start":736,"line_end":736,"column_start":1,"column_end":4}},{"value":"/ Let `A` be an array or view of any kind. Let `B` be an array with owned","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28751,"byte_end":28826,"line_start":737,"line_end":737,"column_start":1,"column_end":76}},{"value":"/ storage (either `Array` or `ArcArray`). The following operands are supported","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28827,"byte_end":28907,"line_start":738,"line_end":738,"column_start":1,"column_end":81}},{"value":"/ for an arbitrary unary operator denoted by `@` (it can be `-` or `!`).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28908,"byte_end":28982,"line_start":739,"line_end":739,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28983,"byte_end":28986,"line_start":740,"line_end":740,"column_start":1,"column_end":4}},{"value":"/ - `@&A` which produces a new `Array`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":28987,"byte_end":29027,"line_start":741,"line_end":741,"column_start":1,"column_end":41}},{"value":"/ - `@B` which consumes `B`, updates it with the result, and returns it","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29028,"byte_end":29101,"line_start":742,"line_end":742,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29102,"byte_end":29105,"line_start":743,"line_end":743,"column_start":1,"column_end":4}},{"value":"/ ## Broadcasting","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29106,"byte_end":29125,"line_start":744,"line_end":744,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29126,"byte_end":29129,"line_start":745,"line_end":745,"column_start":1,"column_end":4}},{"value":"/ Arrays support limited *broadcasting*, where arithmetic operations with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29130,"byte_end":29205,"line_start":746,"line_end":746,"column_start":1,"column_end":76}},{"value":"/ array operands of different sizes can be carried out by repeating the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29206,"byte_end":29279,"line_start":747,"line_end":747,"column_start":1,"column_end":74}},{"value":"/ elements of the smaller dimension array. See","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29280,"byte_end":29328,"line_start":748,"line_end":748,"column_start":1,"column_end":49}},{"value":"/ [`.broadcast()`](#method.broadcast) for a more detailed","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29329,"byte_end":29388,"line_start":749,"line_end":749,"column_start":1,"column_end":60}},{"value":"/ description.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29389,"byte_end":29405,"line_start":750,"line_end":750,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29406,"byte_end":29409,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29410,"byte_end":29417,"line_start":752,"line_end":752,"column_start":1,"column_end":8}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29418,"byte_end":29440,"line_start":753,"line_end":753,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29441,"byte_end":29444,"line_start":754,"line_end":754,"column_start":1,"column_end":4}},{"value":"/ let a = arr2(&[[1., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29445,"byte_end":29473,"line_start":755,"line_end":755,"column_start":1,"column_end":29}},{"value":"/                [1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29474,"byte_end":29502,"line_start":756,"line_end":756,"column_start":1,"column_end":29}},{"value":"/                [0., 3.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29503,"byte_end":29531,"line_start":757,"line_end":757,"column_start":1,"column_end":29}},{"value":"/                [0., 4.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29532,"byte_end":29562,"line_start":758,"line_end":758,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29563,"byte_end":29566,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ let b = arr2(&[[0., 1.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29567,"byte_end":29597,"line_start":760,"line_end":760,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29598,"byte_end":29601,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ let c = arr2(&[[1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29602,"byte_end":29630,"line_start":762,"line_end":762,"column_start":1,"column_end":29}},{"value":"/                [1., 3.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29631,"byte_end":29659,"line_start":763,"line_end":763,"column_start":1,"column_end":29}},{"value":"/                [0., 4.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29660,"byte_end":29688,"line_start":764,"line_end":764,"column_start":1,"column_end":29}},{"value":"/                [0., 5.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29689,"byte_end":29719,"line_start":765,"line_end":765,"column_start":1,"column_end":31}},{"value":"/ // We can add because the shapes are compatible even if not equal.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29720,"byte_end":29790,"line_start":766,"line_end":766,"column_start":1,"column_end":71}},{"value":"/ // The `b` array is shape 1 × 2 but acts like a 4 × 2 array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29791,"byte_end":29857,"line_start":767,"line_end":767,"column_start":1,"column_end":65}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29858,"byte_end":29870,"line_start":768,"line_end":768,"column_start":1,"column_end":13}},{"value":"/     c == a + b","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29871,"byte_end":29889,"line_start":769,"line_end":769,"column_start":1,"column_end":19}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29890,"byte_end":29896,"line_start":770,"line_end":770,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29897,"byte_end":29904,"line_start":771,"line_end":771,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29905,"byte_end":29908,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ ## Conversions","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29909,"byte_end":29927,"line_start":773,"line_end":773,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29928,"byte_end":29931,"line_start":774,"line_end":774,"column_start":1,"column_end":4}},{"value":"/ ### Conversions Between Array Types","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29932,"byte_end":29971,"line_start":775,"line_end":775,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29972,"byte_end":29975,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ This table is a summary of the conversions between arrays of different","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":29976,"byte_end":30050,"line_start":777,"line_end":777,"column_start":1,"column_end":75}},{"value":"/ ownership, dimensionality, and element type. All of the conversions in this","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30051,"byte_end":30130,"line_start":778,"line_end":778,"column_start":1,"column_end":80}},{"value":"/ table preserve the shape of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30131,"byte_end":30173,"line_start":779,"line_end":779,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30174,"byte_end":30177,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ <table>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30178,"byte_end":30189,"line_start":781,"line_end":781,"column_start":1,"column_end":12}},{"value":"/ <tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30190,"byte_end":30198,"line_start":782,"line_end":782,"column_start":1,"column_end":9}},{"value":"/ <th rowspan=\"2\">Output</th>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30199,"byte_end":30230,"line_start":783,"line_end":783,"column_start":1,"column_end":32}},{"value":"/ <th colspan=\"5\">Input</th>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30231,"byte_end":30261,"line_start":784,"line_end":784,"column_start":1,"column_end":31}},{"value":"/ </tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30262,"byte_end":30271,"line_start":785,"line_end":785,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30272,"byte_end":30275,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30276,"byte_end":30284,"line_start":787,"line_end":787,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30285,"byte_end":30293,"line_start":788,"line_end":788,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30294,"byte_end":30297,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ `Array<A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30298,"byte_end":30315,"line_start":790,"line_end":790,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30316,"byte_end":30319,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30320,"byte_end":30329,"line_start":792,"line_end":792,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30330,"byte_end":30338,"line_start":793,"line_end":793,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30339,"byte_end":30342,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ `ArcArray<A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30343,"byte_end":30363,"line_start":795,"line_end":795,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30364,"byte_end":30367,"line_start":796,"line_end":796,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30368,"byte_end":30377,"line_start":797,"line_end":797,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30378,"byte_end":30386,"line_start":798,"line_end":798,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30387,"byte_end":30390,"line_start":799,"line_end":799,"column_start":1,"column_end":4}},{"value":"/ `CowArray<'a, A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30391,"byte_end":30415,"line_start":800,"line_end":800,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30416,"byte_end":30419,"line_start":801,"line_end":801,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30420,"byte_end":30429,"line_start":802,"line_end":802,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30430,"byte_end":30438,"line_start":803,"line_end":803,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30439,"byte_end":30442,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ `ArrayView<'a, A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30443,"byte_end":30468,"line_start":805,"line_end":805,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30469,"byte_end":30472,"line_start":806,"line_end":806,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30473,"byte_end":30482,"line_start":807,"line_end":807,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30483,"byte_end":30491,"line_start":808,"line_end":808,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30492,"byte_end":30495,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ `ArrayViewMut<'a, A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30496,"byte_end":30524,"line_start":810,"line_end":810,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30525,"byte_end":30528,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30529,"byte_end":30538,"line_start":812,"line_end":812,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30539,"byte_end":30548,"line_start":813,"line_end":813,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30549,"byte_end":30552,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `Array<A, D>`-->","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30553,"byte_end":30592,"line_start":815,"line_end":815,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30593,"byte_end":30596,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30597,"byte_end":30605,"line_start":817,"line_end":817,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30606,"byte_end":30614,"line_start":818,"line_end":818,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30615,"byte_end":30618,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ `Array<A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30619,"byte_end":30636,"line_start":820,"line_end":820,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30637,"byte_end":30640,"line_start":821,"line_end":821,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30641,"byte_end":30650,"line_start":822,"line_end":822,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30651,"byte_end":30659,"line_start":823,"line_end":823,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30660,"byte_end":30663,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30664,"byte_end":30673,"line_start":825,"line_end":825,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30674,"byte_end":30677,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30678,"byte_end":30687,"line_start":827,"line_end":827,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30688,"byte_end":30696,"line_start":828,"line_end":828,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30697,"byte_end":30700,"line_start":829,"line_end":829,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned()`][.into_owned()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30701,"byte_end":30738,"line_start":830,"line_end":830,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30739,"byte_end":30742,"line_start":831,"line_end":831,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30743,"byte_end":30752,"line_start":832,"line_end":832,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30753,"byte_end":30761,"line_start":833,"line_end":833,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30762,"byte_end":30765,"line_start":834,"line_end":834,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned()`][.into_owned()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30766,"byte_end":30803,"line_start":835,"line_end":835,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30804,"byte_end":30807,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30808,"byte_end":30817,"line_start":837,"line_end":837,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30818,"byte_end":30826,"line_start":838,"line_end":838,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30827,"byte_end":30830,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned()`][.to_owned()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30831,"byte_end":30864,"line_start":840,"line_end":840,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30865,"byte_end":30868,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30869,"byte_end":30878,"line_start":842,"line_end":842,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30879,"byte_end":30887,"line_start":843,"line_end":843,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30888,"byte_end":30891,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned()`][.to_owned()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30892,"byte_end":30925,"line_start":845,"line_end":845,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30926,"byte_end":30929,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30930,"byte_end":30939,"line_start":847,"line_end":847,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30940,"byte_end":30949,"line_start":848,"line_end":848,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30950,"byte_end":30953,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArcArray<A, D>`-->","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30954,"byte_end":30996,"line_start":850,"line_end":850,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":30997,"byte_end":31000,"line_start":851,"line_end":851,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31001,"byte_end":31009,"line_start":852,"line_end":852,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31010,"byte_end":31018,"line_start":853,"line_end":853,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31019,"byte_end":31022,"line_start":854,"line_end":854,"column_start":1,"column_end":4}},{"value":"/ `ArcArray<A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31023,"byte_end":31043,"line_start":855,"line_end":855,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31044,"byte_end":31047,"line_start":856,"line_end":856,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31048,"byte_end":31057,"line_start":857,"line_end":857,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31058,"byte_end":31066,"line_start":858,"line_end":858,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31067,"byte_end":31070,"line_start":859,"line_end":859,"column_start":1,"column_end":4}},{"value":"/ [`a.into_shared()`][.into_shared()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31071,"byte_end":31110,"line_start":860,"line_end":860,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31111,"byte_end":31114,"line_start":861,"line_end":861,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31115,"byte_end":31124,"line_start":862,"line_end":862,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31125,"byte_end":31133,"line_start":863,"line_end":863,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31134,"byte_end":31137,"line_start":864,"line_end":864,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31138,"byte_end":31147,"line_start":865,"line_end":865,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31148,"byte_end":31151,"line_start":866,"line_end":866,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31152,"byte_end":31161,"line_start":867,"line_end":867,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31162,"byte_end":31170,"line_start":868,"line_end":868,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31171,"byte_end":31174,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ [`a.into_owned().into_shared()`][.into_shared()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31175,"byte_end":31227,"line_start":870,"line_end":870,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31228,"byte_end":31231,"line_start":871,"line_end":871,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31232,"byte_end":31241,"line_start":872,"line_end":872,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31242,"byte_end":31250,"line_start":873,"line_end":873,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31251,"byte_end":31254,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned().into_shared()`][.into_shared()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31255,"byte_end":31305,"line_start":875,"line_end":875,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31306,"byte_end":31309,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31310,"byte_end":31319,"line_start":877,"line_end":877,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31320,"byte_end":31328,"line_start":878,"line_end":878,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31329,"byte_end":31332,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ [`a.to_owned().into_shared()`][.into_shared()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31333,"byte_end":31383,"line_start":880,"line_end":880,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31384,"byte_end":31387,"line_start":881,"line_end":881,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31388,"byte_end":31397,"line_start":882,"line_end":882,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31398,"byte_end":31407,"line_start":883,"line_end":883,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31408,"byte_end":31411,"line_start":884,"line_end":884,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `CowArray<'a, A, D>`-->","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31412,"byte_end":31458,"line_start":885,"line_end":885,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31459,"byte_end":31462,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31463,"byte_end":31471,"line_start":887,"line_end":887,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31472,"byte_end":31480,"line_start":888,"line_end":888,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31481,"byte_end":31484,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ `CowArray<'a, A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31485,"byte_end":31509,"line_start":890,"line_end":890,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31510,"byte_end":31513,"line_start":891,"line_end":891,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31514,"byte_end":31523,"line_start":892,"line_end":892,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31524,"byte_end":31532,"line_start":893,"line_end":893,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31533,"byte_end":31536,"line_start":894,"line_end":894,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a)`](type.CowArray.html#impl-From<ArrayBase<OwnedRepr<A>%2C%20D>>)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31537,"byte_end":31624,"line_start":895,"line_end":895,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31625,"byte_end":31628,"line_start":896,"line_end":896,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31629,"byte_end":31638,"line_start":897,"line_end":897,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31639,"byte_end":31647,"line_start":898,"line_end":898,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31648,"byte_end":31651,"line_start":899,"line_end":899,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a.into_owned())`](type.CowArray.html#impl-From<ArrayBase<OwnedRepr<A>%2C%20D>>)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31652,"byte_end":31752,"line_start":900,"line_end":900,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31753,"byte_end":31756,"line_start":901,"line_end":901,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31757,"byte_end":31766,"line_start":902,"line_end":902,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31767,"byte_end":31775,"line_start":903,"line_end":903,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31776,"byte_end":31779,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ no-op","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31780,"byte_end":31789,"line_start":905,"line_end":905,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31790,"byte_end":31793,"line_start":906,"line_end":906,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31794,"byte_end":31803,"line_start":907,"line_end":907,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31804,"byte_end":31812,"line_start":908,"line_end":908,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31813,"byte_end":31816,"line_start":909,"line_end":909,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a)`](type.CowArray.html#impl-From<ArrayBase<ViewRepr<%26%27a%20A>%2C%20D>>)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31817,"byte_end":31913,"line_start":910,"line_end":910,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31914,"byte_end":31917,"line_start":911,"line_end":911,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31918,"byte_end":31927,"line_start":912,"line_end":912,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31928,"byte_end":31936,"line_start":913,"line_end":913,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31937,"byte_end":31940,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ [`CowArray::from(a.view())`](type.CowArray.html#impl-From<ArrayBase<ViewRepr<%26%27a%20A>%2C%20D>>)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":31941,"byte_end":32044,"line_start":915,"line_end":915,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32045,"byte_end":32048,"line_start":916,"line_end":916,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32049,"byte_end":32058,"line_start":917,"line_end":917,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32059,"byte_end":32068,"line_start":918,"line_end":918,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32069,"byte_end":32072,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArrayView<'b, A, D>`-->","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32073,"byte_end":32120,"line_start":920,"line_end":920,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32121,"byte_end":32124,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32125,"byte_end":32133,"line_start":922,"line_end":922,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32134,"byte_end":32142,"line_start":923,"line_end":923,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32143,"byte_end":32146,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ `ArrayView<'b, A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32147,"byte_end":32172,"line_start":925,"line_end":925,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32173,"byte_end":32176,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32177,"byte_end":32186,"line_start":927,"line_end":927,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32187,"byte_end":32195,"line_start":928,"line_end":928,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32196,"byte_end":32199,"line_start":929,"line_end":929,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32200,"byte_end":32225,"line_start":930,"line_end":930,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32226,"byte_end":32229,"line_start":931,"line_end":931,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32230,"byte_end":32239,"line_start":932,"line_end":932,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32240,"byte_end":32248,"line_start":933,"line_end":933,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32249,"byte_end":32252,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32253,"byte_end":32278,"line_start":935,"line_end":935,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32279,"byte_end":32282,"line_start":936,"line_end":936,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32283,"byte_end":32292,"line_start":937,"line_end":937,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32293,"byte_end":32301,"line_start":938,"line_end":938,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32302,"byte_end":32305,"line_start":939,"line_end":939,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32306,"byte_end":32331,"line_start":940,"line_end":940,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32332,"byte_end":32335,"line_start":941,"line_end":941,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32336,"byte_end":32345,"line_start":942,"line_end":942,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32346,"byte_end":32354,"line_start":943,"line_end":943,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32355,"byte_end":32358,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()] or [`a.reborrow()`][ArrayView::reborrow()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32359,"byte_end":32427,"line_start":945,"line_end":945,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32428,"byte_end":32431,"line_start":946,"line_end":946,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32432,"byte_end":32441,"line_start":947,"line_end":947,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32442,"byte_end":32450,"line_start":948,"line_end":948,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32451,"byte_end":32454,"line_start":949,"line_end":949,"column_start":1,"column_end":4}},{"value":"/ [`a.view()`][.view()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32455,"byte_end":32480,"line_start":950,"line_end":950,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32481,"byte_end":32484,"line_start":951,"line_end":951,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32485,"byte_end":32494,"line_start":952,"line_end":952,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32495,"byte_end":32504,"line_start":953,"line_end":953,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32505,"byte_end":32508,"line_start":954,"line_end":954,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `ArrayViewMut<'b, A, D>`-->","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32509,"byte_end":32559,"line_start":955,"line_end":955,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32560,"byte_end":32563,"line_start":956,"line_end":956,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32564,"byte_end":32572,"line_start":957,"line_end":957,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32573,"byte_end":32581,"line_start":958,"line_end":958,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32582,"byte_end":32585,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ `ArrayViewMut<'b, A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32586,"byte_end":32614,"line_start":960,"line_end":960,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32615,"byte_end":32618,"line_start":961,"line_end":961,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32619,"byte_end":32628,"line_start":962,"line_end":962,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32629,"byte_end":32637,"line_start":963,"line_end":963,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32638,"byte_end":32641,"line_start":964,"line_end":964,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32642,"byte_end":32675,"line_start":965,"line_end":965,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32676,"byte_end":32679,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32680,"byte_end":32689,"line_start":967,"line_end":967,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32690,"byte_end":32698,"line_start":968,"line_end":968,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32699,"byte_end":32702,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32703,"byte_end":32736,"line_start":970,"line_end":970,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32737,"byte_end":32740,"line_start":971,"line_end":971,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32741,"byte_end":32750,"line_start":972,"line_end":972,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32751,"byte_end":32759,"line_start":973,"line_end":973,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32760,"byte_end":32763,"line_start":974,"line_end":974,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32764,"byte_end":32797,"line_start":975,"line_end":975,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32798,"byte_end":32801,"line_start":976,"line_end":976,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32802,"byte_end":32811,"line_start":977,"line_end":977,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32812,"byte_end":32820,"line_start":978,"line_end":978,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32821,"byte_end":32824,"line_start":979,"line_end":979,"column_start":1,"column_end":4}},{"value":"/ illegal","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32825,"byte_end":32836,"line_start":980,"line_end":980,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32837,"byte_end":32840,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32841,"byte_end":32850,"line_start":982,"line_end":982,"column_start":1,"column_end":10}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32851,"byte_end":32859,"line_start":983,"line_end":983,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32860,"byte_end":32863,"line_start":984,"line_end":984,"column_start":1,"column_end":4}},{"value":"/ [`a.view_mut()`][.view_mut()] or [`a.reborrow()`][ArrayViewMut::reborrow()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32864,"byte_end":32943,"line_start":985,"line_end":985,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32944,"byte_end":32947,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32948,"byte_end":32957,"line_start":987,"line_end":987,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32958,"byte_end":32967,"line_start":988,"line_end":988,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32968,"byte_end":32971,"line_start":989,"line_end":989,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to equivalent with dim `D2`-->","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":32972,"byte_end":33022,"line_start":990,"line_end":990,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33023,"byte_end":33026,"line_start":991,"line_end":991,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33027,"byte_end":33035,"line_start":992,"line_end":992,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33036,"byte_end":33044,"line_start":993,"line_end":993,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33045,"byte_end":33048,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ equivalent with dim `D2` (e.g. converting from dynamic dim to const dim)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33049,"byte_end":33125,"line_start":995,"line_end":995,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33126,"byte_end":33129,"line_start":996,"line_end":996,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33130,"byte_end":33139,"line_start":997,"line_end":997,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33140,"byte_end":33160,"line_start":998,"line_end":998,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33161,"byte_end":33164,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ [`a.into_dimensionality::<D2>()`][.into_dimensionality()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33165,"byte_end":33226,"line_start":1000,"line_end":1000,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33227,"byte_end":33230,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33231,"byte_end":33240,"line_start":1002,"line_end":1002,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33241,"byte_end":33250,"line_start":1003,"line_end":1003,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33251,"byte_end":33254,"line_start":1004,"line_end":1004,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to equivalent with dim `IxDyn`-->","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33255,"byte_end":33308,"line_start":1005,"line_end":1005,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33309,"byte_end":33312,"line_start":1006,"line_end":1006,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33313,"byte_end":33321,"line_start":1007,"line_end":1007,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33322,"byte_end":33330,"line_start":1008,"line_end":1008,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33331,"byte_end":33334,"line_start":1009,"line_end":1009,"column_start":1,"column_end":4}},{"value":"/ equivalent with dim `IxDyn`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33335,"byte_end":33366,"line_start":1010,"line_end":1010,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33367,"byte_end":33370,"line_start":1011,"line_end":1011,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33371,"byte_end":33380,"line_start":1012,"line_end":1012,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33381,"byte_end":33401,"line_start":1013,"line_end":1013,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33402,"byte_end":33405,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ [`a.into_dyn()`][.into_dyn()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33406,"byte_end":33439,"line_start":1015,"line_end":1015,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33440,"byte_end":33443,"line_start":1016,"line_end":1016,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33444,"byte_end":33453,"line_start":1017,"line_end":1017,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33454,"byte_end":33463,"line_start":1018,"line_end":1018,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33464,"byte_end":33467,"line_start":1019,"line_end":1019,"column_start":1,"column_end":4}},{"value":"/ <!--Conversions to `Array<B, D>`-->","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33468,"byte_end":33507,"line_start":1020,"line_end":1020,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33508,"byte_end":33511,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ <tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33512,"byte_end":33520,"line_start":1022,"line_end":1022,"column_start":1,"column_end":9}},{"value":"/ <td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33521,"byte_end":33529,"line_start":1023,"line_end":1023,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33530,"byte_end":33533,"line_start":1024,"line_end":1024,"column_start":1,"column_end":4}},{"value":"/ `Array<B, D>` (new element type)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33534,"byte_end":33570,"line_start":1025,"line_end":1025,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33571,"byte_end":33574,"line_start":1026,"line_end":1026,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33575,"byte_end":33584,"line_start":1027,"line_end":1027,"column_start":1,"column_end":10}},{"value":"/ <td colspan=\"5\">","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33585,"byte_end":33605,"line_start":1028,"line_end":1028,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33606,"byte_end":33609,"line_start":1029,"line_end":1029,"column_start":1,"column_end":4}},{"value":"/ [`a.map(|x| x.do_your_conversion())`][.map()]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33610,"byte_end":33659,"line_start":1030,"line_end":1030,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33660,"byte_end":33663,"line_start":1031,"line_end":1031,"column_start":1,"column_end":4}},{"value":"/ </td>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33664,"byte_end":33673,"line_start":1032,"line_end":1032,"column_start":1,"column_end":10}},{"value":"/ </tr>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33674,"byte_end":33683,"line_start":1033,"line_end":1033,"column_start":1,"column_end":10}},{"value":"/ </table>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33684,"byte_end":33696,"line_start":1034,"line_end":1034,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33697,"byte_end":33700,"line_start":1035,"line_end":1035,"column_start":1,"column_end":4}},{"value":"/ ### Conversions Between Arrays and `Vec`s/Slices/Scalars","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33701,"byte_end":33761,"line_start":1036,"line_end":1036,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33762,"byte_end":33765,"line_start":1037,"line_end":1037,"column_start":1,"column_end":4}},{"value":"/ This is a table of the safe conversions between arrays and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33766,"byte_end":33828,"line_start":1038,"line_end":1038,"column_start":1,"column_end":63}},{"value":"/ `Vec`s/slices/scalars. Note that some of the return values are actually","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33829,"byte_end":33904,"line_start":1039,"line_end":1039,"column_start":1,"column_end":76}},{"value":"/ `Result`/`Option` wrappers around the indicated output types.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33905,"byte_end":33970,"line_start":1040,"line_end":1040,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33971,"byte_end":33974,"line_start":1041,"line_end":1041,"column_start":1,"column_end":4}},{"value":"/ Input | Output | Methods","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":33975,"byte_end":34003,"line_start":1042,"line_end":1042,"column_start":1,"column_end":29}},{"value":"/ ------|--------|--------","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34004,"byte_end":34032,"line_start":1043,"line_end":1043,"column_start":1,"column_end":29}},{"value":"/ `Vec<A>` | `ArrayBase<S: DataOwned, Ix1>` | [`::from_vec()`](#method.from_vec)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34033,"byte_end":34115,"line_start":1044,"line_end":1044,"column_start":1,"column_end":83}},{"value":"/ `Vec<A>` | `ArrayBase<S: DataOwned, D>` | [`::from_shape_vec()`](#method.from_shape_vec)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34116,"byte_end":34208,"line_start":1045,"line_end":1045,"column_start":1,"column_end":93}},{"value":"/ `&[A]` | `ArrayView1<A>` | [`::from()`](type.ArrayView.html#method.from)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34209,"byte_end":34285,"line_start":1046,"line_end":1046,"column_start":1,"column_end":77}},{"value":"/ `&[A]` | `ArrayView<A, D>` | [`::from_shape()`](type.ArrayView.html#method.from_shape)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34286,"byte_end":34376,"line_start":1047,"line_end":1047,"column_start":1,"column_end":91}},{"value":"/ `&mut [A]` | `ArrayViewMut1<A>` | [`::from()`](type.ArrayViewMut.html#method.from)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34377,"byte_end":34463,"line_start":1048,"line_end":1048,"column_start":1,"column_end":87}},{"value":"/ `&mut [A]` | `ArrayViewMut<A, D>` | [`::from_shape()`](type.ArrayViewMut.html#method.from_shape)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34464,"byte_end":34564,"line_start":1049,"line_end":1049,"column_start":1,"column_end":101}},{"value":"/ `&ArrayBase<S, Ix1>` | `Vec<A>` | [`.to_vec()`](#method.to_vec)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34565,"byte_end":34632,"line_start":1050,"line_end":1050,"column_start":1,"column_end":68}},{"value":"/ `Array<A, D>` | `Vec<A>` | [`.into_raw_vec()`](type.Array.html#method.into_raw_vec)<sup>[1](#into_raw_vec)</sup>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34633,"byte_end":34749,"line_start":1051,"line_end":1051,"column_start":1,"column_end":117}},{"value":"/ `&ArrayBase<S, D>` | `&[A]` | [`.as_slice()`](#method.as_slice)<sup>[2](#req_contig_std)</sup>, [`.as_slice_memory_order()`](#method.as_slice_memory_order)<sup>[3](#req_contig)</sup>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34750,"byte_end":34936,"line_start":1052,"line_end":1052,"column_start":1,"column_end":187}},{"value":"/ `&mut ArrayBase<S: DataMut, D>` | `&mut [A]` | [`.as_slice_mut()`](#method.as_slice_mut)<sup>[2](#req_contig_std)</sup>, [`.as_slice_memory_order_mut()`](#method.as_slice_memory_order_mut)<sup>[3](#req_contig)</sup>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":34937,"byte_end":35156,"line_start":1053,"line_end":1053,"column_start":1,"column_end":220}},{"value":"/ `ArrayView<A, D>` | `&[A]` | [`.to_slice()`](type.ArrayView.html#method.to_slice)<sup>[2](#req_contig_std)</sup>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35157,"byte_end":35273,"line_start":1054,"line_end":1054,"column_start":1,"column_end":117}},{"value":"/ `ArrayViewMut<A, D>` | `&mut [A]` | [`.into_slice()`](type.ArrayViewMut.html#method.into_slice)<sup>[2](#req_contig_std)</sup>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35274,"byte_end":35404,"line_start":1055,"line_end":1055,"column_start":1,"column_end":131}},{"value":"/ `Array0<A>` | `A` | [`.into_scalar()`](type.Array.html#method.into_scalar)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35405,"byte_end":35483,"line_start":1056,"line_end":1056,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35484,"byte_end":35487,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"into_raw_vec\">1</a></sup>Returns the data in memory order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35488,"byte_end":35564,"line_start":1058,"line_end":1058,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35565,"byte_end":35568,"line_start":1059,"line_end":1059,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"req_contig_std\">2</a></sup>Works only if the array is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35569,"byte_end":35640,"line_start":1060,"line_end":1060,"column_start":1,"column_end":72}},{"value":"/ contiguous and in standard order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35641,"byte_end":35678,"line_start":1061,"line_end":1061,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35679,"byte_end":35682,"line_start":1062,"line_end":1062,"column_start":1,"column_end":4}},{"value":"/ <sup><a name=\"req_contig\">3</a></sup>Works only if the array is contiguous.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35683,"byte_end":35762,"line_start":1063,"line_end":1063,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35763,"byte_end":35766,"line_start":1064,"line_end":1064,"column_start":1,"column_end":4}},{"value":"/ The table above does not include all the constructors; it only shows","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35767,"byte_end":35839,"line_start":1065,"line_end":1065,"column_start":1,"column_end":73}},{"value":"/ conversions to/from `Vec`s/slices. See","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35840,"byte_end":35882,"line_start":1066,"line_end":1066,"column_start":1,"column_end":43}},{"value":"/ [below](#constructor-methods-for-owned-arrays) for more constructors.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35883,"byte_end":35956,"line_start":1067,"line_end":1067,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35957,"byte_end":35960,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ [ArrayView::reborrow()]: type.ArrayView.html#method.reborrow","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":35961,"byte_end":36025,"line_start":1069,"line_end":1069,"column_start":1,"column_end":65}},{"value":"/ [ArrayViewMut::reborrow()]: type.ArrayViewMut.html#method.reborrow","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36026,"byte_end":36096,"line_start":1070,"line_end":1070,"column_start":1,"column_end":71}},{"value":"/ [.into_dimensionality()]: #method.into_dimensionality","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36097,"byte_end":36154,"line_start":1071,"line_end":1071,"column_start":1,"column_end":58}},{"value":"/ [.into_dyn()]: #method.into_dyn","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36155,"byte_end":36190,"line_start":1072,"line_end":1072,"column_start":1,"column_end":36}},{"value":"/ [.into_owned()]: #method.into_owned","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36191,"byte_end":36230,"line_start":1073,"line_end":1073,"column_start":1,"column_end":40}},{"value":"/ [.into_shared()]: #method.into_shared","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36231,"byte_end":36272,"line_start":1074,"line_end":1074,"column_start":1,"column_end":42}},{"value":"/ [.to_owned()]: #method.to_owned","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36273,"byte_end":36308,"line_start":1075,"line_end":1075,"column_start":1,"column_end":36}},{"value":"/ [.map()]: #method.map","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36309,"byte_end":36334,"line_start":1076,"line_end":1076,"column_start":1,"column_end":26}},{"value":"/ [.view()]: #method.view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36335,"byte_end":36362,"line_start":1077,"line_end":1077,"column_start":1,"column_end":28}},{"value":"/ [.view_mut()]: #method.view_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36363,"byte_end":36398,"line_start":1078,"line_end":1078,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36399,"byte_end":36402,"line_start":1079,"line_end":1079,"column_start":1,"column_end":4}},{"value":"/ ### Conversions from Nested `Vec`s/`Array`s","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36403,"byte_end":36450,"line_start":1080,"line_end":1080,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36451,"byte_end":36454,"line_start":1081,"line_end":1081,"column_start":1,"column_end":4}},{"value":"/ It's generally a good idea to avoid nested `Vec`/`Array` types, such as","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36455,"byte_end":36530,"line_start":1082,"line_end":1082,"column_start":1,"column_end":76}},{"value":"/ `Vec<Vec<A>>` or `Vec<Array2<A>>` because:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36531,"byte_end":36577,"line_start":1083,"line_end":1083,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36578,"byte_end":36581,"line_start":1084,"line_end":1084,"column_start":1,"column_end":4}},{"value":"/ * they require extra heap allocations compared to a single `Array`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36582,"byte_end":36653,"line_start":1085,"line_end":1085,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36654,"byte_end":36657,"line_start":1086,"line_end":1086,"column_start":1,"column_end":4}},{"value":"/ * they can scatter data all over memory (because of multiple allocations),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36658,"byte_end":36736,"line_start":1087,"line_end":1087,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36737,"byte_end":36740,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ * they cause unnecessary indirection (traversing multiple pointers to reach","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36741,"byte_end":36820,"line_start":1089,"line_end":1089,"column_start":1,"column_end":80}},{"value":"/   the data),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36821,"byte_end":36837,"line_start":1090,"line_end":1090,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36838,"byte_end":36841,"line_start":1091,"line_end":1091,"column_start":1,"column_end":4}},{"value":"/ * they don't enforce consistent shape within the nested","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36842,"byte_end":36901,"line_start":1092,"line_end":1092,"column_start":1,"column_end":60}},{"value":"/   `Vec`s/`ArrayBase`s, and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36902,"byte_end":36932,"line_start":1093,"line_end":1093,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36933,"byte_end":36936,"line_start":1094,"line_end":1094,"column_start":1,"column_end":4}},{"value":"/ * they are generally more difficult to work with.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36937,"byte_end":36990,"line_start":1095,"line_end":1095,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36991,"byte_end":36994,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ The most common case where users might consider using nested","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":36995,"byte_end":37059,"line_start":1097,"line_end":1097,"column_start":1,"column_end":65}},{"value":"/ `Vec`s/`Array`s is when creating an array by appending rows/subviews in a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37060,"byte_end":37137,"line_start":1098,"line_end":1098,"column_start":1,"column_end":78}},{"value":"/ loop, where the rows/subviews are computed within the loop. However, there","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37138,"byte_end":37216,"line_start":1099,"line_end":1099,"column_start":1,"column_end":79}},{"value":"/ are better ways than using nested `Vec`s/`Array`s.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37217,"byte_end":37271,"line_start":1100,"line_end":1100,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37272,"byte_end":37275,"line_start":1101,"line_end":1101,"column_start":1,"column_end":4}},{"value":"/ If you know ahead-of-time the shape of the final array, the cleanest","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37276,"byte_end":37348,"line_start":1102,"line_end":1102,"column_start":1,"column_end":73}},{"value":"/ solution is to allocate the final array before the loop, and then assign","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37349,"byte_end":37425,"line_start":1103,"line_end":1103,"column_start":1,"column_end":77}},{"value":"/ the data to it within the loop, like this:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37426,"byte_end":37472,"line_start":1104,"line_end":1104,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37473,"byte_end":37476,"line_start":1105,"line_end":1105,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37477,"byte_end":37488,"line_start":1106,"line_end":1106,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37489,"byte_end":37528,"line_start":1107,"line_end":1107,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37529,"byte_end":37532,"line_start":1108,"line_end":1108,"column_start":1,"column_end":4}},{"value":"/ let mut arr = Array2::zeros((2, 3));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37533,"byte_end":37573,"line_start":1109,"line_end":1109,"column_start":1,"column_end":41}},{"value":"/ for (i, mut row) in arr.axis_iter_mut(Axis(0)).enumerate() {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37574,"byte_end":37638,"line_start":1110,"line_end":1110,"column_start":1,"column_end":65}},{"value":"/     // Perform calculations and assign to `row`; this is a trivial example:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37639,"byte_end":37718,"line_start":1111,"line_end":1111,"column_start":1,"column_end":80}},{"value":"/     row.fill(i);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37719,"byte_end":37739,"line_start":1112,"line_end":1112,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37740,"byte_end":37745,"line_start":1113,"line_end":1113,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(arr, array![[0, 0, 0], [1, 1, 1]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37746,"byte_end":37796,"line_start":1114,"line_end":1114,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37797,"byte_end":37804,"line_start":1115,"line_end":1115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37805,"byte_end":37808,"line_start":1116,"line_end":1116,"column_start":1,"column_end":4}},{"value":"/ If you don't know ahead-of-time the shape of the final array, then the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37809,"byte_end":37883,"line_start":1117,"line_end":1117,"column_start":1,"column_end":75}},{"value":"/ cleanest solution is generally to append the data to a flat `Vec`, and then","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37884,"byte_end":37963,"line_start":1118,"line_end":1118,"column_start":1,"column_end":80}},{"value":"/ convert it to an `Array` at the end with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":37964,"byte_end":38008,"line_start":1119,"line_end":1119,"column_start":1,"column_end":45}},{"value":"/ [`::from_shape_vec()`](#method.from_shape_vec). You just have to be careful","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38009,"byte_end":38088,"line_start":1120,"line_end":1120,"column_start":1,"column_end":80}},{"value":"/ that the layout of the data (the order of the elements in the flat `Vec`)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38089,"byte_end":38166,"line_start":1121,"line_end":1121,"column_start":1,"column_end":78}},{"value":"/ is correct.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38167,"byte_end":38182,"line_start":1122,"line_end":1122,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38183,"byte_end":38186,"line_start":1123,"line_end":1123,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38187,"byte_end":38198,"line_start":1124,"line_end":1124,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38199,"byte_end":38232,"line_start":1125,"line_end":1125,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38233,"byte_end":38236,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ let ncols = 3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38237,"byte_end":38255,"line_start":1127,"line_end":1127,"column_start":1,"column_end":19}},{"value":"/ let mut data = Vec::new();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38256,"byte_end":38286,"line_start":1128,"line_end":1128,"column_start":1,"column_end":31}},{"value":"/ let mut nrows = 0;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38287,"byte_end":38309,"line_start":1129,"line_end":1129,"column_start":1,"column_end":23}},{"value":"/ for i in 0..2 {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38310,"byte_end":38329,"line_start":1130,"line_end":1130,"column_start":1,"column_end":20}},{"value":"/     // Compute `row` and append it to `data`; this is a trivial example:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38330,"byte_end":38406,"line_start":1131,"line_end":1131,"column_start":1,"column_end":77}},{"value":"/     let row = vec![i; ncols];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38407,"byte_end":38440,"line_start":1132,"line_end":1132,"column_start":1,"column_end":34}},{"value":"/     data.extend_from_slice(&row);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38441,"byte_end":38478,"line_start":1133,"line_end":1133,"column_start":1,"column_end":38}},{"value":"/     nrows += 1;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38479,"byte_end":38498,"line_start":1134,"line_end":1134,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38499,"byte_end":38504,"line_start":1135,"line_end":1135,"column_start":1,"column_end":6}},{"value":"/ let arr = Array2::from_shape_vec((nrows, ncols), data)?;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38505,"byte_end":38565,"line_start":1136,"line_end":1136,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(arr, array![[0, 0, 0], [1, 1, 1]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38566,"byte_end":38616,"line_start":1137,"line_end":1137,"column_start":1,"column_end":51}},{"value":"/ # Ok::<(), ndarray::ShapeError>(())","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38617,"byte_end":38656,"line_start":1138,"line_end":1138,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38657,"byte_end":38664,"line_start":1139,"line_end":1139,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38665,"byte_end":38668,"line_start":1140,"line_end":1140,"column_start":1,"column_end":4}},{"value":"/ If neither of these options works for you, and you really need to convert","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38669,"byte_end":38746,"line_start":1141,"line_end":1141,"column_start":1,"column_end":78}},{"value":"/ nested `Vec`/`Array` instances to an `Array`, the cleanest solution is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38747,"byte_end":38821,"line_start":1142,"line_end":1142,"column_start":1,"column_end":75}},{"value":"/ generally to use","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38822,"byte_end":38842,"line_start":1143,"line_end":1143,"column_start":1,"column_end":21}},{"value":"/ [`Iterator::flatten()`](https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flatten)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38843,"byte_end":38941,"line_start":1144,"line_end":1144,"column_start":1,"column_end":99}},{"value":"/ to get a flat `Vec`, and then convert the `Vec` to an `Array` with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":38942,"byte_end":39012,"line_start":1145,"line_end":1145,"column_start":1,"column_end":71}},{"value":"/ [`::from_shape_vec()`](#method.from_shape_vec), like this:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39013,"byte_end":39075,"line_start":1146,"line_end":1146,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39076,"byte_end":39079,"line_start":1147,"line_end":1147,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39080,"byte_end":39091,"line_start":1148,"line_end":1148,"column_start":1,"column_end":12}},{"value":"/ use ndarray::{array, Array2, Array3};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39092,"byte_end":39133,"line_start":1149,"line_end":1149,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39134,"byte_end":39137,"line_start":1150,"line_end":1150,"column_start":1,"column_end":4}},{"value":"/ let nested: Vec<Array2<i32>> = vec![","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39138,"byte_end":39178,"line_start":1151,"line_end":1151,"column_start":1,"column_end":41}},{"value":"/     array![[1, 2, 3], [4, 5, 6]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39179,"byte_end":39216,"line_start":1152,"line_end":1152,"column_start":1,"column_end":38}},{"value":"/     array![[7, 8, 9], [10, 11, 12]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39217,"byte_end":39257,"line_start":1153,"line_end":1153,"column_start":1,"column_end":41}},{"value":"/ ];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39258,"byte_end":39264,"line_start":1154,"line_end":1154,"column_start":1,"column_end":7}},{"value":"/ let inner_shape = nested[0].dim();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39265,"byte_end":39303,"line_start":1155,"line_end":1155,"column_start":1,"column_end":39}},{"value":"/ let shape = (nested.len(), inner_shape.0, inner_shape.1);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39304,"byte_end":39365,"line_start":1156,"line_end":1156,"column_start":1,"column_end":62}},{"value":"/ let flat: Vec<i32> = nested.iter().flatten().cloned().collect();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39366,"byte_end":39434,"line_start":1157,"line_end":1157,"column_start":1,"column_end":69}},{"value":"/ let arr = Array3::from_shape_vec(shape, flat)?;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39435,"byte_end":39486,"line_start":1158,"line_end":1158,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(arr, array![","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39487,"byte_end":39514,"line_start":1159,"line_end":1159,"column_start":1,"column_end":28}},{"value":"/     [[1, 2, 3], [4, 5, 6]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39515,"byte_end":39546,"line_start":1160,"line_end":1160,"column_start":1,"column_end":32}},{"value":"/     [[7, 8, 9], [10, 11, 12]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39547,"byte_end":39581,"line_start":1161,"line_end":1161,"column_start":1,"column_end":35}},{"value":"/ ]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39582,"byte_end":39589,"line_start":1162,"line_end":1162,"column_start":1,"column_end":8}},{"value":"/ # Ok::<(), ndarray::ShapeError>(())","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39590,"byte_end":39629,"line_start":1163,"line_end":1163,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39630,"byte_end":39637,"line_start":1164,"line_end":1164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39638,"byte_end":39641,"line_start":1165,"line_end":1165,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation assumes that the nested `Vec`s are all the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39642,"byte_end":39718,"line_start":1166,"line_end":1166,"column_start":1,"column_end":77}},{"value":"/ same shape and that the `Vec` is non-empty. Depending on your application,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39719,"byte_end":39797,"line_start":1167,"line_end":1167,"column_start":1,"column_end":79}},{"value":"/ it may be a good idea to add checks for these assumptions and possibly","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39798,"byte_end":39872,"line_start":1168,"line_end":1168,"column_start":1,"column_end":75}},{"value":"/ choose a different way to handle the empty case.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39873,"byte_end":39925,"line_start":1169,"line_end":1169,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":39926,"byte_end":39929,"line_start":1170,"line_end":1170,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":4062},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47534,"byte_end":47542,"line_start":1323,"line_end":1323,"column_start":10,"column_end":18},"name":"ArcArray","qualname":"::ArcArray","value":"ArrayBase<OwnedArcRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array where the data has shared ownership and is copy on write.","sig":null,"attributes":[{"value":"/ An array where the data has shared ownership and is copy on write.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46453,"byte_end":46523,"line_start":1301,"line_end":1301,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46524,"byte_end":46527,"line_start":1302,"line_end":1302,"column_start":1,"column_end":4}},{"value":"/ The `ArcArray<A, D>` is parameterized by `A` for the element type and `D` for","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46528,"byte_end":46609,"line_start":1303,"line_end":1303,"column_start":1,"column_end":82}},{"value":"/ the dimensionality.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46610,"byte_end":46633,"line_start":1304,"line_end":1304,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46634,"byte_end":46637,"line_start":1305,"line_end":1305,"column_start":1,"column_end":4}},{"value":"/ It can act as both an owner as the data as well as a shared reference (view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46638,"byte_end":46717,"line_start":1306,"line_end":1306,"column_start":1,"column_end":80}},{"value":"/ like).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46718,"byte_end":46728,"line_start":1307,"line_end":1307,"column_start":1,"column_end":11}},{"value":"/ Calling a method for mutating elements on `ArcArray`, for example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46729,"byte_end":46798,"line_start":1308,"line_end":1308,"column_start":1,"column_end":70}},{"value":"/ [`view_mut()`](struct.ArrayBase.html#method.view_mut) or","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46799,"byte_end":46859,"line_start":1309,"line_end":1309,"column_start":1,"column_end":61}},{"value":"/ [`get_mut()`](struct.ArrayBase.html#method.get_mut), will break sharing and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46860,"byte_end":46939,"line_start":1310,"line_end":1310,"column_start":1,"column_end":80}},{"value":"/ require a clone of the data (if it is not uniquely held).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":46940,"byte_end":47001,"line_start":1311,"line_end":1311,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47002,"byte_end":47005,"line_start":1312,"line_end":1312,"column_start":1,"column_end":4}},{"value":"/ `ArcArray` uses atomic reference counting like `Arc`, so it is `Send` and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47006,"byte_end":47083,"line_start":1313,"line_end":1313,"column_start":1,"column_end":78}},{"value":"/ `Sync` (when allowed by the element type of the array too).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47084,"byte_end":47147,"line_start":1314,"line_end":1314,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47148,"byte_end":47151,"line_start":1315,"line_end":1315,"column_start":1,"column_end":4}},{"value":"/ [**`ArrayBase`**](struct.ArrayBase.html) is used to implement both the owned","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47152,"byte_end":47232,"line_start":1316,"line_end":1316,"column_start":1,"column_end":81}},{"value":"/ arrays and the views; see its docs for an overview of all array features.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47233,"byte_end":47310,"line_start":1317,"line_end":1317,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47311,"byte_end":47314,"line_start":1318,"line_end":1318,"column_start":1,"column_end":4}},{"value":"/ See also:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47315,"byte_end":47328,"line_start":1319,"line_end":1319,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47329,"byte_end":47332,"line_start":1320,"line_end":1320,"column_start":1,"column_end":4}},{"value":"/ + [Constructor Methods for Owned Arrays](struct.ArrayBase.html#constructor-methods-for-owned-arrays)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47333,"byte_end":47437,"line_start":1321,"line_end":1321,"column_start":1,"column_end":105}},{"value":"/ + [Methods For All Array Types](struct.ArrayBase.html#methods-for-all-array-types)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47438,"byte_end":47524,"line_start":1322,"line_end":1322,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":4065},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48410,"byte_end":48415,"line_start":1346,"line_end":1346,"column_start":10,"column_end":15},"name":"Array","qualname":"::Array","value":"ArrayBase<OwnedRepr<A>, D>","parent":null,"children":[],"decl_id":null,"docs":" An array that owns its data uniquely.","sig":null,"attributes":[{"value":"/ An array that owns its data uniquely.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47583,"byte_end":47624,"line_start":1325,"line_end":1325,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47625,"byte_end":47628,"line_start":1326,"line_end":1326,"column_start":1,"column_end":4}},{"value":"/ `Array` is the main n-dimensional array type, and it owns all its array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47629,"byte_end":47704,"line_start":1327,"line_end":1327,"column_start":1,"column_end":76}},{"value":"/ elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47705,"byte_end":47718,"line_start":1328,"line_end":1328,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47719,"byte_end":47722,"line_start":1329,"line_end":1329,"column_start":1,"column_end":4}},{"value":"/ The `Array<A, D>` is parameterized by `A` for the element type and `D` for","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47723,"byte_end":47801,"line_start":1330,"line_end":1330,"column_start":1,"column_end":79}},{"value":"/ the dimensionality.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47802,"byte_end":47825,"line_start":1331,"line_end":1331,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47826,"byte_end":47829,"line_start":1332,"line_end":1332,"column_start":1,"column_end":4}},{"value":"/ [**`ArrayBase`**](struct.ArrayBase.html) is used to implement both the owned","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47830,"byte_end":47910,"line_start":1333,"line_end":1333,"column_start":1,"column_end":81}},{"value":"/ arrays and the views; see its docs for an overview of all array features.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47911,"byte_end":47988,"line_start":1334,"line_end":1334,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47989,"byte_end":47992,"line_start":1335,"line_end":1335,"column_start":1,"column_end":4}},{"value":"/ See also:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":47993,"byte_end":48006,"line_start":1336,"line_end":1336,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48007,"byte_end":48010,"line_start":1337,"line_end":1337,"column_start":1,"column_end":4}},{"value":"/ + [Constructor Methods for Owned Arrays](struct.ArrayBase.html#constructor-methods-for-owned-arrays)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48011,"byte_end":48115,"line_start":1338,"line_end":1338,"column_start":1,"column_end":105}},{"value":"/ + [Methods For All Array Types](struct.ArrayBase.html#methods-for-all-array-types)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48116,"byte_end":48202,"line_start":1339,"line_end":1339,"column_start":1,"column_end":87}},{"value":"/ + Dimensionality-specific type alises","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48203,"byte_end":48244,"line_start":1340,"line_end":1340,"column_start":1,"column_end":42}},{"value":"/ [`Array1`](type.Array1.html),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48245,"byte_end":48278,"line_start":1341,"line_end":1341,"column_start":1,"column_end":34}},{"value":"/ [`Array2`](type.Array2.html),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48279,"byte_end":48312,"line_start":1342,"line_end":1342,"column_start":1,"column_end":34}},{"value":"/ [`Array3`](type.Array3.html), ...,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48313,"byte_end":48351,"line_start":1343,"line_end":1343,"column_start":1,"column_end":39}},{"value":"/ [`ArrayD`](type.ArrayD.html),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48352,"byte_end":48385,"line_start":1344,"line_end":1344,"column_start":1,"column_end":34}},{"value":"/ and so on.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48386,"byte_end":48400,"line_start":1345,"line_end":1345,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":4068},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49329,"byte_end":49337,"line_start":1367,"line_end":1367,"column_start":10,"column_end":18},"name":"CowArray","qualname":"::CowArray","value":"ArrayBase<CowRepr, D>","parent":null,"children":[],"decl_id":null,"docs":" An array with copy-on-write behavior.","sig":null,"attributes":[{"value":"/ An array with copy-on-write behavior.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48453,"byte_end":48494,"line_start":1348,"line_end":1348,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48495,"byte_end":48498,"line_start":1349,"line_end":1349,"column_start":1,"column_end":4}},{"value":"/ An `CowArray` represents either a uniquely owned array or a view of an","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48499,"byte_end":48573,"line_start":1350,"line_end":1350,"column_start":1,"column_end":75}},{"value":"/ array. The `'a` corresponds to the lifetime of the view variant.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48574,"byte_end":48642,"line_start":1351,"line_end":1351,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48643,"byte_end":48646,"line_start":1352,"line_end":1352,"column_start":1,"column_end":4}},{"value":"/ This type is analogous to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48647,"byte_end":48676,"line_start":1353,"line_end":1353,"column_start":1,"column_end":30}},{"value":"/ [`std::borrow::Cow`](https://doc.rust-lang.org/std/borrow/enum.Cow.html).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48677,"byte_end":48754,"line_start":1354,"line_end":1354,"column_start":1,"column_end":78}},{"value":"/ If a `CowArray` instance is the immutable view variant, then calling a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48755,"byte_end":48829,"line_start":1355,"line_end":1355,"column_start":1,"column_end":75}},{"value":"/ method for mutating elements in the array will cause it to be converted","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48830,"byte_end":48905,"line_start":1356,"line_end":1356,"column_start":1,"column_end":76}},{"value":"/ into the owned variant (by cloning all the elements) before the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48906,"byte_end":48973,"line_start":1357,"line_end":1357,"column_start":1,"column_end":68}},{"value":"/ modification is performed.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":48974,"byte_end":49004,"line_start":1358,"line_end":1358,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49005,"byte_end":49008,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49009,"byte_end":49082,"line_start":1360,"line_end":1360,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49083,"byte_end":49086,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/ See also [`ArcArray`](type.ArcArray.html), which also provides","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49087,"byte_end":49153,"line_start":1362,"line_end":1362,"column_start":1,"column_end":67}},{"value":"/ copy-on-write behavior but has a reference-counted pointer to the data","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49154,"byte_end":49228,"line_start":1363,"line_end":1363,"column_start":1,"column_end":75}},{"value":"/ instead of either a view or a uniquely owned copy.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49229,"byte_end":49283,"line_start":1364,"line_end":1364,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49284,"byte_end":49287,"line_start":1365,"line_end":1365,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49288,"byte_end":49319,"line_start":1366,"line_end":1366,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":4072},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49859,"byte_end":49868,"line_start":1382,"line_end":1382,"column_start":10,"column_end":19},"name":"ArrayView","qualname":"::ArrayView","value":"ArrayBase<ViewRepr<&'a A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-only array view.","sig":null,"attributes":[{"value":"/ A read-only array view.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49381,"byte_end":49408,"line_start":1369,"line_end":1369,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49409,"byte_end":49412,"line_start":1370,"line_end":1370,"column_start":1,"column_end":4}},{"value":"/ An array view represents an array or a part of it, created from","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49413,"byte_end":49480,"line_start":1371,"line_end":1371,"column_start":1,"column_end":68}},{"value":"/ an iterator, subview or slice of an array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49481,"byte_end":49527,"line_start":1372,"line_end":1372,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49528,"byte_end":49531,"line_start":1373,"line_end":1373,"column_start":1,"column_end":4}},{"value":"/ The `ArrayView<'a, A, D>` is parameterized by `'a` for the scope of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49532,"byte_end":49607,"line_start":1374,"line_end":1374,"column_start":1,"column_end":76}},{"value":"/ borrow, `A` for the element type and `D` for the dimensionality.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49608,"byte_end":49676,"line_start":1375,"line_end":1375,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49677,"byte_end":49680,"line_start":1376,"line_end":1376,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49681,"byte_end":49754,"line_start":1377,"line_end":1377,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49755,"byte_end":49758,"line_start":1378,"line_end":1378,"column_start":1,"column_end":4}},{"value":"/ See also [`ArrayViewMut`](type.ArrayViewMut.html).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49759,"byte_end":49813,"line_start":1379,"line_end":1379,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49814,"byte_end":49817,"line_start":1380,"line_end":1380,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49818,"byte_end":49849,"line_start":1381,"line_end":1381,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":4076},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50389,"byte_end":50401,"line_start":1397,"line_end":1397,"column_start":10,"column_end":22},"name":"ArrayViewMut","qualname":"::ArrayViewMut","value":"ArrayBase<ViewRepr<&'a mut A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-write array view.","sig":null,"attributes":[{"value":"/ A read-write array view.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49913,"byte_end":49941,"line_start":1384,"line_end":1384,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49942,"byte_end":49945,"line_start":1385,"line_end":1385,"column_start":1,"column_end":4}},{"value":"/ An array view represents an array or a part of it, created from","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":49946,"byte_end":50013,"line_start":1386,"line_end":1386,"column_start":1,"column_end":68}},{"value":"/ an iterator, subview or slice of an array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50014,"byte_end":50060,"line_start":1387,"line_end":1387,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50061,"byte_end":50064,"line_start":1388,"line_end":1388,"column_start":1,"column_end":4}},{"value":"/ The `ArrayViewMut<'a, A, D>` is parameterized by `'a` for the scope of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50065,"byte_end":50143,"line_start":1389,"line_end":1389,"column_start":1,"column_end":79}},{"value":"/ borrow, `A` for the element type and `D` for the dimensionality.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50144,"byte_end":50212,"line_start":1390,"line_end":1390,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50213,"byte_end":50216,"line_start":1391,"line_end":1391,"column_start":1,"column_end":4}},{"value":"/ Array views have all the methods of an array (see [`ArrayBase`][ab]).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50217,"byte_end":50290,"line_start":1392,"line_end":1392,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50291,"byte_end":50294,"line_start":1393,"line_end":1393,"column_start":1,"column_end":4}},{"value":"/ See also [`ArrayView`](type.ArrayView.html).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50295,"byte_end":50343,"line_start":1394,"line_end":1394,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50344,"byte_end":50347,"line_start":1395,"line_end":1395,"column_start":1,"column_end":4}},{"value":"/ [ab]: struct.ArrayBase.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50348,"byte_end":50379,"line_start":1396,"line_end":1396,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":4080},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51401,"byte_end":51413,"line_start":1422,"line_end":1422,"column_start":10,"column_end":22},"name":"RawArrayView","qualname":"::RawArrayView","value":"ArrayBase<RawViewRepr<*const A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A read-only array view without a lifetime.","sig":null,"attributes":[{"value":"/ A read-only array view without a lifetime.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50450,"byte_end":50496,"line_start":1399,"line_end":1399,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50497,"byte_end":50500,"line_start":1400,"line_end":1400,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`ArrayView`] but does not carry any lifetime or","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50501,"byte_end":50572,"line_start":1401,"line_end":1401,"column_start":1,"column_end":72}},{"value":"/ ownership information, and its data cannot be read without an unsafe","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50573,"byte_end":50645,"line_start":1402,"line_end":1402,"column_start":1,"column_end":73}},{"value":"/ conversion into an [`ArrayView`]. The relationship between `RawArrayView`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50646,"byte_end":50723,"line_start":1403,"line_end":1403,"column_start":1,"column_end":78}},{"value":"/ and [`ArrayView`] is somewhat analogous to the relationship between `*const","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50724,"byte_end":50803,"line_start":1404,"line_end":1404,"column_start":1,"column_end":80}},{"value":"/ T` and `&T`, but `RawArrayView` has additional requirements that `*const T`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50804,"byte_end":50883,"line_start":1405,"line_end":1405,"column_start":1,"column_end":80}},{"value":"/ does not, such as non-nullness.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50884,"byte_end":50919,"line_start":1406,"line_end":1406,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50920,"byte_end":50923,"line_start":1407,"line_end":1407,"column_start":1,"column_end":4}},{"value":"/ [`ArrayView`]: type.ArrayView.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50924,"byte_end":50962,"line_start":1408,"line_end":1408,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50963,"byte_end":50966,"line_start":1409,"line_end":1409,"column_start":1,"column_end":4}},{"value":"/ The `RawArrayView<A, D>` is parameterized by `A` for the element type and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":50967,"byte_end":51044,"line_start":1410,"line_end":1410,"column_start":1,"column_end":78}},{"value":"/ `D` for the dimensionality.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51045,"byte_end":51076,"line_start":1411,"line_end":1411,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51077,"byte_end":51080,"line_start":1412,"line_end":1412,"column_start":1,"column_end":4}},{"value":"/ Raw array views have all the methods of an array (see","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51081,"byte_end":51138,"line_start":1413,"line_end":1413,"column_start":1,"column_end":58}},{"value":"/ [`ArrayBase`](struct.ArrayBase.html)).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51139,"byte_end":51181,"line_start":1414,"line_end":1414,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51182,"byte_end":51185,"line_start":1415,"line_end":1415,"column_start":1,"column_end":4}},{"value":"/ See also [`RawArrayViewMut`](type.RawArrayViewMut.html).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51186,"byte_end":51246,"line_start":1416,"line_end":1416,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51247,"byte_end":51250,"line_start":1417,"line_end":1417,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51251,"byte_end":51264,"line_start":1418,"line_end":1418,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51265,"byte_end":51268,"line_start":1419,"line_end":1419,"column_start":1,"column_end":4}},{"value":"/ You can't use this type with an arbitrary raw pointer; see","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51269,"byte_end":51331,"line_start":1420,"line_end":1420,"column_start":1,"column_end":63}},{"value":"/ [`from_shape_ptr`](#method.from_shape_ptr) for details.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51332,"byte_end":51391,"line_start":1421,"line_end":1421,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":4083},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52435,"byte_end":52450,"line_start":1447,"line_end":1447,"column_start":10,"column_end":25},"name":"RawArrayViewMut","qualname":"::RawArrayViewMut","value":"ArrayBase<RawViewRepr<*mut A>, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable array view without a lifetime.","sig":null,"attributes":[{"value":"/ A mutable array view without a lifetime.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51460,"byte_end":51504,"line_start":1424,"line_end":1424,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51505,"byte_end":51508,"line_start":1425,"line_end":1425,"column_start":1,"column_end":4}},{"value":"/ This is similar to [`ArrayViewMut`] but does not carry any lifetime or","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51509,"byte_end":51583,"line_start":1426,"line_end":1426,"column_start":1,"column_end":75}},{"value":"/ ownership information, and its data cannot be read/written without an","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51584,"byte_end":51657,"line_start":1427,"line_end":1427,"column_start":1,"column_end":74}},{"value":"/ unsafe conversion into an [`ArrayViewMut`]. The relationship between","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51658,"byte_end":51730,"line_start":1428,"line_end":1428,"column_start":1,"column_end":73}},{"value":"/ `RawArrayViewMut` and [`ArrayViewMut`] is somewhat analogous to the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51731,"byte_end":51802,"line_start":1429,"line_end":1429,"column_start":1,"column_end":72}},{"value":"/ relationship between `*mut T` and `&mut T`, but `RawArrayViewMut` has","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51803,"byte_end":51876,"line_start":1430,"line_end":1430,"column_start":1,"column_end":74}},{"value":"/ additional requirements that `*mut T` does not, such as non-nullness.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51877,"byte_end":51950,"line_start":1431,"line_end":1431,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51951,"byte_end":51954,"line_start":1432,"line_end":1432,"column_start":1,"column_end":4}},{"value":"/ [`ArrayViewMut`]: type.ArrayViewMut.html","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":51955,"byte_end":51999,"line_start":1433,"line_end":1433,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52000,"byte_end":52003,"line_start":1434,"line_end":1434,"column_start":1,"column_end":4}},{"value":"/ The `RawArrayViewMut<A, D>` is parameterized by `A` for the element type","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52004,"byte_end":52080,"line_start":1435,"line_end":1435,"column_start":1,"column_end":77}},{"value":"/ and `D` for the dimensionality.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52081,"byte_end":52116,"line_start":1436,"line_end":1436,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52117,"byte_end":52120,"line_start":1437,"line_end":1437,"column_start":1,"column_end":4}},{"value":"/ Raw array views have all the methods of an array (see","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52121,"byte_end":52178,"line_start":1438,"line_end":1438,"column_start":1,"column_end":58}},{"value":"/ [`ArrayBase`](struct.ArrayBase.html)).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52179,"byte_end":52221,"line_start":1439,"line_end":1439,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52222,"byte_end":52225,"line_start":1440,"line_end":1440,"column_start":1,"column_end":4}},{"value":"/ See also [`RawArrayView`](type.RawArrayView.html).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52226,"byte_end":52280,"line_start":1441,"line_end":1441,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52281,"byte_end":52284,"line_start":1442,"line_end":1442,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52285,"byte_end":52298,"line_start":1443,"line_end":1443,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52299,"byte_end":52302,"line_start":1444,"line_end":1444,"column_start":1,"column_end":4}},{"value":"/ You can't use this type with an arbitrary raw pointer; see","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52303,"byte_end":52365,"line_start":1445,"line_end":1445,"column_start":1,"column_end":63}},{"value":"/ [`from_shape_ptr`](#method.from_shape_ptr) for details.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52366,"byte_end":52425,"line_start":1446,"line_end":1446,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7754},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52704,"byte_end":52716,"line_start":1456,"line_end":1456,"column_start":12,"column_end":24},"name":"OwnedArcRepr","qualname":"::OwnedArcRepr","value":"","parent":null,"children":[],"decl_id":null,"docs":" ArcArray's representation.","sig":null,"attributes":[{"value":"/ ArcArray's representation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52526,"byte_end":52556,"line_start":1451,"line_end":1451,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52557,"byte_end":52560,"line_start":1452,"line_end":1452,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type alias","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52561,"byte_end":52617,"line_start":1453,"line_end":1453,"column_start":1,"column_end":53}},{"value":"/ [`ArcArray`](type.ArcArray.html) for the array type!*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52618,"byte_end":52675,"line_start":1454,"line_end":1454,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7761},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53180,"byte_end":53191,"line_start":1471,"line_end":1471,"column_start":12,"column_end":23},"name":"RawViewRepr","qualname":"::RawViewRepr","value":"RawViewRepr {  }","parent":null,"children":[{"krate":0,"index":7763}],"decl_id":null,"docs":" Array pointer’s representation.","sig":null,"attributes":[{"value":"/ Array pointer’s representation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52853,"byte_end":52890,"line_start":1464,"line_end":1464,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52891,"byte_end":52894,"line_start":1465,"line_end":1465,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type aliases","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52895,"byte_end":52953,"line_start":1466,"line_end":1466,"column_start":1,"column_end":55}},{"value":"/ [`RawArrayView`](type.RawArrayView.html) /","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52954,"byte_end":53000,"line_start":1467,"line_end":1467,"column_start":1,"column_end":47}},{"value":"/ [`RawArrayViewMut`](type.RawArrayViewMut.html) for the array type!*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53001,"byte_end":53072,"line_start":1468,"line_end":1468,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":7769},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53648,"byte_end":53656,"line_start":1489,"line_end":1489,"column_start":12,"column_end":20},"name":"ViewRepr","qualname":"::ViewRepr","value":"ViewRepr {  }","parent":null,"children":[{"krate":0,"index":7771}],"decl_id":null,"docs":" Array view’s representation.","sig":null,"attributes":[{"value":"/ Array view’s representation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53345,"byte_end":53379,"line_start":1482,"line_end":1482,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53380,"byte_end":53383,"line_start":1483,"line_end":1483,"column_start":1,"column_end":4}},{"value":"/ *Don’t use this type directly—use the type aliases","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53384,"byte_end":53442,"line_start":1484,"line_end":1484,"column_start":1,"column_end":55}},{"value":"/ [`ArrayView`](type.ArrayView.html)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53443,"byte_end":53481,"line_start":1485,"line_end":1485,"column_start":1,"column_end":39}},{"value":"/ / [`ArrayViewMut`](type.ArrayViewMut.html) for the array type!*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53482,"byte_end":53549,"line_start":1486,"line_end":1486,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4101},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54007,"byte_end":54011,"line_start":1506,"line_end":1506,"column_start":5,"column_end":9},"name":"View","qualname":"::CowRepr::View","value":"CowRepr::View(ViewRepr<&'a A>)","parent":{"krate":0,"index":4098},"children":[],"decl_id":null,"docs":" Borrowed data.\n","sig":null,"attributes":[{"value":"/ Borrowed data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53984,"byte_end":54002,"line_start":1505,"line_end":1505,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4104},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54054,"byte_end":54059,"line_start":1508,"line_end":1508,"column_start":5,"column_end":10},"name":"Owned","qualname":"::CowRepr::Owned","value":"CowRepr::Owned(OwnedRepr<A>)","parent":{"krate":0,"index":4098},"children":[],"decl_id":null,"docs":" Owned data.\n","sig":null,"attributes":[{"value":"/ Owned data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54034,"byte_end":54049,"line_start":1507,"line_end":1507,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":4098},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53963,"byte_end":53970,"line_start":1504,"line_end":1504,"column_start":10,"column_end":17},"name":"CowRepr","qualname":"::CowRepr","value":"pub enum CowRepr<'a, A> { View(ViewRepr<&'a A>), Owned(OwnedRepr<A>), }","parent":null,"children":[{"krate":0,"index":4101},{"krate":0,"index":4104}],"decl_id":null,"docs":" CowArray's representation.","sig":null,"attributes":[{"value":"/ CowArray's representation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53806,"byte_end":53836,"line_start":1500,"line_end":1500,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53837,"byte_end":53840,"line_start":1501,"line_end":1501,"column_start":1,"column_end":4}},{"value":"/ *Don't use this type directly—use the type alias","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53841,"byte_end":53895,"line_start":1502,"line_end":1502,"column_start":1,"column_end":53}},{"value":"/ [`CowArray`](type.CowArray.html) for the array type!*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53896,"byte_end":53953,"line_start":1503,"line_end":1503,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54177,"byte_end":54184,"line_start":1513,"line_end":1513,"column_start":12,"column_end":19},"name":"is_view","qualname":"<CowRepr>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the data is the `View` variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the data is the `View` variant.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54111,"byte_end":54165,"line_start":1512,"line_end":1512,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4111},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54389,"byte_end":54397,"line_start":1521,"line_end":1521,"column_start":12,"column_end":20},"name":"is_owned","qualname":"<CowRepr>::is_owned","value":"pub fn is_owned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the data is the `Owned` variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the data is the `Owned` variant.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54322,"byte_end":54377,"line_start":1520,"line_end":1520,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4214},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462878,"byte_end":462886,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ArrayBase<S, Ix1>>::from_vec","value":"pub fn from_vec(Vec<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array from a vector (no copying needed).","sig":null,"attributes":[{"value":"/ Create a one-dimensional array from a vector (no copying needed).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462595,"byte_end":462664,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462669,"byte_end":462672,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462677,"byte_end":462735,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462740,"byte_end":462743,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462748,"byte_end":462759,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462764,"byte_end":462787,"line_start":54,"line_end":54,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462792,"byte_end":462795,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let array = Array::from_vec(vec![1., 2., 3., 4.]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462800,"byte_end":462854,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462859,"byte_end":462866,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4215},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463475,"byte_end":463484,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"from_iter","qualname":"<ArrayBase<S, Ix1>>::from_iter","value":"pub fn from_iter<I: IntoIterator<Item = A>>(I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array from an iterator or iterable.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array from an iterator or iterable.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463166,"byte_end":463230,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463235,"byte_end":463238,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463243,"byte_end":463301,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463306,"byte_end":463309,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463314,"byte_end":463325,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463330,"byte_end":463353,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463358,"byte_end":463361,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let array = Array::from_iter(0..10);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463366,"byte_end":463406,"line_start":75,"line_end":75,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463411,"byte_end":463418,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463423,"byte_end":463463,"line_start":77,"line_end":77,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4217},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464376,"byte_end":464384,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"linspace","qualname":"<ArrayBase<S, Ix1>>::linspace","value":"pub fn linspace(A, A, usize) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` evenly spaced elements from\n `start` to `end` (inclusive). `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` evenly spaced elements from","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463601,"byte_end":463672,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ `start` to `end` (inclusive). `A` must be a floating point type.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463677,"byte_end":463745,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463750,"byte_end":463753,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that if `start > end`, the first element will still be `start`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463758,"byte_end":463830,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ and the following elements will be decreasing. This is different from","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463835,"byte_end":463908,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ the behavior of `std::ops::RangeInclusive`, which interprets `start >","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463913,"byte_end":463986,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ end` to mean that the range is empty.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":463991,"byte_end":464032,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464037,"byte_end":464040,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464045,"byte_end":464120,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464125,"byte_end":464147,"line_start":91,"line_end":91,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464152,"byte_end":464155,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464160,"byte_end":464171,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464176,"byte_end":464207,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464212,"byte_end":464215,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let array = Array::linspace(0., 1., 5);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464220,"byte_end":464263,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/ assert!(array == arr1(&[0.0, 0.25, 0.5, 0.75, 1.0]))","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464268,"byte_end":464324,"line_start":97,"line_end":97,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464329,"byte_end":464336,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464341,"byte_end":464364,"line_start":99,"line_end":99,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4218},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464969,"byte_end":464974,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"range","qualname":"<ArrayBase<S, Ix1>>::range","value":"pub fn range(A, A, A) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with elements from `start` to `end`\n (exclusive), incrementing by `step`. `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with elements from `start` to `end`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464528,"byte_end":464598,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ (exclusive), incrementing by `step`. `A` must be a floating point type.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464603,"byte_end":464678,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464683,"byte_end":464686,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the length is greater than `isize::MAX`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464691,"byte_end":464749,"line_start":110,"line_end":110,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464754,"byte_end":464757,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464762,"byte_end":464773,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464778,"byte_end":464809,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464814,"byte_end":464817,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let array = Array::range(0., 5., 1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464822,"byte_end":464863,"line_start":115,"line_end":115,"column_start":5,"column_end":46}},{"value":"/ assert!(array == arr1(&[0., 1., 2., 3., 4.]))","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464868,"byte_end":464917,"line_start":116,"line_end":116,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464922,"byte_end":464929,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":464934,"byte_end":464957,"line_start":118,"line_end":118,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4219},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465984,"byte_end":465992,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"name":"logspace","qualname":"<ArrayBase<S, Ix1>>::logspace","value":"pub fn logspace(A, A, A, usize) -> Self where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` logarithmically spaced\n elements, with the starting value being `base.powf(start)` and the\n final one being `base.powf(end)`. `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` logarithmically spaced","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465117,"byte_end":465183,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/ elements, with the starting value being `base.powf(start)` and the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465188,"byte_end":465258,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ final one being `base.powf(end)`. `A` must be a floating point type.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465263,"byte_end":465335,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465340,"byte_end":465343,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If `base` is negative, all values will be negative.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465348,"byte_end":465403,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465408,"byte_end":465411,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465416,"byte_end":465491,"line_start":132,"line_end":132,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465496,"byte_end":465518,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465523,"byte_end":465526,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465531,"byte_end":465542,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465547,"byte_end":465581,"line_start":136,"line_end":136,"column_start":5,"column_end":39}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465586,"byte_end":465621,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465626,"byte_end":465657,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465662,"byte_end":465665,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let array = Array::logspace(10.0, 0.0, 3.0, 4);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465670,"byte_end":465721,"line_start":140,"line_end":140,"column_start":5,"column_end":56}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[1e0, 1e1, 1e2, 1e3]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465726,"byte_end":465786,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465791,"byte_end":465794,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let array = Array::logspace(-10.0, 3.0, 0.0, 4);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465799,"byte_end":465851,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[-1e3, -1e2, -1e1, -1e0]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465856,"byte_end":465920,"line_start":144,"line_end":144,"column_start":5,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465925,"byte_end":465932,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465937,"byte_end":465944,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":465949,"byte_end":465972,"line_start":147,"line_end":147,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4220},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467233,"byte_end":467242,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"geomspace","qualname":"<ArrayBase<S, Ix1>>::geomspace","value":"pub fn geomspace(A, A, usize) -> Option<Self> where A: Float","parent":null,"children":[],"decl_id":null,"docs":" Create a one-dimensional array with `n` geometrically spaced elements\n from `start` to `end` (inclusive). `A` must be a floating point type.","sig":null,"attributes":[{"value":"/ Create a one-dimensional array with `n` geometrically spaced elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466151,"byte_end":466224,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ from `start` to `end` (inclusive). `A` must be a floating point type.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466229,"byte_end":466302,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466307,"byte_end":466310,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `start` and `end` have different signs or if either","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466315,"byte_end":466388,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ one is zero. Conceptually, this means that in order to obtain a `Some`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466393,"byte_end":466467,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ result, `end / start` must be positive.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466472,"byte_end":466515,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466520,"byte_end":466523,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n` is greater than `isize::MAX` or if converting `n - 1`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466528,"byte_end":466603,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ to type `A` fails.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466608,"byte_end":466630,"line_start":163,"line_end":163,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466635,"byte_end":466638,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466643,"byte_end":466654,"line_start":165,"line_end":165,"column_start":5,"column_end":16}},{"value":"/ # fn example() -> Option<()> {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466659,"byte_end":466693,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466698,"byte_end":466732,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466737,"byte_end":466772,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ use ndarray::{Array, arr1};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466777,"byte_end":466808,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466813,"byte_end":466816,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let array = Array::geomspace(1e0, 1e3, 4)?;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466821,"byte_end":466868,"line_start":171,"line_end":171,"column_start":5,"column_end":52}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[1e0, 1e1, 1e2, 1e3]), epsilon = 1e-12);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466873,"byte_end":466950,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466955,"byte_end":466958,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let array = Array::geomspace(-1e3, -1e0, 4)?;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":466963,"byte_end":467012,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/ assert_abs_diff_eq!(array, arr1(&[-1e3, -1e2, -1e1, -1e0]), epsilon = 1e-12);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467017,"byte_end":467098,"line_start":175,"line_end":175,"column_start":5,"column_end":86}},{"value":"/ # }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467103,"byte_end":467110,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # Some(())","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467115,"byte_end":467129,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467134,"byte_end":467141,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467146,"byte_end":467151,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ # example().unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467156,"byte_end":467181,"line_start":180,"line_end":180,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467186,"byte_end":467193,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467198,"byte_end":467221,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4224},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467659,"byte_end":467662,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"eye","qualname":"<ArrayBase<S, Ix2>>::eye","value":"pub fn eye(Ix) -> Self where S: DataMut, A: Clone + Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Create an identity matrix of size `n` (square 2D array).","sig":null,"attributes":[{"value":"/ Create an identity matrix of size `n` (square 2D array).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467525,"byte_end":467585,"line_start":196,"line_end":196,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467590,"byte_end":467593,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `n * n` would overflow `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467598,"byte_end":467647,"line_start":198,"line_end":198,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4225},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":468239,"byte_end":468248,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"from_diag","qualname":"<ArrayBase<S, Ix2>>::from_diag","value":"pub fn from_diag<S2>(&ArrayBase<S2, Ix1>) -> Self where A: Clone + Zero,\nS: DataMut, S2: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Create a 2D matrix from its diagonal","sig":null,"attributes":[{"value":"/ Create a 2D matrix from its diagonal","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467888,"byte_end":467928,"line_start":211,"line_end":211,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467933,"byte_end":467936,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `diag.len() * diag.len()` would overflow `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467941,"byte_end":468008,"line_start":213,"line_end":213,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":468013,"byte_end":468016,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":468021,"byte_end":468032,"line_start":215,"line_end":215,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array2, arr1, arr2};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":468037,"byte_end":468075,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":468080,"byte_end":468083,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let diag = arr1(&[1, 2]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":468088,"byte_end":468117,"line_start":218,"line_end":218,"column_start":5,"column_end":34}},{"value":"/ let array = Array2::from_diag(&diag);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":468122,"byte_end":468163,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(array, arr2(&[[1, 0], [0, 2]]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":468168,"byte_end":468215,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":468220,"byte_end":468227,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4232},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470829,"byte_end":470838,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<ArrayBase<S, D>>::from_elem","value":"pub fn from_elem<Sh>(Sh, A) -> Self where A: Clone, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with copies of `elem`, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with copies of `elem`, shape `shape`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470207,"byte_end":470264,"line_start":283,"line_end":283,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470269,"byte_end":470272,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470277,"byte_end":470350,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470355,"byte_end":470358,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470363,"byte_end":470370,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array, arr3, ShapeBuilder};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470375,"byte_end":470420,"line_start":288,"line_end":288,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470425,"byte_end":470428,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_elem((2, 2, 2), 1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470433,"byte_end":470477,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470482,"byte_end":470485,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470490,"byte_end":470502,"line_start":292,"line_end":292,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[1., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470507,"byte_end":470537,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/                  [1., 1.]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470542,"byte_end":470573,"line_start":294,"line_end":294,"column_start":5,"column_end":36}},{"value":"/                 [[1., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470578,"byte_end":470608,"line_start":295,"line_end":295,"column_start":5,"column_end":35}},{"value":"/                  [1., 1.]]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470613,"byte_end":470645,"line_start":296,"line_end":296,"column_start":5,"column_end":37}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470650,"byte_end":470656,"line_start":297,"line_end":297,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[4, 2, 1]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470661,"byte_end":470700,"line_start":298,"line_end":298,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470705,"byte_end":470708,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let b = Array::from_elem((2, 2, 2).f(), 1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470713,"byte_end":470761,"line_start":300,"line_end":300,"column_start":5,"column_end":53}},{"value":"/ assert!(b.strides() == &[1, 2, 4]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470766,"byte_end":470805,"line_start":301,"line_end":301,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470810,"byte_end":470817,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4234},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471291,"byte_end":471296,"line_start":317,"line_end":317,"column_start":12,"column_end":17},"name":"zeros","qualname":"<ArrayBase<S, D>>::zeros","value":"pub fn zeros<Sh>(Sh) -> Self where A: Clone + Zero, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with zeros, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with zeros, shape `shape`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471147,"byte_end":471193,"line_start":314,"line_end":314,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471198,"byte_end":471201,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471206,"byte_end":471279,"line_start":316,"line_end":316,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4236},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471592,"byte_end":471596,"line_start":328,"line_end":328,"column_start":12,"column_end":16},"name":"ones","qualname":"<ArrayBase<S, D>>::ones","value":"pub fn ones<Sh>(Sh) -> Self where A: Clone + One, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with ones, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with ones, shape `shape`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471449,"byte_end":471494,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471499,"byte_end":471502,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471507,"byte_end":471580,"line_start":327,"line_end":327,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4238},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471899,"byte_end":471906,"line_start":339,"line_end":339,"column_start":12,"column_end":19},"name":"default","qualname":"<ArrayBase<S, D>>::default","value":"pub fn default<Sh>(Sh) -> Self where A: Default, Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with default values, shape `shape`","sig":null,"attributes":[{"value":"/ Create an array with default values, shape `shape`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471747,"byte_end":471801,"line_start":336,"line_end":336,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471806,"byte_end":471809,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":471814,"byte_end":471887,"line_start":338,"line_end":338,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4240},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472585,"byte_end":472605,"line_start":357,"line_end":357,"column_start":12,"column_end":32},"name":"from_shape_simple_fn","qualname":"<ArrayBase<S, D>>::from_shape_simple_fn","value":"pub fn from_shape_simple_fn<Sh, F>(Sh, F) -> Self where Sh: ShapeBuilder<Dim =\nD>, F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Create an array with values created by the function `f`.","sig":null,"attributes":[{"value":"/ Create an array with values created by the function `f`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472066,"byte_end":472126,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472131,"byte_end":472134,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ `f` is called with no argument, and it should return the element to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472139,"byte_end":472210,"line_start":349,"line_end":349,"column_start":5,"column_end":76}},{"value":"/ create. If the precise index of the element to create is needed,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472215,"byte_end":472283,"line_start":350,"line_end":350,"column_start":5,"column_end":73}},{"value":"/ use [`from_shape_fn`](ArrayBase::from_shape_fn) instead.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472288,"byte_end":472348,"line_start":351,"line_end":351,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472353,"byte_end":472356,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This constructor can be useful if the element order is not important,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472361,"byte_end":472434,"line_start":353,"line_end":353,"column_start":5,"column_end":78}},{"value":"/ for example if they are identical or random.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472439,"byte_end":472487,"line_start":354,"line_end":354,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472492,"byte_end":472495,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472500,"byte_end":472573,"line_start":356,"line_end":356,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473598,"byte_end":473611,"line_start":388,"line_end":388,"column_start":12,"column_end":25},"name":"from_shape_fn","qualname":"<ArrayBase<S, D>>::from_shape_fn","value":"pub fn from_shape_fn<Sh, F>(Sh, F) -> Self where Sh: ShapeBuilder<Dim = D>,\nF: FnMut(D::Pattern) -> A","parent":null,"children":[],"decl_id":null,"docs":" Create an array with values created by the function `f`.","sig":null,"attributes":[{"value":"/ Create an array with values created by the function `f`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":472943,"byte_end":473003,"line_start":368,"line_end":368,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473008,"byte_end":473011,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ `f` is called with the index of the element to create; the elements are","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473016,"byte_end":473091,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/ visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473096,"byte_end":473127,"line_start":371,"line_end":371,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473132,"byte_end":473135,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the product of non-zero axis lengths overflows `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473140,"byte_end":473213,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473218,"byte_end":473221,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473226,"byte_end":473233,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array, arr2};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473238,"byte_end":473269,"line_start":376,"line_end":376,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473274,"byte_end":473277,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ // Create a table of i × j (with i and j from 1 to 3)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473282,"byte_end":473341,"line_start":378,"line_end":378,"column_start":5,"column_end":62}},{"value":"/ let ij_table = Array::from_shape_fn((3, 3), |(i, j)| (1 + i) * (1 + j));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473346,"byte_end":473422,"line_start":379,"line_end":379,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473427,"byte_end":473430,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473435,"byte_end":473450,"line_start":381,"line_end":381,"column_start":5,"column_end":20}},{"value":"/     ij_table,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473455,"byte_end":473472,"line_start":382,"line_end":382,"column_start":5,"column_end":22}},{"value":"/     arr2(&[[1, 2, 3],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473477,"byte_end":473502,"line_start":383,"line_end":383,"column_start":5,"column_end":30}},{"value":"/            [2, 4, 6],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473507,"byte_end":473532,"line_start":384,"line_end":384,"column_start":5,"column_end":30}},{"value":"/            [3, 6, 9]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473537,"byte_end":473563,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473568,"byte_end":473574,"line_start":386,"line_end":386,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":473579,"byte_end":473586,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4247},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475376,"byte_end":475390,"line_start":438,"line_end":438,"column_start":12,"column_end":26},"name":"from_shape_vec","qualname":"<ArrayBase<S, D>>::from_shape_vec","value":"pub fn from_shape_vec<Sh>(Sh, Vec<A>) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with the given shape from a vector. (No cloning of\n elements needed.)","sig":null,"attributes":[{"value":"/ Create an array with the given shape from a vector. (No cloning of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474208,"byte_end":474278,"line_start":405,"line_end":405,"column_start":5,"column_end":75}},{"value":"/ elements needed.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474283,"byte_end":474304,"line_start":406,"line_end":406,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474309,"byte_end":474312,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ----","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474317,"byte_end":474325,"line_start":408,"line_end":408,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474330,"byte_end":474333,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ For a contiguous c- or f-order shape, the following applies:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474338,"byte_end":474402,"line_start":410,"line_end":410,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474407,"byte_end":474410,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ **Errors** if `shape` does not correspond to the number of elements in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474415,"byte_end":474489,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ `v` or if the shape/strides would result in overflowing `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474494,"byte_end":474562,"line_start":413,"line_end":413,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474567,"byte_end":474570,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ----","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474575,"byte_end":474583,"line_start":415,"line_end":415,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474588,"byte_end":474591,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ For custom strides, the following applies:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474596,"byte_end":474642,"line_start":417,"line_end":417,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474647,"byte_end":474650,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ **Errors** if strides and dimensions can point out of bounds of `v`, if","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474655,"byte_end":474730,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ strides allow multiple indices to point to the same element, or if the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474735,"byte_end":474809,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ shape/strides would result in overflowing `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474814,"byte_end":474868,"line_start":421,"line_end":421,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474873,"byte_end":474876,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474881,"byte_end":474888,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474893,"byte_end":474916,"line_start":424,"line_end":424,"column_start":5,"column_end":28}},{"value":"/ use ndarray::ShapeBuilder; // Needed for .strides() method","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474921,"byte_end":474983,"line_start":425,"line_end":425,"column_start":5,"column_end":67}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":474988,"byte_end":475010,"line_start":426,"line_end":426,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475015,"byte_end":475018,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_shape_vec((2, 2), vec![1., 2., 3., 4.]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475023,"byte_end":475087,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/ assert!(a.is_ok());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475092,"byte_end":475115,"line_start":429,"line_end":429,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475120,"byte_end":475123,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let b = Array::from_shape_vec((2, 2).strides((1, 2)),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475128,"byte_end":475185,"line_start":431,"line_end":431,"column_start":5,"column_end":62}},{"value":"/                               vec![1., 2., 3., 4.]).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475190,"byte_end":475255,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475260,"byte_end":475272,"line_start":433,"line_end":433,"column_start":5,"column_end":17}},{"value":"/     b == arr2(&[[1., 3.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475277,"byte_end":475306,"line_start":434,"line_end":434,"column_start":5,"column_end":34}},{"value":"/                 [2., 4.]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475311,"byte_end":475341,"line_start":435,"line_end":435,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475346,"byte_end":475352,"line_start":436,"line_end":436,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":475357,"byte_end":475364,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":477175,"byte_end":477199,"line_start":481,"line_end":481,"column_start":19,"column_end":43},"name":"from_shape_vec_unchecked","qualname":"<ArrayBase<S, D>>::from_shape_vec_unchecked","value":"pub unsafe fn from_shape_vec_unchecked<Sh>(Sh, Vec<A>) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an array from a vector and interpret it according to the\n provided shape and strides. (No cloning of elements needed.)","sig":null,"attributes":[{"value":"/ Creates an array from a vector and interpret it according to the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476141,"byte_end":476209,"line_start":457,"line_end":457,"column_start":5,"column_end":73}},{"value":"/ provided shape and strides. (No cloning of elements needed.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476214,"byte_end":476278,"line_start":458,"line_end":458,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476283,"byte_end":476286,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476291,"byte_end":476303,"line_start":460,"line_end":460,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476308,"byte_end":476311,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the following conditions are met:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476316,"byte_end":476381,"line_start":462,"line_end":462,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476386,"byte_end":476389,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ 1. The ndim of `dim` and `strides` must be the same.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476394,"byte_end":476450,"line_start":464,"line_end":464,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476455,"byte_end":476458,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ 2. The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476463,"byte_end":476536,"line_start":466,"line_end":466,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476541,"byte_end":476544,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ 3. For axes with length > 1, the pointer cannot move outside the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476549,"byte_end":476617,"line_start":468,"line_end":468,"column_start":5,"column_end":73}},{"value":"/    slice.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476622,"byte_end":476635,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476640,"byte_end":476643,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ 4. If the array will be empty (any axes are zero-length), the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476648,"byte_end":476713,"line_start":471,"line_end":471,"column_start":5,"column_end":70}},{"value":"/    difference between the least address and greatest address accessible","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476718,"byte_end":476793,"line_start":472,"line_end":472,"column_start":5,"column_end":80}},{"value":"/    by moving along all axes must be ≤ `v.len()`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476798,"byte_end":476852,"line_start":473,"line_end":473,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476857,"byte_end":476860,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/    If the array will not be empty, the difference between the least","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476865,"byte_end":476936,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/    address and greatest address accessible by moving along all axes","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":476941,"byte_end":477012,"line_start":476,"line_end":476,"column_start":5,"column_end":76}},{"value":"/    must be < `v.len()`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":477017,"byte_end":477044,"line_start":477,"line_end":477,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":477049,"byte_end":477052,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ 5. The strides must not allow any element to be referenced by two different","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":477057,"byte_end":477136,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/    indices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":477141,"byte_end":477156,"line_start":480,"line_end":480,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4257},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480285,"byte_end":480291,"line_start":565,"line_end":565,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ArrayBase<S, D>>::uninit","value":"pub fn uninit<Sh>(Sh) -> ArrayBase<S::MaybeUninit, D> where\nSh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":478606,"byte_end":478668,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":478673,"byte_end":478676,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ The uninitialized elements of type `A` are represented by the type `MaybeUninit<A>`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":478681,"byte_end":478769,"line_start":522,"line_end":522,"column_start":5,"column_end":93}},{"value":"/ an easier way to handle uninit values correctly.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":478774,"byte_end":478826,"line_start":523,"line_end":523,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":478831,"byte_end":478834,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Only *when* the array is completely initialized with valid elements, can it be","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":478839,"byte_end":478921,"line_start":525,"line_end":525,"column_start":5,"column_end":87}},{"value":"/ converted to an array of `A` elements using [`.assume_init()`].","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":478926,"byte_end":478993,"line_start":526,"line_end":526,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":478998,"byte_end":479001,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479006,"byte_end":479079,"line_start":528,"line_end":528,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479084,"byte_end":479087,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479092,"byte_end":479106,"line_start":530,"line_end":530,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479111,"byte_end":479114,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ The whole of the array must be initialized before it is converted","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479119,"byte_end":479188,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/ using [`.assume_init()`] or otherwise traversed/read with the element type `A`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479193,"byte_end":479276,"line_start":533,"line_end":533,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479281,"byte_end":479284,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479289,"byte_end":479305,"line_start":535,"line_end":535,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479310,"byte_end":479313,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ It is possible to assign individual values through `*elt = MaybeUninit::new(value)`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479318,"byte_end":479405,"line_start":537,"line_end":537,"column_start":5,"column_end":92}},{"value":"/ and so on.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479410,"byte_end":479424,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479429,"byte_end":479432,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ [`.assume_init()`]: ArrayBase::assume_init","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479437,"byte_end":479483,"line_start":540,"line_end":540,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479488,"byte_end":479491,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479496,"byte_end":479503,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{s, Array2};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479508,"byte_end":479537,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479542,"byte_end":479545,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ // Example Task: Let's create a column shifted copy of the input","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479550,"byte_end":479618,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479623,"byte_end":479626,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ fn shift_by_two(a: &Array2<f32>) -> Array2<f32> {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479631,"byte_end":479684,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/     // create an uninitialized array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479689,"byte_end":479729,"line_start":548,"line_end":548,"column_start":5,"column_end":45}},{"value":"/     let mut b = Array2::uninit(a.dim());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479734,"byte_end":479778,"line_start":549,"line_end":549,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479783,"byte_end":479786,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/     // two first columns in b are two last in a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479791,"byte_end":479842,"line_start":551,"line_end":551,"column_start":5,"column_end":56}},{"value":"/     // rest of columns in b are the initial columns in a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479847,"byte_end":479907,"line_start":552,"line_end":552,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479912,"byte_end":479915,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/     a.slice(s![.., -2..]).assign_to(b.slice_mut(s![.., ..2]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479920,"byte_end":479986,"line_start":554,"line_end":554,"column_start":5,"column_end":71}},{"value":"/     a.slice(s![.., 2..]).assign_to(b.slice_mut(s![.., ..-2]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":479991,"byte_end":480057,"line_start":555,"line_end":555,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480062,"byte_end":480065,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/     // Now we can promise that `b` is safe to use with all operations","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480070,"byte_end":480143,"line_start":557,"line_end":557,"column_start":5,"column_end":78}},{"value":"/     unsafe {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480148,"byte_end":480164,"line_start":558,"line_end":558,"column_start":5,"column_end":21}},{"value":"/         b.assume_init()","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480169,"byte_end":480196,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480201,"byte_end":480210,"line_start":560,"line_end":560,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480215,"byte_end":480220,"line_start":561,"line_end":561,"column_start":5,"column_end":10}},{"value":"/ ","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480225,"byte_end":480229,"line_start":562,"line_end":562,"column_start":5,"column_end":9}},{"value":"/ # let _ = shift_by_two;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480234,"byte_end":480261,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480266,"byte_end":480273,"line_start":564,"line_end":564,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4259},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481748,"byte_end":481760,"line_start":599,"line_end":599,"column_start":12,"column_end":24},"name":"build_uninit","qualname":"<ArrayBase<S, D>>::build_uninit","value":"pub fn build_uninit<Sh, F>(Sh, F) -> ArrayBase<S::MaybeUninit, D> where\nSh: ShapeBuilder<Dim = D>, F: FnOnce(ArrayViewMut<, MaybeUninit<A>, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480675,"byte_end":480737,"line_start":578,"line_end":578,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480742,"byte_end":480745,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ The uninitialized elements of type `A` are represented by the type `MaybeUninit<A>`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480750,"byte_end":480838,"line_start":580,"line_end":580,"column_start":5,"column_end":93}},{"value":"/ an easier way to handle uninit values correctly.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480843,"byte_end":480895,"line_start":581,"line_end":581,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480900,"byte_end":480903,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ The `builder` closure gets unshared access to the array through a view and can use it to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":480908,"byte_end":481000,"line_start":583,"line_end":583,"column_start":5,"column_end":97}},{"value":"/ modify the array before it is returned. This allows initializing the array for any owned","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481005,"byte_end":481097,"line_start":584,"line_end":584,"column_start":5,"column_end":97}},{"value":"/ array type (avoiding clone requirements for copy-on-write, because the array is unshared","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481102,"byte_end":481194,"line_start":585,"line_end":585,"column_start":5,"column_end":97}},{"value":"/ when initially created).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481199,"byte_end":481227,"line_start":586,"line_end":586,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481232,"byte_end":481235,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ Only *when* the array is completely initialized with valid elements, can it be","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481240,"byte_end":481322,"line_start":588,"line_end":588,"column_start":5,"column_end":87}},{"value":"/ converted to an array of `A` elements using [`.assume_init()`].","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481327,"byte_end":481394,"line_start":589,"line_end":589,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481399,"byte_end":481402,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481407,"byte_end":481480,"line_start":591,"line_end":591,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481485,"byte_end":481488,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481493,"byte_end":481507,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481512,"byte_end":481515,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ The whole of the array must be initialized before it is converted","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481520,"byte_end":481589,"line_start":595,"line_end":595,"column_start":5,"column_end":74}},{"value":"/ using [`.assume_init()`] or otherwise traversed/read with the element type `A`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481594,"byte_end":481677,"line_start":596,"line_end":596,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481682,"byte_end":481685,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ [`.assume_init()`]: ArrayBase::assume_init","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":481690,"byte_end":481736,"line_start":598,"line_end":598,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4262},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483445,"byte_end":483458,"line_start":637,"line_end":637,"column_start":19,"column_end":32},"name":"uninitialized","qualname":"<ArrayBase<S, D>>::uninitialized","value":"pub unsafe fn uninitialized<Sh>(Sh) -> Self where A: Copy,\nSh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"deprecated(note =\n             \"This method is hard to use correctly. Use `uninit` instead.\",\n             since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482150,"byte_end":482268,"line_start":612,"line_end":613,"column_start":5,"column_end":36}},{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482273,"byte_end":482335,"line_start":614,"line_end":614,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482340,"byte_end":482343,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ Prefer to use [`uninit()`](ArrayBase::uninit) if possible, because it is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482348,"byte_end":482424,"line_start":616,"line_end":616,"column_start":5,"column_end":81}},{"value":"/ easier to use correctly.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482429,"byte_end":482457,"line_start":617,"line_end":617,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482462,"byte_end":482465,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the number of elements in `shape` would overflow isize.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482470,"byte_end":482543,"line_start":619,"line_end":619,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482548,"byte_end":482551,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ ### Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482556,"byte_end":482570,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482575,"byte_end":482578,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Accessing uninitalized values is undefined behaviour. You must overwrite *all* the elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482583,"byte_end":482678,"line_start":623,"line_end":623,"column_start":5,"column_end":100}},{"value":"/ in the array after it is created; for example using","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482683,"byte_end":482738,"line_start":624,"line_end":624,"column_start":5,"column_end":60}},{"value":"/ [`raw_view_mut`](ArrayBase::raw_view_mut) or other low-level element access.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482743,"byte_end":482823,"line_start":625,"line_end":625,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482828,"byte_end":482831,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ The contents of the array is indeterminate before initialization and it","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482836,"byte_end":482911,"line_start":627,"line_end":627,"column_start":5,"column_end":80}},{"value":"/ is an error to perform operations that use the previous values. For","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482916,"byte_end":482987,"line_start":628,"line_end":628,"column_start":5,"column_end":76}},{"value":"/ example it would not be legal to use `a += 1.;` on such an array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":482992,"byte_end":483061,"line_start":629,"line_end":629,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483066,"byte_end":483069,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This constructor is limited to elements where `A: Copy` (no destructors)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483074,"byte_end":483150,"line_start":631,"line_end":631,"column_start":5,"column_end":81}},{"value":"/ to avoid users shooting themselves too hard in the foot.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483155,"byte_end":483215,"line_start":632,"line_end":632,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483220,"byte_end":483223,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ (Also note that the constructors `from_shape_vec` and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483228,"byte_end":483285,"line_start":634,"line_end":634,"column_start":5,"column_end":62}},{"value":"/ `from_shape_vec_unchecked` allow the user yet more control, in the sense","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483290,"byte_end":483366,"line_start":635,"line_end":635,"column_start":5,"column_end":81}},{"value":"/ that Arrays can be created from arbitrary vectors.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483371,"byte_end":483426,"line_start":636,"line_end":636,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4268},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":484080,"byte_end":484092,"line_start":660,"line_end":660,"column_start":12,"column_end":24},"name":"maybe_uninit","qualname":"<ArrayBase<S, D>>::maybe_uninit","value":"pub fn maybe_uninit<Sh>(Sh) -> Self where Sh: ShapeBuilder<Dim = D>","parent":null,"children":[],"decl_id":null,"docs":" Create an array with uninitalized elements, shape `shape`.","sig":null,"attributes":[{"value":"/ Create an array with uninitalized elements, shape `shape`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483883,"byte_end":483945,"line_start":656,"line_end":656,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483950,"byte_end":483953,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ This method has been renamed to `uninit`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483958,"byte_end":484002,"line_start":658,"line_end":658,"column_start":5,"column_end":49}},{"value":"deprecated(note = \"Renamed to `uninit`\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":484007,"byte_end":484068,"line_start":659,"line_end":659,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4440},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486104,"byte_end":486107,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"len","qualname":"<ArrayBase<S, D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of elements in the array.\n","sig":null,"attributes":[{"value":"/ Return the total number of elements in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486039,"byte_end":486092,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4441},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486400,"byte_end":486406,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"len_of","qualname":"<ArrayBase<S, D>>::len_of","value":"pub fn len_of(&Self, Axis) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of `axis`.","sig":null,"attributes":[{"value":"/ Return the length of `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486161,"byte_end":486193,"line_start":54,"line_end":54,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486198,"byte_end":486201,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The axis should be in the range `Axis(` 0 .. *n* `)` where *n* is the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486206,"byte_end":486279,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ number of dimensions (axes) of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486284,"byte_end":486329,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486334,"byte_end":486337,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486342,"byte_end":486388,"line_start":59,"line_end":59,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4442},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486536,"byte_end":486544,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArrayBase<S, D>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether the array has any elements\n","sig":null,"attributes":[{"value":"/ Return whether the array has any elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486479,"byte_end":486524,"line_start":64,"line_end":64,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4443},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486664,"byte_end":486668,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"ndim","qualname":"<ArrayBase<S, D>>::ndim","value":"pub fn ndim(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of dimensions (axes) in the array\n","sig":null,"attributes":[{"value":"/ Return the number of dimensions (axes) in the array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486597,"byte_end":486652,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4444},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486894,"byte_end":486897,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"dim","qualname":"<ArrayBase<S, D>>::dim","value":"pub fn dim(&Self) -> D::Pattern","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array in its “pattern” form,\n an integer in the one-dimensional case, tuple in the n-dimensional cases\n and so on.\n","sig":null,"attributes":[{"value":"/ Return the shape of the array in its “pattern” form,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486722,"byte_end":486782,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/ an integer in the one-dimensional case, tuple in the n-dimensional cases","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486787,"byte_end":486863,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ and so on.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486868,"byte_end":486882,"line_start":76,"line_end":76,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4445},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487481,"byte_end":487488,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"raw_dim","qualname":"<ArrayBase<S, D>>::raw_dim","value":"pub fn raw_dim(&Self) -> D","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array as it's stored in the array.","sig":null,"attributes":[{"value":"/ Return the shape of the array as it's stored in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":486972,"byte_end":487034,"line_start":81,"line_end":81,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487039,"byte_end":487042,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is primarily useful for passing to other `ArrayBase`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487047,"byte_end":487108,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ functions, such as when creating another array of the same","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487113,"byte_end":487175,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/ shape and dimensionality.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487180,"byte_end":487209,"line_start":85,"line_end":85,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487214,"byte_end":487217,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487222,"byte_end":487229,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487234,"byte_end":487257,"line_start":88,"line_end":88,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487262,"byte_end":487265,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_elem((2, 3), 5.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487270,"byte_end":487311,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487316,"byte_end":487319,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // Create an array of zeros that's the same shape and dimensionality as `a`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487324,"byte_end":487404,"line_start":92,"line_end":92,"column_start":5,"column_end":85}},{"value":"/ let b = Array::<f64, _>::zeros(a.raw_dim());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487409,"byte_end":487457,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487462,"byte_end":487469,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4446},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488548,"byte_end":488553,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"shape","qualname":"<ArrayBase<S, D>>::shape","value":"pub fn shape(&Self) -> &[usize]","parent":null,"children":[],"decl_id":null,"docs":" Return the shape of the array as a slice.","sig":null,"attributes":[{"value":"/ Return the shape of the array as a slice.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487539,"byte_end":487584,"line_start":99,"line_end":99,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487589,"byte_end":487592,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Note that you probably don't want to use this to create an array of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487597,"byte_end":487672,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/ same shape as another array because creating an array with e.g.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487677,"byte_end":487744,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/ [`Array::zeros()`](ArrayBase::zeros) using a shape of type `&[usize]`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487749,"byte_end":487822,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ results in a dynamic-dimensional array. If you want to create an array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487827,"byte_end":487901,"line_start":104,"line_end":104,"column_start":5,"column_end":79}},{"value":"/ that has the same shape and dimensionality as another array, use","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487906,"byte_end":487974,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ [`.raw_dim()`](ArrayBase::raw_dim) instead:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":487979,"byte_end":488026,"line_start":106,"line_end":106,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488031,"byte_end":488034,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488039,"byte_end":488050,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, Array2};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488055,"byte_end":488088,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488093,"byte_end":488096,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let a = Array2::<i32>::zeros((3, 4));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488101,"byte_end":488142,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/ let shape = a.shape();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488147,"byte_end":488173,"line_start":112,"line_end":112,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(shape, &[3, 4]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488178,"byte_end":488209,"line_start":113,"line_end":113,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488214,"byte_end":488217,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ // Since `a.shape()` returned `&[usize]`, we get an `ArrayD` instance:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488222,"byte_end":488296,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ let b = Array::zeros(shape);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488301,"byte_end":488333,"line_start":116,"line_end":116,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(a.clone().into_dyn(), b);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488338,"byte_end":488378,"line_start":117,"line_end":117,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488383,"byte_end":488386,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ // To get the same dimension type, use `.raw_dim()` instead:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488391,"byte_end":488455,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ let c = Array::zeros(a.raw_dim());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488460,"byte_end":488498,"line_start":120,"line_end":120,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(a, c);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488503,"byte_end":488524,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488529,"byte_end":488536,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4447},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488670,"byte_end":488677,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"strides","qualname":"<ArrayBase<S, D>>::strides","value":"pub fn strides(&Self) -> &[isize]","parent":null,"children":[],"decl_id":null,"docs":" Return the strides of the array as a slice.\n","sig":null,"attributes":[{"value":"/ Return the strides of the array as a slice.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488611,"byte_end":488658,"line_start":127,"line_end":127,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4448},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489111,"byte_end":489120,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"stride_of","qualname":"<ArrayBase<S, D>>::stride_of","value":"pub fn stride_of(&Self, Axis) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Return the stride of `axis`.","sig":null,"attributes":[{"value":"/ Return the stride of `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488872,"byte_end":488904,"line_start":134,"line_end":134,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488909,"byte_end":488912,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The axis should be in the range `Axis(` 0 .. *n* `)` where *n* is the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488917,"byte_end":488990,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ number of dimensions (axes) of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":488995,"byte_end":489040,"line_start":137,"line_end":137,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489045,"byte_end":489048,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489053,"byte_end":489099,"line_start":139,"line_end":139,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4449},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489304,"byte_end":489308,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"view","qualname":"<ArrayBase<S, D>>::view","value":"pub fn view(&Self) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a read-only view of the array\n","sig":null,"attributes":[{"value":"/ Return a read-only view of the array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489252,"byte_end":489292,"line_start":145,"line_end":145,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4450},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489571,"byte_end":489579,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"view_mut","qualname":"<ArrayBase<S, D>>::view_mut","value":"pub fn view_mut(&mut Self) -> ArrayViewMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a read-write view of the array\n","sig":null,"attributes":[{"value":"/ Return a read-write view of the array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489518,"byte_end":489559,"line_start":154,"line_end":154,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4451},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490211,"byte_end":490220,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"cell_view","qualname":"<ArrayBase<S, D>>::cell_view","value":"pub fn cell_view(&mut Self) -> ArrayView<, MathCell<A>, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a shared view of the array with elements as if they were embedded in cells.","sig":null,"attributes":[{"value":"/ Return a shared view of the array with elements as if they were embedded in cells.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489781,"byte_end":489867,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489872,"byte_end":489875,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The cell view requires a mutable borrow of the array. Once borrowed the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489880,"byte_end":489955,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ cell view itself can be copied and accessed without exclusivity.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":489960,"byte_end":490028,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490033,"byte_end":490036,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The view acts \"as if\" the elements are temporarily in cells, and elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490041,"byte_end":490118,"line_start":168,"line_end":168,"column_start":5,"column_end":82}},{"value":"/ can be changed through shared references using the regular cell methods.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490123,"byte_end":490199,"line_start":169,"line_end":169,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491622,"byte_end":491630,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<ArrayBase<S, D>>::to_owned","value":"pub fn to_owned(&Self) -> Array<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an uniquely owned copy of the array.","sig":null,"attributes":[{"value":"/ Return an uniquely owned copy of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490353,"byte_end":490400,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490405,"byte_end":490408,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If the input array is contiguous, then the output array will have the same","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490413,"byte_end":490491,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ memory layout. Otherwise, the layout of the output array is unspecified.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490496,"byte_end":490572,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ If you need a particular layout, you can allocate a new array with the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490577,"byte_end":490651,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ desired memory layout and [`.assign()`](#method.assign) the data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490656,"byte_end":490725,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ Alternatively, you can collectan iterator, like this for a result in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490730,"byte_end":490802,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ standard layout:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490807,"byte_end":490827,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490832,"byte_end":490835,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490840,"byte_end":490847,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490852,"byte_end":490882,"line_start":187,"line_end":187,"column_start":5,"column_end":35}},{"value":"/ # let arr = Array::from_shape_vec((2, 2).f(), vec![1, 2, 3, 4]).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490887,"byte_end":490964,"line_start":188,"line_end":188,"column_start":5,"column_end":82}},{"value":"/ # let owned = {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490969,"byte_end":490988,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/ Array::from_shape_vec(arr.raw_dim(), arr.iter().cloned().collect()).unwrap()","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":490993,"byte_end":491073,"line_start":190,"line_end":190,"column_start":5,"column_end":85}},{"value":"/ # };","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491078,"byte_end":491086,"line_start":191,"line_end":191,"column_start":5,"column_end":13}},{"value":"/ # assert!(owned.is_standard_layout());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491091,"byte_end":491133,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/ # assert_eq!(arr, owned);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491138,"byte_end":491167,"line_start":193,"line_end":193,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491172,"byte_end":491179,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491184,"byte_end":491187,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ or this for a result in column-major (Fortran) layout:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491192,"byte_end":491250,"line_start":196,"line_end":196,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491255,"byte_end":491258,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491263,"byte_end":491270,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491275,"byte_end":491305,"line_start":199,"line_end":199,"column_start":5,"column_end":35}},{"value":"/ # let arr = Array::from_shape_vec((2, 2), vec![1, 2, 3, 4]).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491310,"byte_end":491383,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ # let owned = {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491388,"byte_end":491407,"line_start":201,"line_end":201,"column_start":5,"column_end":24}},{"value":"/ Array::from_shape_vec(arr.raw_dim().f(), arr.t().iter().cloned().collect()).unwrap()","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491412,"byte_end":491500,"line_start":202,"line_end":202,"column_start":5,"column_end":93}},{"value":"/ # };","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491505,"byte_end":491513,"line_start":203,"line_end":203,"column_start":5,"column_end":13}},{"value":"/ # assert!(owned.t().is_standard_layout());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491518,"byte_end":491564,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/ # assert_eq!(arr, owned);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491569,"byte_end":491598,"line_start":205,"line_end":205,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":491603,"byte_end":491610,"line_start":206,"line_end":206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4453},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":492148,"byte_end":492157,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"to_shared","qualname":"<ArrayBase<S, D>>::to_shared","value":"pub fn to_shared(&Self) -> ArcArray<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a shared ownership (copy on write) array, cloning the array\n elements if necessary.\n","sig":null,"attributes":[{"value":"/ Return a shared ownership (copy on write) array, cloning the array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":492035,"byte_end":492105,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ elements if necessary.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":492110,"byte_end":492136,"line_start":225,"line_end":225,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4454},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":492380,"byte_end":492390,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<ArrayBase<S, D>>::into_owned","value":"pub fn into_owned(Self) -> Array<A, D> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Turn the array into a uniquely owned array, cloning the array elements\n if necessary.\n","sig":null,"attributes":[{"value":"/ Turn the array into a uniquely owned array, cloning the array elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":492272,"byte_end":492346,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ if necessary.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":492351,"byte_end":492368,"line_start":235,"line_end":235,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4455},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":492608,"byte_end":492619,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<ArrayBase<S, D>>::into_shared","value":"pub fn into_shared(Self) -> ArcArray<A, D> where S: DataOwned","parent":null,"children":[],"decl_id":null,"docs":" Turn the array into a shared ownership (copy on write) array,\n without any copying.\n","sig":null,"attributes":[{"value":"/ Turn the array into a shared ownership (copy on write) array,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":492502,"byte_end":492567,"line_start":244,"line_end":244,"column_start":5,"column_end":70}},{"value":"/ without any copying.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":492572,"byte_end":492596,"line_start":245,"line_end":245,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4456},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493355,"byte_end":493360,"line_start":272,"line_end":272,"column_start":12,"column_end":17},"name":"first","qualname":"<ArrayBase<S, D>>::first","value":"pub fn first(&Self) -> Option<&A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the first element of the array, or `None` if it\n is empty.","sig":null,"attributes":[{"value":"/ Returns a reference to the first element of the array, or `None` if it","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":492934,"byte_end":493008,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ is empty.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493013,"byte_end":493026,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493031,"byte_end":493034,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493039,"byte_end":493052,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493057,"byte_end":493060,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493065,"byte_end":493076,"line_start":262,"line_end":262,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493081,"byte_end":493105,"line_start":263,"line_end":263,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493110,"byte_end":493113,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros([3, 4, 2]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493118,"byte_end":493166,"line_start":265,"line_end":265,"column_start":5,"column_end":53}},{"value":"/ a[[0, 0, 0]] = 42.;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493171,"byte_end":493194,"line_start":266,"line_end":266,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(a.first(), Some(&42.));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493199,"byte_end":493237,"line_start":267,"line_end":267,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493242,"byte_end":493245,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let b = Array3::<f64>::zeros([3, 0, 5]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493250,"byte_end":493294,"line_start":269,"line_end":269,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(b.first(), None);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493299,"byte_end":493331,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493336,"byte_end":493343,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4457},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493988,"byte_end":493997,"line_start":298,"line_end":298,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<ArrayBase<S, D>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<&mut A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first element of the array, or\n `None` if it is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first element of the array, or","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493544,"byte_end":493613,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/ `None` if it is empty.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493618,"byte_end":493644,"line_start":284,"line_end":284,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493649,"byte_end":493652,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493657,"byte_end":493670,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493675,"byte_end":493678,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493683,"byte_end":493694,"line_start":288,"line_end":288,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493699,"byte_end":493723,"line_start":289,"line_end":289,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493728,"byte_end":493731,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros([3, 4, 2]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493736,"byte_end":493784,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/ *a.first_mut().unwrap() = 42.;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493789,"byte_end":493823,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a[[0, 0, 0]], 42.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493828,"byte_end":493862,"line_start":293,"line_end":293,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493867,"byte_end":493870,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let mut b = Array3::<f64>::zeros([3, 0, 5]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493875,"byte_end":493923,"line_start":295,"line_end":295,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(b.first_mut(), None);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493928,"byte_end":493964,"line_start":296,"line_end":296,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":493969,"byte_end":493976,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494618,"byte_end":494622,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"last","qualname":"<ArrayBase<S, D>>::last","value":"pub fn last(&Self) -> Option<&A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the last element of the array, or `None` if it\n is empty.","sig":null,"attributes":[{"value":"/ Returns a reference to the last element of the array, or `None` if it","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494200,"byte_end":494273,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ is empty.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494278,"byte_end":494291,"line_start":310,"line_end":310,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494296,"byte_end":494299,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494304,"byte_end":494317,"line_start":312,"line_end":312,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494322,"byte_end":494325,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494330,"byte_end":494341,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494346,"byte_end":494370,"line_start":315,"line_end":315,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494375,"byte_end":494378,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros([3, 4, 2]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494383,"byte_end":494431,"line_start":317,"line_end":317,"column_start":5,"column_end":53}},{"value":"/ a[[2, 3, 1]] = 42.;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494436,"byte_end":494459,"line_start":318,"line_end":318,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(a.last(), Some(&42.));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494464,"byte_end":494501,"line_start":319,"line_end":319,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494506,"byte_end":494509,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let b = Array3::<f64>::zeros([3, 0, 5]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494514,"byte_end":494558,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(b.last(), None);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494563,"byte_end":494594,"line_start":322,"line_end":322,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494599,"byte_end":494606,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4459},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495378,"byte_end":495386,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<ArrayBase<S, D>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<&mut A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the last element of the array, or `None`\n if it is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the last element of the array, or `None`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":494937,"byte_end":495012,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ if it is empty.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495017,"byte_end":495036,"line_start":340,"line_end":340,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495041,"byte_end":495044,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495049,"byte_end":495062,"line_start":342,"line_end":342,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495067,"byte_end":495070,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495075,"byte_end":495086,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495091,"byte_end":495115,"line_start":345,"line_end":345,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495120,"byte_end":495123,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros([3, 4, 2]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495128,"byte_end":495176,"line_start":347,"line_end":347,"column_start":5,"column_end":53}},{"value":"/ *a.last_mut().unwrap() = 42.;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495181,"byte_end":495214,"line_start":348,"line_end":348,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a[[2, 3, 1]], 42.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495219,"byte_end":495253,"line_start":349,"line_end":349,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495258,"byte_end":495261,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let mut b = Array3::<f64>::zeros([3, 0, 5]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495266,"byte_end":495314,"line_start":351,"line_end":351,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(b.last_mut(), None);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495319,"byte_end":495354,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495359,"byte_end":495366,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4460},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495982,"byte_end":495986,"line_start":375,"line_end":375,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArrayBase<S, D>>::iter","value":"pub fn iter(&Self) -> Iter<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of references to the elements of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495716,"byte_end":495782,"line_start":369,"line_end":369,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495787,"byte_end":495790,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495795,"byte_end":495862,"line_start":371,"line_end":371,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495867,"byte_end":495923,"line_start":372,"line_end":372,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495928,"byte_end":495931,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&A`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":495936,"byte_end":495970,"line_start":374,"line_end":374,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4461},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496418,"byte_end":496426,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ArrayBase<S, D>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of mutable references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of mutable references to the elements of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496140,"byte_end":496214,"line_start":383,"line_end":383,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496219,"byte_end":496222,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496227,"byte_end":496294,"line_start":385,"line_end":385,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496299,"byte_end":496355,"line_start":386,"line_end":386,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496360,"byte_end":496363,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `&mut A`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496368,"byte_end":496406,"line_start":388,"line_end":388,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4462},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496894,"byte_end":496906,"line_start":404,"line_end":404,"column_start":12,"column_end":24},"name":"indexed_iter","qualname":"<ArrayBase<S, D>>::indexed_iter","value":"pub fn indexed_iter(&Self) -> IndexedIter<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of indexes and references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of indexes and references to the elements of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496543,"byte_end":496621,"line_start":396,"line_end":396,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496626,"byte_end":496629,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496634,"byte_end":496701,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496706,"byte_end":496762,"line_start":399,"line_end":399,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496767,"byte_end":496770,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(D::Pattern, &A)`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496775,"byte_end":496823,"line_start":401,"line_end":401,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496828,"byte_end":496831,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ See also [`Zip::indexed`](struct.Zip.html)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":496836,"byte_end":496882,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4463},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497346,"byte_end":497362,"line_start":417,"line_end":417,"column_start":12,"column_end":28},"name":"indexed_iter_mut","qualname":"<ArrayBase<S, D>>::indexed_iter_mut","value":"pub fn indexed_iter_mut(&mut Self) -> IndexedIterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of indexes and mutable references to the elements of the array.","sig":null,"attributes":[{"value":"/ Return an iterator of indexes and mutable references to the elements of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497042,"byte_end":497128,"line_start":411,"line_end":411,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497133,"byte_end":497136,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in the *logical order* of the array, which","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497141,"byte_end":497208,"line_start":413,"line_end":413,"column_start":5,"column_end":72}},{"value":"/ is where the rightmost index is varying the fastest.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497213,"byte_end":497269,"line_start":414,"line_end":414,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497274,"byte_end":497277,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(D::Pattern, &mut A)`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497282,"byte_end":497334,"line_start":416,"line_end":416,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497880,"byte_end":497885,"line_start":431,"line_end":431,"column_start":12,"column_end":17},"name":"slice","qualname":"<ArrayBase<S, D>>::slice","value":"pub fn slice<I>(&Self, I) -> ArrayView<, A, I::OutDim> where I: SliceArg<D>,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a sliced view of the array.","sig":null,"attributes":[{"value":"/ Return a sliced view of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497515,"byte_end":497553,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497558,"byte_end":497561,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497566,"byte_end":497619,"line_start":426,"line_end":426,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497624,"byte_end":497695,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497700,"byte_end":497703,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497708,"byte_end":497777,"line_start":429,"line_end":429,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":497782,"byte_end":497868,"line_start":430,"line_end":430,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498417,"byte_end":498426,"line_start":446,"line_end":446,"column_start":12,"column_end":21},"name":"slice_mut","qualname":"<ArrayBase<S, D>>::slice_mut","value":"pub fn slice_mut<I>(&mut Self, I) -> ArrayViewMut<, A, I::OutDim> where\nI: SliceArg<D>, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a sliced read-write view of the array.","sig":null,"attributes":[{"value":"/ Return a sliced read-write view of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498041,"byte_end":498090,"line_start":439,"line_end":439,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498095,"byte_end":498098,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498103,"byte_end":498156,"line_start":441,"line_end":441,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498161,"byte_end":498232,"line_start":442,"line_end":442,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498237,"byte_end":498240,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498245,"byte_end":498314,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498319,"byte_end":498405,"line_start":445,"line_end":445,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":4468},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499481,"byte_end":499496,"line_start":477,"line_end":477,"column_start":12,"column_end":27},"name":"multi_slice_mut","qualname":"<ArrayBase<S, D>>::multi_slice_mut","value":"pub fn multi_slice_mut<'a, M>(&'a mut Self, M) -> M::Output where\nM: MultiSliceArg, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return multiple disjoint, sliced, mutable views of the array.","sig":null,"attributes":[{"value":"/ Return multiple disjoint, sliced, mutable views of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498596,"byte_end":498661,"line_start":454,"line_end":454,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498666,"byte_end":498669,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation. See also","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498674,"byte_end":498736,"line_start":456,"line_end":456,"column_start":5,"column_end":67}},{"value":"/ [`MultiSliceArg`], [`s!`], [`SliceArg`], and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498741,"byte_end":498789,"line_start":457,"line_end":457,"column_start":5,"column_end":53}},{"value":"/ [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498794,"byte_end":498830,"line_start":458,"line_end":458,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498835,"byte_end":498838,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the following occur:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498843,"byte_end":498888,"line_start":460,"line_end":460,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498893,"byte_end":498896,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ * if any of the views would intersect (i.e. if any element would appear in multiple slices)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":498901,"byte_end":498996,"line_start":462,"line_end":462,"column_start":5,"column_end":100}},{"value":"/ * if an index is out of bounds or step size is zero","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499001,"byte_end":499056,"line_start":463,"line_end":463,"column_start":5,"column_end":60}},{"value":"/ * if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499061,"byte_end":499135,"line_start":464,"line_end":464,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499140,"byte_end":499143,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499148,"byte_end":499161,"line_start":466,"line_end":466,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499166,"byte_end":499169,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499174,"byte_end":499181,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, s};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499186,"byte_end":499213,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499218,"byte_end":499221,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499226,"byte_end":499272,"line_start":471,"line_end":471,"column_start":5,"column_end":51}},{"value":"/ let (mut edges, mut middle) = a.multi_slice_mut((s![.., ..;2], s![.., 1]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499277,"byte_end":499356,"line_start":472,"line_end":472,"column_start":5,"column_end":84}},{"value":"/ edges.fill(1);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499361,"byte_end":499379,"line_start":473,"line_end":473,"column_start":5,"column_end":23}},{"value":"/ middle.fill(0);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499384,"byte_end":499403,"line_start":474,"line_end":474,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(a, arr2(&[[1, 0, 1], [1, 0, 1]]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499408,"byte_end":499457,"line_start":475,"line_end":475,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499462,"byte_end":499469,"line_start":476,"line_end":476,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4471},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":500061,"byte_end":500071,"line_start":492,"line_end":492,"column_start":12,"column_end":22},"name":"slice_move","qualname":"<ArrayBase<S, D>>::slice_move","value":"pub fn slice_move<I>(Self, I) -> ArrayBase<S, I::OutDim> where I: SliceArg<D>","parent":null,"children":[],"decl_id":null,"docs":" Slice the array, possibly changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array, possibly changing the number of dimensions.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499670,"byte_end":499734,"line_start":485,"line_end":485,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499739,"byte_end":499742,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499747,"byte_end":499800,"line_start":487,"line_end":487,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499805,"byte_end":499876,"line_start":488,"line_end":488,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499881,"byte_end":499884,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499889,"byte_end":499958,"line_start":490,"line_end":490,"column_start":5,"column_end":74}},{"value":"/ (**Panics** if `D` is `IxDyn` and `info` does not match the number of array axes.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":499963,"byte_end":500049,"line_start":491,"line_end":491,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":4474},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":503078,"byte_end":503092,"line_start":561,"line_end":561,"column_start":12,"column_end":26},"name":"slice_collapse","qualname":"<ArrayBase<S, D>>::slice_collapse","value":"pub fn slice_collapse<I>(&mut Self, I) where I: SliceArg<D>","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place without changing the number of dimensions.","sig":null,"attributes":[{"value":"/ Slice the array in place without changing the number of dimensions.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502162,"byte_end":502233,"line_start":541,"line_end":541,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502238,"byte_end":502241,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ In particular, if an axis is sliced with an index, the axis is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502246,"byte_end":502312,"line_start":543,"line_end":543,"column_start":5,"column_end":71}},{"value":"/ collapsed, as in [`.collapse_axis()`], rather than removed, as in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502317,"byte_end":502386,"line_start":544,"line_end":544,"column_start":5,"column_end":74}},{"value":"/ [`.slice_move()`] or [`.index_axis_move()`].","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502391,"byte_end":502439,"line_start":545,"line_end":545,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502444,"byte_end":502447,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ [`.collapse_axis()`]: #method.collapse_axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502452,"byte_end":502499,"line_start":547,"line_end":547,"column_start":5,"column_end":52}},{"value":"/ [`.slice_move()`]: #method.slice_move","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502504,"byte_end":502545,"line_start":548,"line_end":548,"column_start":5,"column_end":46}},{"value":"/ [`.index_axis_move()`]: #method.index_axis_move","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502550,"byte_end":502601,"line_start":549,"line_end":549,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502606,"byte_end":502609,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502614,"byte_end":502667,"line_start":551,"line_end":551,"column_start":5,"column_end":58}},{"value":"/ See also [`s!`], [`SliceArg`], and [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502672,"byte_end":502743,"line_start":552,"line_end":552,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502748,"byte_end":502751,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ **Panics** in the following cases:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502756,"byte_end":502794,"line_start":554,"line_end":554,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502799,"byte_end":502802,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ - if an index is out of bounds","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502807,"byte_end":502841,"line_start":556,"line_end":556,"column_start":5,"column_end":39}},{"value":"/ - if a step size is zero","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502846,"byte_end":502874,"line_start":557,"line_end":557,"column_start":5,"column_end":33}},{"value":"/ - if [`SliceInfoElem::NewAxis`] is in `info`, e.g. if [`NewAxis`] was","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502879,"byte_end":502952,"line_start":558,"line_end":558,"column_start":5,"column_end":78}},{"value":"/   used in the [`s!`] macro","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502957,"byte_end":502987,"line_start":559,"line_end":559,"column_start":5,"column_end":35}},{"value":"/ - if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":502992,"byte_end":503066,"line_start":560,"line_end":560,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4477},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504295,"byte_end":504305,"line_start":591,"line_end":591,"column_start":12,"column_end":22},"name":"slice_axis","qualname":"<ArrayBase<S, D>>::slice_axis","value":"pub fn slice_axis(&Self, Axis, Slice) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of the array, sliced along the specified axis.","sig":null,"attributes":[{"value":"/ Return a view of the array, sliced along the specified axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504014,"byte_end":504078,"line_start":586,"line_end":586,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504083,"byte_end":504086,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504091,"byte_end":504160,"line_start":588,"line_end":588,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504165,"byte_end":504207,"line_start":589,"line_end":589,"column_start":5,"column_end":47}},{"value":"must_use = \"slice_axis returns an array view with the sliced result\"","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504212,"byte_end":504283,"line_start":590,"line_end":590,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4478},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504798,"byte_end":504812,"line_start":605,"line_end":605,"column_start":12,"column_end":26},"name":"slice_axis_mut","qualname":"<ArrayBase<S, D>>::slice_axis_mut","value":"pub fn slice_axis_mut(&mut Self, Axis, Slice) -> ArrayViewMut<, A, D> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view of the array, sliced along the specified axis.","sig":null,"attributes":[{"value":"/ Return a mutable view of the array, sliced along the specified axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504505,"byte_end":504577,"line_start":600,"line_end":600,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504582,"byte_end":504585,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504590,"byte_end":504659,"line_start":602,"line_end":602,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504664,"byte_end":504706,"line_start":603,"line_end":603,"column_start":5,"column_end":47}},{"value":"must_use = \"slice_axis_mut returns an array view with the sliced result\"","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":504711,"byte_end":504786,"line_start":604,"line_end":604,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4479},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505233,"byte_end":505251,"line_start":618,"line_end":618,"column_start":12,"column_end":30},"name":"slice_axis_inplace","qualname":"<ArrayBase<S, D>>::slice_axis_inplace","value":"pub fn slice_axis_inplace(&mut Self, Axis, Slice)","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place along the specified axis.","sig":null,"attributes":[{"value":"/ Slice the array in place along the specified axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505038,"byte_end":505092,"line_start":614,"line_end":614,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505097,"byte_end":505100,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505105,"byte_end":505174,"line_start":616,"line_end":616,"column_start":5,"column_end":74}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505179,"byte_end":505221,"line_start":617,"line_end":617,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4480},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505908,"byte_end":505923,"line_start":637,"line_end":637,"column_start":12,"column_end":27},"name":"slice_each_axis","qualname":"<ArrayBase<S, D>>::slice_each_axis","value":"pub fn slice_each_axis<F>(&Self, F) -> ArrayView<, A, D> where\nF: FnMut(AxisDescription) -> Slice, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of a slice of the array, with a closure specifying the\n slice for each axis.","sig":null,"attributes":[{"value":"/ Return a view of a slice of the array, with a closure specifying the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505603,"byte_end":505675,"line_start":630,"line_end":630,"column_start":5,"column_end":77}},{"value":"/ slice for each axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505680,"byte_end":505704,"line_start":631,"line_end":631,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505709,"byte_end":505712,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ This is especially useful for code which is generic over the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505717,"byte_end":505781,"line_start":633,"line_end":633,"column_start":5,"column_end":69}},{"value":"/ dimensionality of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505786,"byte_end":505818,"line_start":634,"line_end":634,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505823,"byte_end":505826,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":505831,"byte_end":505896,"line_start":636,"line_end":636,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4482},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506454,"byte_end":506473,"line_start":654,"line_end":654,"column_start":12,"column_end":31},"name":"slice_each_axis_mut","qualname":"<ArrayBase<S, D>>::slice_each_axis_mut","value":"pub fn slice_each_axis_mut<F>(&mut Self, F) -> ArrayViewMut<, A, D> where\nF: FnMut(AxisDescription) -> Slice, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view of a slice of the array, with a closure\n specifying the slice for each axis.","sig":null,"attributes":[{"value":"/ Return a mutable view of a slice of the array, with a closure","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506141,"byte_end":506206,"line_start":647,"line_end":647,"column_start":5,"column_end":70}},{"value":"/ specifying the slice for each axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506211,"byte_end":506250,"line_start":648,"line_end":648,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506255,"byte_end":506258,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This is especially useful for code which is generic over the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506263,"byte_end":506327,"line_start":650,"line_end":650,"column_start":5,"column_end":69}},{"value":"/ dimensionality of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506332,"byte_end":506364,"line_start":651,"line_end":651,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506369,"byte_end":506372,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506377,"byte_end":506442,"line_start":653,"line_end":653,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4484},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506997,"byte_end":507020,"line_start":671,"line_end":671,"column_start":12,"column_end":35},"name":"slice_each_axis_inplace","qualname":"<ArrayBase<S, D>>::slice_each_axis_inplace","value":"pub fn slice_each_axis_inplace<F>(&mut Self, F) where\nF: FnMut(AxisDescription) -> Slice","parent":null,"children":[],"decl_id":null,"docs":" Slice the array in place, with a closure specifying the slice for each\n axis.","sig":null,"attributes":[{"value":"/ Slice the array in place, with a closure specifying the slice for each","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506705,"byte_end":506779,"line_start":664,"line_end":664,"column_start":5,"column_end":79}},{"value":"/ axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506784,"byte_end":506793,"line_start":665,"line_end":665,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506798,"byte_end":506801,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This is especially useful for code which is generic over the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506806,"byte_end":506870,"line_start":667,"line_end":667,"column_start":5,"column_end":69}},{"value":"/ dimensionality of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506875,"byte_end":506907,"line_start":668,"line_end":668,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506912,"byte_end":506915,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ **Panics** if an index is out of bounds or step size is zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":506920,"byte_end":506985,"line_start":670,"line_end":670,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4486},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507919,"byte_end":507922,"line_start":705,"line_end":705,"column_start":12,"column_end":15},"name":"get","qualname":"<ArrayBase<S, D>>::get","value":"pub fn get<I>(&Self, I) -> Option<&A> where I: NdIndex<D>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the element at `index`, or return `None`\n if the index is out of bounds.","sig":null,"attributes":[{"value":"/ Return a reference to the element at `index`, or return `None`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507424,"byte_end":507490,"line_start":687,"line_end":687,"column_start":5,"column_end":71}},{"value":"/ if the index is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507495,"byte_end":507529,"line_start":688,"line_end":688,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507534,"byte_end":507537,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ Arrays also support indexing syntax: `array[index]`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507542,"byte_end":507598,"line_start":690,"line_end":690,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507603,"byte_end":507606,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507611,"byte_end":507618,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507623,"byte_end":507645,"line_start":693,"line_end":693,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507650,"byte_end":507653,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507658,"byte_end":507686,"line_start":695,"line_end":695,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507691,"byte_end":507721,"line_start":696,"line_end":696,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507726,"byte_end":507729,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507734,"byte_end":507746,"line_start":698,"line_end":698,"column_start":5,"column_end":17}},{"value":"/     a.get((0, 1)) == Some(&2.) &&","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507751,"byte_end":507788,"line_start":699,"line_end":699,"column_start":5,"column_end":42}},{"value":"/     a.get((0, 2)) == None &&","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507793,"byte_end":507825,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/     a[(0, 1)] == 2. &&","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507830,"byte_end":507856,"line_start":701,"line_end":701,"column_start":5,"column_end":31}},{"value":"/     a[[0, 1]] == 2.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507861,"byte_end":507884,"line_start":702,"line_end":702,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507889,"byte_end":507895,"line_start":703,"line_end":703,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":507900,"byte_end":507907,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":508495,"byte_end":508502,"line_start":725,"line_end":725,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ArrayBase<S, D>>::get_mut","value":"pub fn get_mut<I>(&mut Self, I) -> Option<&mut A> where S: DataMut,\nI: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the element at `index`, or return `None`\n if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the element at `index`, or return `None`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":508370,"byte_end":508444,"line_start":723,"line_end":723,"column_start":5,"column_end":79}},{"value":"/ if the index is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":508449,"byte_end":508483,"line_start":724,"line_end":724,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4498},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509396,"byte_end":509400,"line_start":756,"line_end":756,"column_start":19,"column_end":23},"name":"uget","qualname":"<ArrayBase<S, D>>::uget","value":"pub unsafe fn uget<I>(&Self, I) -> &A where S: Data, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Perform *unchecked* array indexing.","sig":null,"attributes":[{"value":"/ Perform *unchecked* array indexing.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509095,"byte_end":509134,"line_start":746,"line_end":746,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509139,"byte_end":509142,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ Return a reference to the element at `index`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509147,"byte_end":509196,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509201,"byte_end":509204,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509209,"byte_end":509270,"line_start":750,"line_end":750,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509275,"byte_end":509278,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509283,"byte_end":509295,"line_start":752,"line_end":752,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509300,"byte_end":509303,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the index is in-bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509308,"byte_end":509363,"line_start":754,"line_end":754,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509368,"byte_end":509377,"line_start":755,"line_end":755,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":510147,"byte_end":510155,"line_start":781,"line_end":781,"column_start":19,"column_end":27},"name":"uget_mut","qualname":"<ArrayBase<S, D>>::uget_mut","value":"pub unsafe fn uget_mut<I>(&mut Self, I) -> &mut A where S: DataMut,\nI: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Perform *unchecked* array indexing.","sig":null,"attributes":[{"value":"/ Perform *unchecked* array indexing.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509645,"byte_end":509684,"line_start":766,"line_end":766,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509689,"byte_end":509692,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ Return a mutable reference to the element at `index`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509697,"byte_end":509754,"line_start":768,"line_end":768,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509759,"byte_end":509762,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ **Note:** Only unchecked for non-debug builds of ndarray.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509767,"byte_end":509828,"line_start":770,"line_end":770,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509833,"byte_end":509836,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509841,"byte_end":509853,"line_start":772,"line_end":772,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509858,"byte_end":509861,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509866,"byte_end":509898,"line_start":774,"line_end":774,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509903,"byte_end":509906,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ 1. the index is in-bounds and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509911,"byte_end":509944,"line_start":776,"line_end":776,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509949,"byte_end":509952,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ 2. the data is uniquely held by the array. (This property is guaranteed","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":509957,"byte_end":510032,"line_start":778,"line_end":778,"column_start":5,"column_end":80}},{"value":"/    for `Array` and `ArrayViewMut`, but not for `ArcArray` or `CowArray`.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":510037,"byte_end":510114,"line_start":779,"line_end":779,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":510119,"byte_end":510128,"line_start":780,"line_end":780,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4502},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":510621,"byte_end":510625,"line_start":797,"line_end":797,"column_start":12,"column_end":16},"name":"swap","qualname":"<ArrayBase<S, D>>::swap","value":"pub fn swap<I>(&mut Self, I, I) where S: DataMut, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Swap elements at indices `index1` and `index2`.","sig":null,"attributes":[{"value":"/ Swap elements at indices `index1` and `index2`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":510461,"byte_end":510512,"line_start":792,"line_end":792,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":510517,"byte_end":510520,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ Indices may be equal.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":510525,"byte_end":510550,"line_start":794,"line_end":794,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":510555,"byte_end":510558,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if an index is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":510563,"byte_end":510609,"line_start":796,"line_end":796,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4504},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511745,"byte_end":511750,"line_start":830,"line_end":830,"column_start":19,"column_end":24},"name":"uswap","qualname":"<ArrayBase<S, D>>::uswap","value":"pub unsafe fn uswap<I>(&mut Self, I, I) where S: DataMut, I: NdIndex<D>","parent":null,"children":[],"decl_id":null,"docs":" Swap elements *unchecked* at indices `index1` and `index2`.","sig":null,"attributes":[{"value":"/ Swap elements *unchecked* at indices `index1` and `index2`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511247,"byte_end":511310,"line_start":816,"line_end":816,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511315,"byte_end":511318,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ Indices may be equal.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511323,"byte_end":511348,"line_start":818,"line_end":818,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511353,"byte_end":511356,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511361,"byte_end":511422,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511427,"byte_end":511430,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511435,"byte_end":511447,"line_start":822,"line_end":822,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511452,"byte_end":511455,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511460,"byte_end":511492,"line_start":824,"line_end":824,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511497,"byte_end":511500,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ 1. both `index1` and `index2` are in-bounds and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511505,"byte_end":511556,"line_start":826,"line_end":826,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511561,"byte_end":511564,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ 2. the data is uniquely held by the array. (This property is guaranteed","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511569,"byte_end":511644,"line_start":828,"line_end":828,"column_start":5,"column_end":80}},{"value":"/    for `Array` and `ArrayViewMut`, but not for `ArcArray` or `CowArray`.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":511649,"byte_end":511726,"line_start":829,"line_end":829,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":4507},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513296,"byte_end":513306,"line_start":877,"line_end":877,"column_start":12,"column_end":22},"name":"index_axis","qualname":"<ArrayBase<S, D>>::index_axis","value":"pub fn index_axis(&Self, Axis, usize) -> ArrayView<, A, D::Smaller> where\nS: Data, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Returns a view restricted to `index` along the axis, with the axis\n removed.","sig":null,"attributes":[{"value":"/ Returns a view restricted to `index` along the axis, with the axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512512,"byte_end":512582,"line_start":856,"line_end":856,"column_start":5,"column_end":75}},{"value":"/ removed.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512587,"byte_end":512599,"line_start":857,"line_end":857,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512604,"byte_end":512607,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ See [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512612,"byte_end":512667,"line_start":859,"line_end":859,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512672,"byte_end":512675,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512680,"byte_end":512733,"line_start":861,"line_end":861,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512738,"byte_end":512741,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512746,"byte_end":512753,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, ArrayView, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512758,"byte_end":512799,"line_start":864,"line_end":864,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512804,"byte_end":512807,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2. ],    // ... axis 0, row 0","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512812,"byte_end":512865,"line_start":866,"line_end":866,"column_start":5,"column_end":58}},{"value":"/                [3., 4. ],    // --- axis 0, row 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512870,"byte_end":512923,"line_start":867,"line_end":867,"column_start":5,"column_end":58}},{"value":"/                [5., 6. ]]);  // ... axis 0, row 2","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512928,"byte_end":512981,"line_start":868,"line_end":868,"column_start":5,"column_end":58}},{"value":"/ //               .   \\","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":512986,"byte_end":513012,"line_start":869,"line_end":869,"column_start":5,"column_end":31}},{"value":"/ //                .   axis 1, column 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513017,"byte_end":513059,"line_start":870,"line_end":870,"column_start":5,"column_end":47}},{"value":"/ //                 axis 1, column 0","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513064,"byte_end":513103,"line_start":871,"line_end":871,"column_start":5,"column_end":44}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513108,"byte_end":513120,"line_start":872,"line_end":872,"column_start":5,"column_end":17}},{"value":"/     a.index_axis(Axis(0), 1) == ArrayView::from(&[3., 4.]) &&","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513125,"byte_end":513190,"line_start":873,"line_end":873,"column_start":5,"column_end":70}},{"value":"/     a.index_axis(Axis(1), 1) == ArrayView::from(&[2., 4., 6.])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513195,"byte_end":513261,"line_start":874,"line_end":874,"column_start":5,"column_end":71}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513266,"byte_end":513272,"line_start":875,"line_end":875,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513277,"byte_end":513284,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4508},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514183,"byte_end":514197,"line_start":909,"line_end":909,"column_start":12,"column_end":26},"name":"index_axis_mut","qualname":"<ArrayBase<S, D>>::index_axis_mut","value":"pub fn index_axis_mut(&mut Self, Axis, usize) -> ArrayViewMut<, A, D::Smaller>\nwhere S: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view restricted to `index` along the axis, with the\n axis removed.","sig":null,"attributes":[{"value":"/ Returns a mutable view restricted to `index` along the axis, with the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513488,"byte_end":513561,"line_start":885,"line_end":885,"column_start":5,"column_end":78}},{"value":"/ axis removed.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513566,"byte_end":513583,"line_start":886,"line_end":886,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513588,"byte_end":513591,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513596,"byte_end":513649,"line_start":888,"line_end":888,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513654,"byte_end":513657,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513662,"byte_end":513669,"line_start":890,"line_end":890,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, aview2, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513674,"byte_end":513712,"line_start":891,"line_end":891,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513717,"byte_end":513720,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1., 2. ],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513725,"byte_end":513758,"line_start":893,"line_end":893,"column_start":5,"column_end":38}},{"value":"/                    [3., 4. ]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513763,"byte_end":513798,"line_start":894,"line_end":894,"column_start":5,"column_end":40}},{"value":"/ //                   .   \\","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513803,"byte_end":513833,"line_start":895,"line_end":895,"column_start":5,"column_end":35}},{"value":"/ //                    .   axis 1, column 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513838,"byte_end":513884,"line_start":896,"line_end":896,"column_start":5,"column_end":51}},{"value":"/ //                     axis 1, column 0","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513889,"byte_end":513932,"line_start":897,"line_end":897,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513937,"byte_end":513940,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513945,"byte_end":513950,"line_start":899,"line_end":899,"column_start":5,"column_end":10}},{"value":"/     let mut column1 = a.index_axis_mut(Axis(1), 1);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":513955,"byte_end":514010,"line_start":900,"line_end":900,"column_start":5,"column_end":60}},{"value":"/     column1 += 10.;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514015,"byte_end":514038,"line_start":901,"line_end":901,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514043,"byte_end":514048,"line_start":902,"line_end":902,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514053,"byte_end":514056,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514061,"byte_end":514073,"line_start":904,"line_end":904,"column_start":5,"column_end":17}},{"value":"/     a == aview2(&[[1., 12.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514078,"byte_end":514110,"line_start":905,"line_end":905,"column_start":5,"column_end":37}},{"value":"/                   [3., 14.]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514115,"byte_end":514148,"line_start":906,"line_end":906,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514153,"byte_end":514159,"line_start":907,"line_end":907,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514164,"byte_end":514171,"line_start":908,"line_end":908,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4509},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514652,"byte_end":514667,"line_start":922,"line_end":922,"column_start":12,"column_end":27},"name":"index_axis_move","qualname":"<ArrayBase<S, D>>::index_axis_move","value":"pub fn index_axis_move(Self, Axis, usize) -> ArrayBase<S, D::Smaller> where\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Collapses the array to `index` along the axis and removes the axis.","sig":null,"attributes":[{"value":"/ Collapses the array to `index` along the axis and removes the axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514393,"byte_end":514464,"line_start":917,"line_end":917,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514469,"byte_end":514472,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ See [`.index_axis()`](#method.index_axis) and [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514477,"byte_end":514574,"line_start":919,"line_end":919,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514579,"byte_end":514582,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":514587,"byte_end":514640,"line_start":921,"line_end":921,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4510},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515232,"byte_end":515245,"line_start":938,"line_end":938,"column_start":12,"column_end":25},"name":"collapse_axis","qualname":"<ArrayBase<S, D>>::collapse_axis","value":"pub fn collapse_axis(&mut Self, Axis, usize)","parent":null,"children":[],"decl_id":null,"docs":" Selects `index` along the axis, collapsing the axis into length one.","sig":null,"attributes":[{"value":"/ Selects `index` along the axis, collapsing the axis into length one.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515082,"byte_end":515154,"line_start":935,"line_end":935,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515159,"byte_end":515162,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515167,"byte_end":515220,"line_start":937,"line_end":937,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":516150,"byte_end":516156,"line_start":965,"line_end":965,"column_start":12,"column_end":18},"name":"select","qualname":"<ArrayBase<S, D>>::select","value":"pub fn select(&Self, Axis, &[Ix]) -> Array<A, D> where A: Clone, S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Along `axis`, select arbitrary subviews corresponding to `indices`\n and and copy them into a new array.","sig":null,"attributes":[{"value":"/ Along `axis`, select arbitrary subviews corresponding to `indices`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515503,"byte_end":515573,"line_start":944,"line_end":944,"column_start":5,"column_end":75}},{"value":"/ and and copy them into a new array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515578,"byte_end":515617,"line_start":945,"line_end":945,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515622,"byte_end":515625,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or an element of `indices` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515630,"byte_end":515699,"line_start":947,"line_end":947,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515704,"byte_end":515707,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515712,"byte_end":515719,"line_start":949,"line_end":949,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515724,"byte_end":515754,"line_start":950,"line_end":950,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515759,"byte_end":515762,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ let x = arr2(&[[0., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515767,"byte_end":515795,"line_start":952,"line_end":952,"column_start":5,"column_end":33}},{"value":"/                [2., 3.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515800,"byte_end":515828,"line_start":953,"line_end":953,"column_start":5,"column_end":33}},{"value":"/                [4., 5.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515833,"byte_end":515861,"line_start":954,"line_end":954,"column_start":5,"column_end":33}},{"value":"/                [6., 7.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515866,"byte_end":515894,"line_start":955,"line_end":955,"column_start":5,"column_end":33}},{"value":"/                [8., 9.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515899,"byte_end":515929,"line_start":956,"line_end":956,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515934,"byte_end":515937,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ let r = x.select(Axis(0), &[0, 4, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515942,"byte_end":515984,"line_start":958,"line_end":958,"column_start":5,"column_end":47}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":515989,"byte_end":516001,"line_start":959,"line_end":959,"column_start":5,"column_end":17}},{"value":"/         r == arr2(&[[0., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":516006,"byte_end":516039,"line_start":960,"line_end":960,"column_start":5,"column_end":38}},{"value":"/                     [8., 9.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":516044,"byte_end":516077,"line_start":961,"line_end":961,"column_start":5,"column_end":38}},{"value":"/                     [6., 7.]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":516082,"byte_end":516116,"line_start":962,"line_end":962,"column_start":5,"column_end":39}},{"value":"/);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":516121,"byte_end":516126,"line_start":963,"line_end":963,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":516131,"byte_end":516138,"line_start":964,"line_end":964,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4513},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518650,"byte_end":518654,"line_start":1029,"line_end":1029,"column_start":12,"column_end":16},"name":"rows","qualname":"<ArrayBase<S, D>>::rows","value":"pub fn rows(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n rows of the array. For a 2D array these are the regular rows.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":517620,"byte_end":517692,"line_start":1003,"line_end":1003,"column_start":5,"column_end":77}},{"value":"/ rows of the array. For a 2D array these are the regular rows.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":517697,"byte_end":517762,"line_start":1004,"line_end":1004,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":517767,"byte_end":517770,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.lanes(Axis(n - 1))` where *n* is `self.ndim()`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":517775,"byte_end":517850,"line_start":1006,"line_end":1006,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":517855,"byte_end":517858,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ For an array of dimensions *a* × *b* × *c* × ... × *l* × *m*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":517863,"byte_end":517932,"line_start":1008,"line_end":1008,"column_start":5,"column_end":69}},{"value":"/ it has *a* × *b* × *c* × ... × *l* rows each of length *m*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":517937,"byte_end":518004,"line_start":1009,"line_end":1009,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518009,"byte_end":518012,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ For example, in a 2 × 2 × 3 array, each row is 3 elements long","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518017,"byte_end":518085,"line_start":1011,"line_end":1011,"column_start":5,"column_end":71}},{"value":"/ and there are 2 × 2 = 4 rows in total.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518090,"byte_end":518133,"line_start":1012,"line_end":1012,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518138,"byte_end":518141,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518146,"byte_end":518202,"line_start":1014,"line_end":1014,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518207,"byte_end":518210,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518215,"byte_end":518222,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518227,"byte_end":518249,"line_start":1017,"line_end":1017,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518254,"byte_end":518257,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ let a = arr3(&[[[ 0,  1,  2],    // -- row 0, 0","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518262,"byte_end":518313,"line_start":1019,"line_end":1019,"column_start":5,"column_end":56}},{"value":"/                 [ 3,  4,  5]],   // -- row 0, 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518318,"byte_end":518369,"line_start":1020,"line_end":1020,"column_start":5,"column_end":56}},{"value":"/                [[ 6,  7,  8],    // -- row 1, 0","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518374,"byte_end":518425,"line_start":1021,"line_end":1021,"column_start":5,"column_end":56}},{"value":"/                 [ 9, 10, 11]]]); // -- row 1, 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518430,"byte_end":518481,"line_start":1022,"line_end":1022,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518486,"byte_end":518489,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ // `rows` will yield the four generalized rows of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518494,"byte_end":518558,"line_start":1024,"line_end":1024,"column_start":5,"column_end":69}},{"value":"/ for row in a.rows() {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518563,"byte_end":518588,"line_start":1025,"line_end":1025,"column_start":5,"column_end":30}},{"value":"/     /* loop body */","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518593,"byte_end":518616,"line_start":1026,"line_end":1026,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518621,"byte_end":518626,"line_start":1027,"line_end":1027,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518631,"byte_end":518638,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4514},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518930,"byte_end":518937,"line_start":1041,"line_end":1041,"column_start":12,"column_end":19},"name":"genrows","qualname":"<ArrayBase<S, D>>::genrows","value":"pub fn genrows(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Renamed to .rows()\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":518862,"byte_end":518918,"line_start":1040,"line_end":1040,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4515},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519259,"byte_end":519267,"line_start":1052,"line_end":1052,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ArrayBase<S, D>>::rows_mut","value":"pub fn rows_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n rows of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519037,"byte_end":519109,"line_start":1048,"line_end":1048,"column_start":5,"column_end":77}},{"value":"/ rows of the array and yields mutable array views.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519114,"byte_end":519167,"line_start":1049,"line_end":1049,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519172,"byte_end":519175,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D read-write array view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519180,"byte_end":519247,"line_start":1051,"line_end":1051,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4516},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519564,"byte_end":519575,"line_start":1064,"line_end":1064,"column_start":12,"column_end":23},"name":"genrows_mut","qualname":"<ArrayBase<S, D>>::genrows_mut","value":"pub fn genrows_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Renamed to .rows_mut()\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519492,"byte_end":519552,"line_start":1063,"line_end":1063,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4517},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520724,"byte_end":520731,"line_start":1097,"line_end":1097,"column_start":12,"column_end":19},"name":"columns","qualname":"<ArrayBase<S, D>>::columns","value":"pub fn columns(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array. For a 2D array these are the regular columns.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519689,"byte_end":519761,"line_start":1071,"line_end":1071,"column_start":5,"column_end":77}},{"value":"/ columns of the array. For a 2D array these are the regular columns.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519766,"byte_end":519837,"line_start":1072,"line_end":1072,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519842,"byte_end":519845,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.lanes(Axis(0))`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519850,"byte_end":519894,"line_start":1074,"line_end":1074,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519899,"byte_end":519902,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ For an array of dimensions *a* × *b* × *c* × ... × *l* × *m*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519907,"byte_end":519976,"line_start":1076,"line_end":1076,"column_start":5,"column_end":69}},{"value":"/ it has *b* × *c* × ... × *l* × *m* columns each of length *a*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":519981,"byte_end":520051,"line_start":1077,"line_end":1077,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520056,"byte_end":520059,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ For example, in a 2 × 2 × 3 array, each column is 2 elements long","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520064,"byte_end":520135,"line_start":1079,"line_end":1079,"column_start":5,"column_end":74}},{"value":"/ and there are 2 × 3 = 6 columns in total.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520140,"byte_end":520186,"line_start":1080,"line_end":1080,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520191,"byte_end":520194,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520199,"byte_end":520255,"line_start":1082,"line_end":1082,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520260,"byte_end":520263,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520268,"byte_end":520275,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520280,"byte_end":520302,"line_start":1085,"line_end":1085,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520307,"byte_end":520310,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ // The generalized columns of a 3D array:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520315,"byte_end":520360,"line_start":1087,"line_end":1087,"column_start":5,"column_end":50}},{"value":"/ // are directed along the 0th axis: 0 and 6, 1 and 7 and so on...","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520365,"byte_end":520434,"line_start":1088,"line_end":1088,"column_start":5,"column_end":74}},{"value":"/ let a = arr3(&[[[ 0,  1,  2], [ 3,  4,  5]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520439,"byte_end":520487,"line_start":1089,"line_end":1089,"column_start":5,"column_end":53}},{"value":"/                [[ 6,  7,  8], [ 9, 10, 11]]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520492,"byte_end":520542,"line_start":1090,"line_end":1090,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520547,"byte_end":520550,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ // Here `columns` will yield the six generalized columns of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520555,"byte_end":520629,"line_start":1092,"line_end":1092,"column_start":5,"column_end":79}},{"value":"/ for row in a.columns() {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520634,"byte_end":520662,"line_start":1093,"line_end":1093,"column_start":5,"column_end":33}},{"value":"/     /* loop body */","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520667,"byte_end":520690,"line_start":1094,"line_end":1094,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520695,"byte_end":520700,"line_start":1095,"line_end":1095,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520705,"byte_end":520712,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4518},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521116,"byte_end":521126,"line_start":1109,"line_end":1109,"column_start":12,"column_end":22},"name":"gencolumns","qualname":"<ArrayBase<S, D>>::gencolumns","value":"pub fn gencolumns(&Self) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array. For a 2D array these are the regular columns.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520852,"byte_end":520924,"line_start":1104,"line_end":1104,"column_start":5,"column_end":77}},{"value":"/ columns of the array. For a 2D array these are the regular columns.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":520929,"byte_end":521000,"line_start":1105,"line_end":1105,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521005,"byte_end":521008,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ Renamed to `.columns()`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521013,"byte_end":521040,"line_start":1107,"line_end":1107,"column_start":5,"column_end":32}},{"value":"deprecated(note = \"Renamed to .columns()\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521045,"byte_end":521104,"line_start":1108,"line_end":1108,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521454,"byte_end":521465,"line_start":1120,"line_end":1120,"column_start":12,"column_end":23},"name":"columns_mut","qualname":"<ArrayBase<S, D>>::columns_mut","value":"pub fn columns_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521229,"byte_end":521301,"line_start":1116,"line_end":1116,"column_start":5,"column_end":77}},{"value":"/ columns of the array and yields mutable array views.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521306,"byte_end":521362,"line_start":1117,"line_end":1117,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521367,"byte_end":521370,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D read-write array view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521375,"byte_end":521442,"line_start":1119,"line_end":1119,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4520},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521860,"byte_end":521874,"line_start":1132,"line_end":1132,"column_start":12,"column_end":26},"name":"gencolumns_mut","qualname":"<ArrayBase<S, D>>::gencolumns_mut","value":"pub fn gencolumns_mut(&mut Self) -> LanesMut<, A, D::Smaller> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over the *generalized*\n columns of the array and yields mutable array views.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over the *generalized*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521603,"byte_end":521675,"line_start":1127,"line_end":1127,"column_start":5,"column_end":77}},{"value":"/ columns of the array and yields mutable array views.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521680,"byte_end":521736,"line_start":1128,"line_end":1128,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521741,"byte_end":521744,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ Renamed to `.columns_mut()`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521749,"byte_end":521780,"line_start":1130,"line_end":1130,"column_start":5,"column_end":36}},{"value":"deprecated(note = \"Renamed to .columns_mut()\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521785,"byte_end":521848,"line_start":1131,"line_end":1131,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4521},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523123,"byte_end":523128,"line_start":1167,"line_end":1167,"column_start":12,"column_end":17},"name":"lanes","qualname":"<ArrayBase<S, D>>::lanes","value":"pub fn lanes(&Self, Axis) -> Lanes<, A, D::Smaller> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over all 1D lanes\n pointing in the direction of `axis`.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over all 1D lanes","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":521991,"byte_end":522058,"line_start":1139,"line_end":1139,"column_start":5,"column_end":72}},{"value":"/ pointing in the direction of `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522063,"byte_end":522103,"line_start":1140,"line_end":1140,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522108,"byte_end":522111,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ When pointing in the direction of the first axis, they are *columns*,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522116,"byte_end":522189,"line_start":1142,"line_end":1142,"column_start":5,"column_end":78}},{"value":"/ in the direction of the last axis *rows*; in general they are all","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522194,"byte_end":522263,"line_start":1143,"line_end":1143,"column_start":5,"column_end":74}},{"value":"/ *lanes* and are one dimensional.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522268,"byte_end":522304,"line_start":1144,"line_end":1144,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522309,"byte_end":522312,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView1<A>` (1D array view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522317,"byte_end":522373,"line_start":1146,"line_end":1146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522378,"byte_end":522381,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522386,"byte_end":522393,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr3, aview1, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522398,"byte_end":522436,"line_start":1149,"line_end":1149,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522441,"byte_end":522444,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ let a = arr3(&[[[ 0,  1,  2],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522449,"byte_end":522482,"line_start":1151,"line_end":1151,"column_start":5,"column_end":38}},{"value":"/                 [ 3,  4,  5]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522487,"byte_end":522521,"line_start":1152,"line_end":1152,"column_start":5,"column_end":39}},{"value":"/                [[ 6,  7,  8],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522526,"byte_end":522559,"line_start":1153,"line_end":1153,"column_start":5,"column_end":38}},{"value":"/                 [ 9, 10, 11]]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522564,"byte_end":522600,"line_start":1154,"line_end":1154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522605,"byte_end":522608,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let inner0 = a.lanes(Axis(0));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522613,"byte_end":522647,"line_start":1156,"line_end":1156,"column_start":5,"column_end":39}},{"value":"/ let inner1 = a.lanes(Axis(1));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522652,"byte_end":522686,"line_start":1157,"line_end":1157,"column_start":5,"column_end":39}},{"value":"/ let inner2 = a.lanes(Axis(2));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522691,"byte_end":522725,"line_start":1158,"line_end":1158,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522730,"byte_end":522733,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ // The first lane for axis 0 is [0, 6]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522738,"byte_end":522780,"line_start":1160,"line_end":1160,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(inner0.into_iter().next().unwrap(), aview1(&[0, 6]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522785,"byte_end":522853,"line_start":1161,"line_end":1161,"column_start":5,"column_end":73}},{"value":"/ // The first lane for axis 1 is [0, 3]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522858,"byte_end":522900,"line_start":1162,"line_end":1162,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(inner1.into_iter().next().unwrap(), aview1(&[0, 3]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522905,"byte_end":522973,"line_start":1163,"line_end":1163,"column_start":5,"column_end":73}},{"value":"/ // The first lane for axis 2 is [0, 1, 2]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":522978,"byte_end":523023,"line_start":1164,"line_end":1164,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(inner2.into_iter().next().unwrap(), aview1(&[0, 1, 2]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523028,"byte_end":523099,"line_start":1165,"line_end":1165,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523104,"byte_end":523111,"line_start":1166,"line_end":1166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4522},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523465,"byte_end":523474,"line_start":1178,"line_end":1178,"column_start":12,"column_end":21},"name":"lanes_mut","qualname":"<ArrayBase<S, D>>::lanes_mut","value":"pub fn lanes_mut(&mut Self, Axis) -> LanesMut<, A, D::Smaller> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a producer and iterable that traverses over all 1D lanes\n pointing in the direction of `axis`.","sig":null,"attributes":[{"value":"/ Return a producer and iterable that traverses over all 1D lanes","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523258,"byte_end":523325,"line_start":1174,"line_end":1174,"column_start":5,"column_end":72}},{"value":"/ pointing in the direction of `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523330,"byte_end":523370,"line_start":1175,"line_end":1175,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523375,"byte_end":523378,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut1<A>` (1D read-write array view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523383,"byte_end":523453,"line_start":1177,"line_end":1177,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4523},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523905,"byte_end":523915,"line_start":1192,"line_end":1192,"column_start":12,"column_end":22},"name":"outer_iter","qualname":"<ArrayBase<S, D>>::outer_iter","value":"pub fn outer_iter(&Self) -> AxisIter<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over the outermost dimension\n and yields each subview.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over the outermost dimension","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523621,"byte_end":523687,"line_start":1185,"line_end":1185,"column_start":5,"column_end":71}},{"value":"/ and yields each subview.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523692,"byte_end":523720,"line_start":1186,"line_end":1186,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523725,"byte_end":523728,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.axis_iter(Axis(0))`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523733,"byte_end":523781,"line_start":1188,"line_end":1188,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523786,"byte_end":523789,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D::Smaller>` (read-only array view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523794,"byte_end":523868,"line_start":1190,"line_end":1190,"column_start":5,"column_end":79}},{"value":"allow(deprecated)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":523873,"byte_end":523893,"line_start":1191,"line_end":1191,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4524},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524351,"byte_end":524365,"line_start":1207,"line_end":1207,"column_start":12,"column_end":26},"name":"outer_iter_mut","qualname":"<ArrayBase<S, D>>::outer_iter_mut","value":"pub fn outer_iter_mut(&mut Self) -> AxisIterMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over the outermost dimension\n and yields each subview.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over the outermost dimension","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524059,"byte_end":524125,"line_start":1200,"line_end":1200,"column_start":5,"column_end":71}},{"value":"/ and yields each subview.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524130,"byte_end":524158,"line_start":1201,"line_end":1201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524163,"byte_end":524166,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.axis_iter_mut(Axis(0))`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524171,"byte_end":524223,"line_start":1203,"line_end":1203,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524228,"byte_end":524231,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D::Smaller>` (read-write array view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524236,"byte_end":524314,"line_start":1205,"line_end":1205,"column_start":5,"column_end":83}},{"value":"allow(deprecated)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524319,"byte_end":524339,"line_start":1206,"line_end":1206,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4525},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525154,"byte_end":525163,"line_start":1230,"line_end":1230,"column_start":12,"column_end":21},"name":"axis_iter","qualname":"<ArrayBase<S, D>>::axis_iter","value":"pub fn axis_iter(&Self, Axis) -> AxisIter<, A, D::Smaller> where S: Data,\nD: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis`\n and yields each subview along it.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524523,"byte_end":524572,"line_start":1215,"line_end":1215,"column_start":5,"column_end":54}},{"value":"/ and yields each subview along it.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524577,"byte_end":524614,"line_start":1216,"line_end":1216,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524619,"byte_end":524622,"line_start":1217,"line_end":1217,"column_start":5,"column_end":8}},{"value":"/ For example, in a 3 × 4 × 5 array, with `axis` equal to `Axis(2)`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524627,"byte_end":524699,"line_start":1218,"line_end":1218,"column_start":5,"column_end":75}},{"value":"/ the iterator element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524704,"byte_end":524728,"line_start":1219,"line_end":1219,"column_start":5,"column_end":29}},{"value":"/ is a 3 × 4 subview (and there are 5 in total), as shown","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524733,"byte_end":524793,"line_start":1220,"line_end":1220,"column_start":5,"column_end":64}},{"value":"/ in the picture below.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524798,"byte_end":524823,"line_start":1221,"line_end":1221,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524828,"byte_end":524831,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D::Smaller>` (read-only array view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524836,"byte_end":524910,"line_start":1223,"line_end":1223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524915,"byte_end":524918,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ See [*Subviews*](#subviews) for full documentation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524923,"byte_end":524978,"line_start":1225,"line_end":1225,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524983,"byte_end":524986,"line_start":1226,"line_end":1226,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":524991,"byte_end":525033,"line_start":1227,"line_end":1227,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525038,"byte_end":525041,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ <img src=\"https://rust-ndarray.github.io/ndarray/images/axis_iter_3_4_5.svg\" height=\"250px\">","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525046,"byte_end":525142,"line_start":1229,"line_end":1229,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":4526},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525587,"byte_end":525600,"line_start":1245,"line_end":1245,"column_start":12,"column_end":25},"name":"axis_iter_mut","qualname":"<ArrayBase<S, D>>::axis_iter_mut","value":"pub fn axis_iter_mut(&mut Self, Axis) -> AxisIterMut<, A, D::Smaller> where\nS: DataMut, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis`\n and yields each mutable subview along it.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525322,"byte_end":525371,"line_start":1238,"line_end":1238,"column_start":5,"column_end":54}},{"value":"/ and yields each mutable subview along it.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525376,"byte_end":525421,"line_start":1239,"line_end":1239,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525426,"byte_end":525429,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D::Smaller>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525434,"byte_end":525487,"line_start":1241,"line_end":1241,"column_start":5,"column_end":58}},{"value":"/ (read-write array view).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525492,"byte_end":525520,"line_start":1242,"line_end":1242,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525525,"byte_end":525528,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525533,"byte_end":525575,"line_start":1244,"line_end":1244,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4527},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526798,"byte_end":526814,"line_start":1279,"line_end":1279,"column_start":12,"column_end":28},"name":"axis_chunks_iter","qualname":"<ArrayBase<S, D>>::axis_chunks_iter","value":"pub fn axis_chunks_iter(&Self, Axis, usize) -> AxisChunksIter<, A, D> where\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis` by chunks of `size`,\n yielding non-overlapping views along that axis.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis` by chunks of `size`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525776,"byte_end":525846,"line_start":1253,"line_end":1253,"column_start":5,"column_end":75}},{"value":"/ yielding non-overlapping views along that axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525851,"byte_end":525902,"line_start":1254,"line_end":1254,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525907,"byte_end":525910,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayView<A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525915,"byte_end":525956,"line_start":1256,"line_end":1256,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525961,"byte_end":525964,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ The last view may have less elements if `size` does not divide","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":525969,"byte_end":526035,"line_start":1258,"line_end":1258,"column_start":5,"column_end":71}},{"value":"/ the axis' dimension.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526040,"byte_end":526064,"line_start":1259,"line_end":1259,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526069,"byte_end":526072,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `size` is zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526077,"byte_end":526140,"line_start":1261,"line_end":1261,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526145,"byte_end":526148,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526153,"byte_end":526160,"line_start":1263,"line_end":1263,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526165,"byte_end":526188,"line_start":1264,"line_end":1264,"column_start":5,"column_end":28}},{"value":"/ use ndarray::{arr3, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526193,"byte_end":526223,"line_start":1265,"line_end":1265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526228,"byte_end":526231,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_iter(0..28).into_shape((2, 7, 2)).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526236,"byte_end":526303,"line_start":1267,"line_end":1267,"column_start":5,"column_end":72}},{"value":"/ let mut iter = a.axis_chunks_iter(Axis(1), 2);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526308,"byte_end":526358,"line_start":1268,"line_end":1268,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526363,"byte_end":526366,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ // first iteration yields a 2 × 2 × 2 view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526371,"byte_end":526419,"line_start":1270,"line_end":1270,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(iter.next().unwrap(),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526424,"byte_end":526460,"line_start":1271,"line_end":1271,"column_start":5,"column_end":41}},{"value":"/            arr3(&[[[ 0,  1], [ 2, 3]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526465,"byte_end":526507,"line_start":1272,"line_end":1272,"column_start":5,"column_end":47}},{"value":"/                   [[14, 15], [16, 17]]]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526512,"byte_end":526558,"line_start":1273,"line_end":1273,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526563,"byte_end":526566,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ // however the last element is a 2 × 1 × 2 view since 7 % 2 == 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526571,"byte_end":526641,"line_start":1275,"line_end":1275,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next_back().unwrap(), arr3(&[[[12, 13]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526646,"byte_end":526706,"line_start":1276,"line_end":1276,"column_start":5,"column_end":65}},{"value":"/                                              [[26, 27]]]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526711,"byte_end":526774,"line_start":1277,"line_end":1277,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526779,"byte_end":526786,"line_start":1278,"line_end":1278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4528},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527254,"byte_end":527274,"line_start":1292,"line_end":1292,"column_start":12,"column_end":32},"name":"axis_chunks_iter_mut","qualname":"<ArrayBase<S, D>>::axis_chunks_iter_mut","value":"pub fn axis_chunks_iter_mut(&mut Self, Axis, usize)\n-> AxisChunksIterMut<, A, D> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that traverses over `axis` by chunks of `size`,\n yielding non-overlapping read-write views along that axis.","sig":null,"attributes":[{"value":"/ Return an iterator that traverses over `axis` by chunks of `size`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":526972,"byte_end":527042,"line_start":1286,"line_end":1286,"column_start":5,"column_end":75}},{"value":"/ yielding non-overlapping read-write views along that axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527047,"byte_end":527109,"line_start":1287,"line_end":1287,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527114,"byte_end":527117,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ Iterator element is `ArrayViewMut<A, D>`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527122,"byte_end":527166,"line_start":1289,"line_end":1289,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527171,"byte_end":527174,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `size` is zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527179,"byte_end":527242,"line_start":1291,"line_end":1291,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4529},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527957,"byte_end":527969,"line_start":1310,"line_end":1310,"column_start":12,"column_end":24},"name":"exact_chunks","qualname":"<ArrayBase<S, D>>::exact_chunks","value":"pub fn exact_chunks<E>(&Self, E) -> ExactChunks<, A, D> where\nE: IntoDimension<Dim = D>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an exact chunks producer (and iterable).","sig":null,"attributes":[{"value":"/ Return an exact chunks producer (and iterable).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527449,"byte_end":527500,"line_start":1299,"line_end":1299,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527505,"byte_end":527508,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ It produces the whole chunks of a given n-dimensional chunk size,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527513,"byte_end":527582,"line_start":1301,"line_end":1301,"column_start":5,"column_end":74}},{"value":"/ skipping the remainder along each dimension that doesn't fit evenly.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527587,"byte_end":527659,"line_start":1302,"line_end":1302,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527664,"byte_end":527667,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ The produced element is a `ArrayView<A, D>` with exactly the dimension","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527672,"byte_end":527746,"line_start":1304,"line_end":1304,"column_start":5,"column_end":79}},{"value":"/ `chunk_size`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527751,"byte_end":527768,"line_start":1305,"line_end":1305,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527773,"byte_end":527776,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `chunk_size` is zero<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527781,"byte_end":527840,"line_start":1307,"line_end":1307,"column_start":5,"column_end":64}},{"value":"/ (**Panics** if `D` is `IxDyn` and `chunk_size` does not match the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527845,"byte_end":527914,"line_start":1308,"line_end":1308,"column_start":5,"column_end":74}},{"value":"/ number of array axes.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":527919,"byte_end":527945,"line_start":1309,"line_end":1309,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529323,"byte_end":529339,"line_start":1350,"line_end":1350,"column_start":12,"column_end":28},"name":"exact_chunks_mut","qualname":"<ArrayBase<S, D>>::exact_chunks_mut","value":"pub fn exact_chunks_mut<E>(&mut Self, E) -> ExactChunksMut<, A, D> where\nE: IntoDimension<Dim = D>, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return an exact chunks producer (and iterable).","sig":null,"attributes":[{"value":"/ Return an exact chunks producer (and iterable).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528149,"byte_end":528200,"line_start":1318,"line_end":1318,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528205,"byte_end":528208,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ It produces the whole chunks of a given n-dimensional chunk size,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528213,"byte_end":528282,"line_start":1320,"line_end":1320,"column_start":5,"column_end":74}},{"value":"/ skipping the remainder along each dimension that doesn't fit evenly.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528287,"byte_end":528359,"line_start":1321,"line_end":1321,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528364,"byte_end":528367,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ The produced element is a `ArrayViewMut<A, D>` with exactly","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528372,"byte_end":528435,"line_start":1323,"line_end":1323,"column_start":5,"column_end":68}},{"value":"/ the dimension `chunk_size`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528440,"byte_end":528471,"line_start":1324,"line_end":1324,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528476,"byte_end":528479,"line_start":1325,"line_end":1325,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `chunk_size` is zero<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528484,"byte_end":528543,"line_start":1326,"line_end":1326,"column_start":5,"column_end":64}},{"value":"/ (**Panics** if `D` is `IxDyn` and `chunk_size` does not match the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528548,"byte_end":528617,"line_start":1327,"line_end":1327,"column_start":5,"column_end":74}},{"value":"/ number of array axes.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528622,"byte_end":528648,"line_start":1328,"line_end":1328,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528653,"byte_end":528656,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528661,"byte_end":528672,"line_start":1330,"line_end":1330,"column_start":5,"column_end":16}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528677,"byte_end":528700,"line_start":1331,"line_end":1331,"column_start":5,"column_end":28}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528705,"byte_end":528727,"line_start":1332,"line_end":1332,"column_start":5,"column_end":27}},{"value":"/ let mut a = Array::zeros((6, 7));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528732,"byte_end":528769,"line_start":1333,"line_end":1333,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528774,"byte_end":528777,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ // Fill each 2 × 2 chunk with the index of where it appeared in iteration","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528782,"byte_end":528860,"line_start":1335,"line_end":1335,"column_start":5,"column_end":82}},{"value":"/ for (i, mut chunk) in a.exact_chunks_mut((2, 2)).into_iter().enumerate() {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528865,"byte_end":528943,"line_start":1336,"line_end":1336,"column_start":5,"column_end":83}},{"value":"/     chunk.fill(i);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528948,"byte_end":528970,"line_start":1337,"line_end":1337,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528975,"byte_end":528980,"line_start":1338,"line_end":1338,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528985,"byte_end":528988,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ // The resulting array is:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":528993,"byte_end":529023,"line_start":1340,"line_end":1340,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529028,"byte_end":529043,"line_start":1341,"line_end":1341,"column_start":5,"column_end":20}},{"value":"/   a,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529048,"byte_end":529056,"line_start":1342,"line_end":1342,"column_start":5,"column_end":13}},{"value":"/   arr2(&[[0, 0, 1, 1, 2, 2, 0],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529061,"byte_end":529096,"line_start":1343,"line_end":1343,"column_start":5,"column_end":40}},{"value":"/          [0, 0, 1, 1, 2, 2, 0],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529101,"byte_end":529136,"line_start":1344,"line_end":1344,"column_start":5,"column_end":40}},{"value":"/          [3, 3, 4, 4, 5, 5, 0],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529141,"byte_end":529176,"line_start":1345,"line_end":1345,"column_start":5,"column_end":40}},{"value":"/          [3, 3, 4, 4, 5, 5, 0],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529181,"byte_end":529216,"line_start":1346,"line_end":1346,"column_start":5,"column_end":40}},{"value":"/          [6, 6, 7, 7, 8, 8, 0],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529221,"byte_end":529256,"line_start":1347,"line_end":1347,"column_start":5,"column_end":40}},{"value":"/          [6, 6, 7, 7, 8, 8, 0]]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529261,"byte_end":529299,"line_start":1348,"line_end":1348,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529304,"byte_end":529311,"line_start":1349,"line_end":1349,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4533},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":533159,"byte_end":533166,"line_start":1394,"line_end":1394,"column_start":12,"column_end":19},"name":"windows","qualname":"<ArrayBase<S, D>>::windows","value":"pub fn windows<E>(&Self, E) -> Windows<, A, D> where E: IntoDimension<Dim =\nD>, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a window producer and iterable.","sig":null,"attributes":[{"value":"/ Return a window producer and iterable.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529536,"byte_end":529578,"line_start":1358,"line_end":1358,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529583,"byte_end":529586,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ The windows are all distinct overlapping views of size `window_size`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529591,"byte_end":529663,"line_start":1360,"line_end":1360,"column_start":5,"column_end":77}},{"value":"/ that fit into the array's shape.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529668,"byte_end":529704,"line_start":1361,"line_end":1361,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529709,"byte_end":529712,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ This produces no elements if the window size is larger than the actual array size along any","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529717,"byte_end":529812,"line_start":1363,"line_end":1363,"column_start":5,"column_end":100}},{"value":"/ axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529817,"byte_end":529826,"line_start":1364,"line_end":1364,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529831,"byte_end":529834,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ The produced element is an `ArrayView<A, D>` with exactly the dimension","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529839,"byte_end":529914,"line_start":1366,"line_end":1366,"column_start":5,"column_end":80}},{"value":"/ `window_size`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529919,"byte_end":529937,"line_start":1367,"line_end":1367,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529942,"byte_end":529945,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any dimension of `window_size` is zero.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":529950,"byte_end":530011,"line_start":1369,"line_end":1369,"column_start":5,"column_end":66}},{"value":"/ (**Panics** if `D` is `IxDyn` and `window_size` does not match the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530016,"byte_end":530086,"line_start":1370,"line_end":1370,"column_start":5,"column_end":75}},{"value":"/ number of array axes.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530091,"byte_end":530117,"line_start":1371,"line_end":1371,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530122,"byte_end":530125,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ This is an illustration of the 2×2 windows in a 3×4 array:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530130,"byte_end":530194,"line_start":1373,"line_end":1373,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530199,"byte_end":530202,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530207,"byte_end":530218,"line_start":1375,"line_end":1375,"column_start":5,"column_end":16}},{"value":"/          ──▶ Axis(1)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530223,"byte_end":530253,"line_start":1376,"line_end":1376,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530258,"byte_end":530261,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/      │   ┏━━━━━┳━━━━━┱─────┬─────┐   ┌─────┲━━━━━┳━━━━━┱─────┐   ┌─────┬─────┲━━━━━┳━━━━━┓","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530266,"byte_end":530512,"line_start":1378,"line_end":1378,"column_start":5,"column_end":99}},{"value":"/      ▼   ┃ a₀₀ ┃ a₀₁ ┃     │     │   │     ┃ a₀₁ ┃ a₀₂ ┃     │   │     │     ┃ a₀₂ ┃ a₀₃ ┃","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530517,"byte_end":530667,"line_start":1379,"line_end":1379,"column_start":5,"column_end":99}},{"value":"/ Axis(0)  ┣━━━━━╋━━━━━╉─────┼─────┤   ├─────╊━━━━━╋━━━━━╉─────┤   ├─────┼─────╊━━━━━╋━━━━━┫","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530672,"byte_end":530916,"line_start":1380,"line_end":1380,"column_start":5,"column_end":99}},{"value":"/          ┃ a₁₀ ┃ a₁₁ ┃     │     │   │     ┃ a₁₁ ┃ a₁₂ ┃     │   │     │     ┃ a₁₂ ┃ a₁₃ ┃","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":530921,"byte_end":531069,"line_start":1381,"line_end":1381,"column_start":5,"column_end":99}},{"value":"/          ┡━━━━━╇━━━━━╃─────┼─────┤   ├─────╄━━━━━╇━━━━━╃─────┤   ├─────┼─────╄━━━━━╇━━━━━┩","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":531074,"byte_end":531318,"line_start":1382,"line_end":1382,"column_start":5,"column_end":99}},{"value":"/          │     │     │     │     │   │     │     │     │     │   │     │     │     │     │","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":531323,"byte_end":531447,"line_start":1383,"line_end":1383,"column_start":5,"column_end":99}},{"value":"/          └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘   └─────┴─────┴─────┴─────┘","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":531452,"byte_end":531696,"line_start":1384,"line_end":1384,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":531701,"byte_end":531704,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/          ┌─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┐","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":531709,"byte_end":531953,"line_start":1386,"line_end":1386,"column_start":5,"column_end":99}},{"value":"/          │     │     │     │     │   │     │     │     │     │   │     │     │     │     │","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":531958,"byte_end":532082,"line_start":1387,"line_end":1387,"column_start":5,"column_end":99}},{"value":"/          ┢━━━━━╈━━━━━╅─────┼─────┤   ├─────╆━━━━━╈━━━━━╅─────┤   ├─────┼─────╆━━━━━╈━━━━━┪","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":532087,"byte_end":532331,"line_start":1388,"line_end":1388,"column_start":5,"column_end":99}},{"value":"/          ┃ a₁₀ ┃ a₁₁ ┃     │     │   │     ┃ a₁₁ ┃ a₁₂ ┃     │   │     │     ┃ a₁₂ ┃ a₁₃ ┃","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":532336,"byte_end":532484,"line_start":1389,"line_end":1389,"column_start":5,"column_end":99}},{"value":"/          ┣━━━━━╋━━━━━╉─────┼─────┤   ├─────╊━━━━━╋━━━━━╉─────┤   ├─────┼─────╊━━━━━╋━━━━━┫","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":532489,"byte_end":532733,"line_start":1390,"line_end":1390,"column_start":5,"column_end":99}},{"value":"/          ┃ a₂₀ ┃ a₂₁ ┃     │     │   │     ┃ a₂₁ ┃ a₂₂ ┃     │   │     │     ┃ a₂₂ ┃ a₂₃ ┃","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":532738,"byte_end":532886,"line_start":1391,"line_end":1391,"column_start":5,"column_end":99}},{"value":"/          ┗━━━━━┻━━━━━┹─────┴─────┘   └─────┺━━━━━┻━━━━━┹─────┘   └─────┴─────┺━━━━━┻━━━━━┛","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":532891,"byte_end":533135,"line_start":1392,"line_end":1392,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":533140,"byte_end":533147,"line_start":1393,"line_end":1393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":533823,"byte_end":533827,"line_start":1414,"line_end":1414,"column_start":12,"column_end":16},"name":"diag","qualname":"<ArrayBase<S, D>>::diag","value":"pub fn diag(&Self) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a view of the diagonal elements of the array.","sig":null,"attributes":[{"value":"/ Return a view of the diagonal elements of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":533611,"byte_end":533667,"line_start":1410,"line_end":1410,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":533672,"byte_end":533675,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ The diagonal is simply the sequence indexed by *(0, 0, .., 0)*,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":533680,"byte_end":533747,"line_start":1412,"line_end":1412,"column_start":5,"column_end":72}},{"value":"/ *(1, 1, ..., 1)* etc as long as all axes have elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":533752,"byte_end":533811,"line_start":1413,"line_end":1413,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":534013,"byte_end":534021,"line_start":1422,"line_end":1422,"column_start":12,"column_end":20},"name":"diag_mut","qualname":"<ArrayBase<S, D>>::diag_mut","value":"pub fn diag_mut(&mut Self) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a read-write view over the diagonal elements of the array.\n","sig":null,"attributes":[{"value":"/ Return a read-write view over the diagonal elements of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":533932,"byte_end":534001,"line_start":1421,"line_end":1421,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":534203,"byte_end":534212,"line_start":1430,"line_end":1430,"column_start":12,"column_end":21},"name":"into_diag","qualname":"<ArrayBase<S, D>>::into_diag","value":"pub fn into_diag(Self) -> ArrayBase<S, Ix1>","parent":null,"children":[],"decl_id":null,"docs":" Return the diagonal as a one-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return the diagonal as a one-dimensional array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":534140,"byte_end":534191,"line_start":1429,"line_end":1429,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4541},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535480,"byte_end":535498,"line_start":1469,"line_end":1469,"column_start":12,"column_end":30},"name":"is_standard_layout","qualname":"<ArrayBase<S, D>>::is_standard_layout","value":"pub fn is_standard_layout(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the array data is laid out in contiguous “C order” in\n memory (where the last index is the most rapidly varying).","sig":null,"attributes":[{"value":"/ Return `true` if the array data is laid out in contiguous “C order” in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535192,"byte_end":535270,"line_start":1464,"line_end":1464,"column_start":5,"column_end":79}},{"value":"/ memory (where the last index is the most rapidly varying).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535275,"byte_end":535337,"line_start":1465,"line_end":1465,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535342,"byte_end":535345,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ Return `false` otherwise, i.e. the array is possibly not","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535350,"byte_end":535410,"line_start":1467,"line_end":1467,"column_start":5,"column_end":65}},{"value":"/ contiguous in memory, it has custom strides, etc.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535415,"byte_end":535468,"line_start":1468,"line_end":1468,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4543},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536596,"byte_end":536614,"line_start":1500,"line_end":1500,"column_start":12,"column_end":30},"name":"as_standard_layout","qualname":"<ArrayBase<S, D>>::as_standard_layout","value":"pub fn as_standard_layout(&Self) -> CowArray<, A, D> where S: Data<Elem = A>,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Return a standard-layout array containing the data, cloning if\n necessary.","sig":null,"attributes":[{"value":"/ Return a standard-layout array containing the data, cloning if","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535751,"byte_end":535817,"line_start":1478,"line_end":1478,"column_start":5,"column_end":71}},{"value":"/ necessary.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535822,"byte_end":535836,"line_start":1479,"line_end":1479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535841,"byte_end":535844,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ If `self` is in standard layout, a COW view of the data is returned","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535849,"byte_end":535920,"line_start":1481,"line_end":1481,"column_start":5,"column_end":76}},{"value":"/ without cloning. Otherwise, the data is cloned, and the returned array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":535925,"byte_end":535999,"line_start":1482,"line_end":1482,"column_start":5,"column_end":79}},{"value":"/ owns the cloned data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536004,"byte_end":536029,"line_start":1483,"line_end":1483,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536034,"byte_end":536037,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536042,"byte_end":536049,"line_start":1485,"line_end":1485,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536054,"byte_end":536078,"line_start":1486,"line_end":1486,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536083,"byte_end":536086,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ let standard = Array2::<f64>::zeros((3, 4));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536091,"byte_end":536139,"line_start":1488,"line_end":1488,"column_start":5,"column_end":53}},{"value":"/ assert!(standard.is_standard_layout());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536144,"byte_end":536187,"line_start":1489,"line_end":1489,"column_start":5,"column_end":48}},{"value":"/ let cow_view = standard.as_standard_layout();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536192,"byte_end":536241,"line_start":1490,"line_end":1490,"column_start":5,"column_end":54}},{"value":"/ assert!(cow_view.is_view());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536246,"byte_end":536278,"line_start":1491,"line_end":1491,"column_start":5,"column_end":37}},{"value":"/ assert!(cow_view.is_standard_layout());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536283,"byte_end":536326,"line_start":1492,"line_end":1492,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536331,"byte_end":536334,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ let fortran = standard.reversed_axes();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536339,"byte_end":536382,"line_start":1494,"line_end":1494,"column_start":5,"column_end":48}},{"value":"/ assert!(!fortran.is_standard_layout());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536387,"byte_end":536430,"line_start":1495,"line_end":1495,"column_start":5,"column_end":48}},{"value":"/ let cow_owned = fortran.as_standard_layout();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536435,"byte_end":536484,"line_start":1496,"line_end":1496,"column_start":5,"column_end":54}},{"value":"/ assert!(cow_owned.is_owned());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536489,"byte_end":536523,"line_start":1497,"line_end":1497,"column_start":5,"column_end":39}},{"value":"/ assert!(cow_owned.is_standard_layout());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536528,"byte_end":536572,"line_start":1498,"line_end":1498,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":536577,"byte_end":536584,"line_start":1499,"line_end":1499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4544},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537637,"byte_end":537643,"line_start":1530,"line_end":1530,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<ArrayBase<S, D>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const A","parent":null,"children":[],"decl_id":null,"docs":" Return a pointer to the first element in the array.","sig":null,"attributes":[{"value":"/ Return a pointer to the first element in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537244,"byte_end":537299,"line_start":1520,"line_end":1520,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537304,"byte_end":537307,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ Raw access to array elements needs to follow the strided indexing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537312,"byte_end":537381,"line_start":1522,"line_end":1522,"column_start":5,"column_end":74}},{"value":"/ scheme: an element at multi-index *I* in an array with strides *S* is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537386,"byte_end":537459,"line_start":1523,"line_end":1523,"column_start":5,"column_end":78}},{"value":"/ located at offset","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537464,"byte_end":537485,"line_start":1524,"line_end":1524,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537490,"byte_end":537493,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ *Σ<sub>0 ≤ k < d</sub> I<sub>k</sub> × S<sub>k</sub>*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537498,"byte_end":537559,"line_start":1526,"line_end":1526,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537564,"byte_end":537567,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ where *d* is `self.ndim()`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537572,"byte_end":537603,"line_start":1528,"line_end":1528,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537608,"byte_end":537625,"line_start":1529,"line_end":1529,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4545},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538184,"byte_end":538194,"line_start":1545,"line_end":1545,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<ArrayBase<S, D>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut A where S: RawDataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable pointer to the first element in the array.","sig":null,"attributes":[{"value":"/ Return a mutable pointer to the first element in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537714,"byte_end":537777,"line_start":1534,"line_end":1534,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537782,"byte_end":537785,"line_start":1535,"line_end":1535,"column_start":5,"column_end":8}},{"value":"/ This method attempts to unshare the data. If `S: DataMut`, then the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537790,"byte_end":537861,"line_start":1536,"line_end":1536,"column_start":5,"column_end":76}},{"value":"/ data is guaranteed to be uniquely held on return.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537866,"byte_end":537919,"line_start":1537,"line_end":1537,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537924,"byte_end":537927,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537932,"byte_end":537945,"line_start":1539,"line_end":1539,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537950,"byte_end":537953,"line_start":1540,"line_end":1540,"column_start":5,"column_end":8}},{"value":"/ When accessing elements through this pointer, make sure to use strides","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":537958,"byte_end":538032,"line_start":1541,"line_end":1541,"column_start":5,"column_end":79}},{"value":"/ obtained *after* calling this method, since the process of unsharing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538037,"byte_end":538109,"line_start":1542,"line_end":1542,"column_start":5,"column_end":77}},{"value":"/ the data may change the strides.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538114,"byte_end":538150,"line_start":1543,"line_end":1543,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538155,"byte_end":538172,"line_start":1544,"line_end":1544,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4546},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538403,"byte_end":538411,"line_start":1555,"line_end":1555,"column_start":12,"column_end":20},"name":"raw_view","qualname":"<ArrayBase<S, D>>::raw_view","value":"pub fn raw_view(&Self) -> RawArrayView<A, D>","parent":null,"children":[],"decl_id":null,"docs":" Return a raw view of the array.\n","sig":null,"attributes":[{"value":"/ Return a raw view of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538342,"byte_end":538377,"line_start":1553,"line_end":1553,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538382,"byte_end":538391,"line_start":1554,"line_end":1554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4547},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538752,"byte_end":538764,"line_start":1564,"line_end":1564,"column_start":12,"column_end":24},"name":"raw_view_mut","qualname":"<ArrayBase<S, D>>::raw_view_mut","value":"pub fn raw_view_mut(&mut Self) -> RawArrayViewMut<A, D> where S: RawDataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a raw mutable view of the array.","sig":null,"attributes":[{"value":"/ Return a raw mutable view of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538541,"byte_end":538584,"line_start":1559,"line_end":1559,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538589,"byte_end":538592,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ This method attempts to unshare the data. If `S: DataMut`, then the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538597,"byte_end":538668,"line_start":1561,"line_end":1561,"column_start":5,"column_end":76}},{"value":"/ data is guaranteed to be uniquely held on return.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538673,"byte_end":538726,"line_start":1562,"line_end":1562,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":538731,"byte_end":538740,"line_start":1563,"line_end":1563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4549},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":539646,"byte_end":539654,"line_start":1588,"line_end":1588,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<ArrayBase<S, D>>::as_slice","value":"pub fn as_slice(&Self) -> Option<&[A]> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":539361,"byte_end":539445,"line_start":1583,"line_end":1583,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":539450,"byte_end":539478,"line_start":1584,"line_end":1584,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":539483,"byte_end":539486,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Some(_)`, then the element order in the slice","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":539491,"byte_end":539566,"line_start":1586,"line_end":1586,"column_start":5,"column_end":80}},{"value":"/ corresponds to the logical order of the array’s elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":539571,"byte_end":539634,"line_start":1587,"line_end":1587,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4550},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":540016,"byte_end":540028,"line_start":1601,"line_end":1601,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<ArrayBase<S, D>>::as_slice_mut","value":"pub fn as_slice_mut(&mut Self) -> Option<&mut [A]> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":539887,"byte_end":539971,"line_start":1599,"line_end":1599,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":539976,"byte_end":540004,"line_start":1600,"line_end":1600,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4551},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":540556,"byte_end":540577,"line_start":1618,"line_end":1618,"column_start":12,"column_end":33},"name":"as_slice_memory_order","qualname":"<ArrayBase<S, D>>::as_slice_memory_order","value":"pub fn as_slice_memory_order(&Self) -> Option<&[A]> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice if it is contiguous,\n return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice if it is contiguous,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":540310,"byte_end":540371,"line_start":1613,"line_end":1613,"column_start":5,"column_end":64}},{"value":"/ return `None` otherwise.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":540376,"byte_end":540404,"line_start":1614,"line_end":1614,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":540409,"byte_end":540412,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ If this function returns `Some(_)`, then the elements in the slice","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":540417,"byte_end":540487,"line_start":1616,"line_end":1616,"column_start":5,"column_end":75}},{"value":"/ have whatever order the elements have in memory.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":540492,"byte_end":540544,"line_start":1617,"line_end":1617,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4552},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":541280,"byte_end":541305,"line_start":1641,"line_end":1641,"column_start":12,"column_end":37},"name":"as_slice_memory_order_mut","qualname":"<ArrayBase<S, D>>::as_slice_memory_order_mut","value":"pub fn as_slice_memory_order_mut(&mut Self) -> Option<&mut [A]> where\nS: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice if it is contiguous,\n return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice if it is contiguous,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":540996,"byte_end":541057,"line_start":1635,"line_end":1635,"column_start":5,"column_end":64}},{"value":"/ return `None` otherwise.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":541062,"byte_end":541090,"line_start":1636,"line_end":1636,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":541095,"byte_end":541098,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ In the contiguous case, in order to return a unique reference, this","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":541103,"byte_end":541174,"line_start":1638,"line_end":1638,"column_start":5,"column_end":76}},{"value":"/ method unshares the data if necessary, but it preserves the existing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":541179,"byte_end":541251,"line_start":1639,"line_end":1639,"column_start":5,"column_end":77}},{"value":"/ strides.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":541256,"byte_end":541268,"line_start":1640,"line_end":1640,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4554},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543650,"byte_end":543658,"line_start":1712,"line_end":1712,"column_start":12,"column_end":20},"name":"to_shape","qualname":"<ArrayBase<S, D>>::to_shape","value":"pub fn to_shape<E>(&Self, E) -> Result<CowArray<, A, E::Dim>, ShapeError>\nwhere E: ShapeArg, A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Transform the array into `new_shape`; any shape with the same number of elements is\n accepted.","sig":null,"attributes":[{"value":"/ Transform the array into `new_shape`; any shape with the same number of elements is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542079,"byte_end":542166,"line_start":1668,"line_end":1668,"column_start":5,"column_end":92}},{"value":"/ accepted.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542171,"byte_end":542184,"line_start":1669,"line_end":1669,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542189,"byte_end":542192,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ `order` specifies the *logical* order in which the array is to be read and reshaped.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542197,"byte_end":542285,"line_start":1671,"line_end":1671,"column_start":5,"column_end":93}},{"value":"/ The array is returned as a `CowArray`; a view if possible, otherwise an owned array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542290,"byte_end":542378,"line_start":1672,"line_end":1672,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542383,"byte_end":542386,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ For example, when starting from the one-dimensional sequence 1 2 3 4 5 6, it would be","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542391,"byte_end":542480,"line_start":1674,"line_end":1674,"column_start":5,"column_end":94}},{"value":"/ understood as a 2 x 3 array in row major (\"C\") order this way:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542485,"byte_end":542551,"line_start":1675,"line_end":1675,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542556,"byte_end":542559,"line_start":1676,"line_end":1676,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542564,"byte_end":542575,"line_start":1677,"line_end":1677,"column_start":5,"column_end":16}},{"value":"/ 1 2 3","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542580,"byte_end":542589,"line_start":1678,"line_end":1678,"column_start":5,"column_end":14}},{"value":"/ 4 5 6","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542594,"byte_end":542603,"line_start":1679,"line_end":1679,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542608,"byte_end":542615,"line_start":1680,"line_end":1680,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542620,"byte_end":542623,"line_start":1681,"line_end":1681,"column_start":5,"column_end":8}},{"value":"/ and as 2 x 3 in column major (\"F\") order this way:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542628,"byte_end":542682,"line_start":1682,"line_end":1682,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542687,"byte_end":542690,"line_start":1683,"line_end":1683,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542695,"byte_end":542706,"line_start":1684,"line_end":1684,"column_start":5,"column_end":16}},{"value":"/ 1 3 5","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542711,"byte_end":542720,"line_start":1685,"line_end":1685,"column_start":5,"column_end":14}},{"value":"/ 2 4 6","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542725,"byte_end":542734,"line_start":1686,"line_end":1686,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542739,"byte_end":542746,"line_start":1687,"line_end":1687,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542751,"byte_end":542754,"line_start":1688,"line_end":1688,"column_start":5,"column_end":8}},{"value":"/ This example should show that any time we \"reflow\" the elements in the array to a different","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542759,"byte_end":542854,"line_start":1689,"line_end":1689,"column_start":5,"column_end":100}},{"value":"/ number of rows and columns (or more axes if applicable), it is important to pick an index","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542859,"byte_end":542952,"line_start":1690,"line_end":1690,"column_start":5,"column_end":98}},{"value":"/ ordering, and that's the reason for the function parameter for `order`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":542957,"byte_end":543032,"line_start":1691,"line_end":1691,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543037,"byte_end":543040,"line_start":1692,"line_end":1692,"column_start":5,"column_end":8}},{"value":"/ **Errors** if the new shape doesn't have the same number of elements as the array's current","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543045,"byte_end":543140,"line_start":1693,"line_end":1693,"column_start":5,"column_end":100}},{"value":"/ shape.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543145,"byte_end":543155,"line_start":1694,"line_end":1694,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543160,"byte_end":543163,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543168,"byte_end":543175,"line_start":1696,"line_end":1696,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543180,"byte_end":543203,"line_start":1697,"line_end":1697,"column_start":5,"column_end":28}},{"value":"/ use ndarray::Order;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543208,"byte_end":543231,"line_start":1698,"line_end":1698,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543236,"byte_end":543239,"line_start":1699,"line_end":1699,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543244,"byte_end":543256,"line_start":1700,"line_end":1700,"column_start":5,"column_end":17}},{"value":"/     array![1., 2., 3., 4., 5., 6.].to_shape(((2, 3), Order::RowMajor)).unwrap()","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543261,"byte_end":543344,"line_start":1701,"line_end":1701,"column_start":5,"column_end":88}},{"value":"/     == array![[1., 2., 3.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543349,"byte_end":543380,"line_start":1702,"line_end":1702,"column_start":5,"column_end":36}},{"value":"/               [4., 5., 6.]]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543385,"byte_end":543416,"line_start":1703,"line_end":1703,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543421,"byte_end":543427,"line_start":1704,"line_end":1704,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543432,"byte_end":543435,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543440,"byte_end":543452,"line_start":1706,"line_end":1706,"column_start":5,"column_end":17}},{"value":"/     array![1., 2., 3., 4., 5., 6.].to_shape(((2, 3), Order::ColumnMajor)).unwrap()","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543457,"byte_end":543543,"line_start":1707,"line_end":1707,"column_start":5,"column_end":91}},{"value":"/     == array![[1., 3., 5.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543548,"byte_end":543579,"line_start":1708,"line_end":1708,"column_start":5,"column_end":36}},{"value":"/               [2., 4., 6.]]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543584,"byte_end":543615,"line_start":1709,"line_end":1709,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543620,"byte_end":543626,"line_start":1710,"line_end":1710,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":543631,"byte_end":543638,"line_start":1711,"line_end":1711,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4558},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":546053,"byte_end":546063,"line_start":1779,"line_end":1779,"column_start":12,"column_end":22},"name":"into_shape","qualname":"<ArrayBase<S, D>>::into_shape","value":"pub fn into_shape<E>(Self, E) -> Result<ArrayBase<S, E::Dim>, ShapeError>\nwhere E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" Transform the array into `shape`; any shape with the same number of\n elements is accepted, but the source array or view must be in standard\n or column-major (Fortran) layout.","sig":null,"attributes":[{"value":"/ Transform the array into `shape`; any shape with the same number of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545457,"byte_end":545528,"line_start":1763,"line_end":1763,"column_start":5,"column_end":76}},{"value":"/ elements is accepted, but the source array or view must be in standard","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545533,"byte_end":545607,"line_start":1764,"line_end":1764,"column_start":5,"column_end":79}},{"value":"/ or column-major (Fortran) layout.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545612,"byte_end":545649,"line_start":1765,"line_end":1765,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545654,"byte_end":545657,"line_start":1766,"line_end":1766,"column_start":5,"column_end":8}},{"value":"/ **Errors** if the shapes don't have the same number of elements.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545662,"byte_end":545734,"line_start":1767,"line_end":1767,"column_start":5,"column_end":77}},{"value":"/ **Errors** if the input array is not c- or f-contiguous.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545739,"byte_end":545799,"line_start":1768,"line_end":1768,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545804,"byte_end":545807,"line_start":1769,"line_end":1769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545812,"byte_end":545819,"line_start":1770,"line_end":1770,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, aview2};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545824,"byte_end":545858,"line_start":1771,"line_end":1771,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545863,"byte_end":545866,"line_start":1772,"line_end":1772,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545871,"byte_end":545883,"line_start":1773,"line_end":1773,"column_start":5,"column_end":17}},{"value":"/     aview1(&[1., 2., 3., 4.]).into_shape((2, 2)).unwrap()","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545888,"byte_end":545949,"line_start":1774,"line_end":1774,"column_start":5,"column_end":66}},{"value":"/     == aview2(&[[1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545954,"byte_end":545983,"line_start":1775,"line_end":1775,"column_start":5,"column_end":34}},{"value":"/                 [3., 4.]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":545988,"byte_end":546018,"line_start":1776,"line_end":1776,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":546023,"byte_end":546029,"line_start":1777,"line_end":1777,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":546034,"byte_end":546041,"line_start":1778,"line_end":1778,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4560},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547576,"byte_end":547583,"line_start":1820,"line_end":1820,"column_start":12,"column_end":19},"name":"reshape","qualname":"<ArrayBase<S, D>>::reshape","value":"pub fn reshape<E>(&Self, E) -> ArrayBase<S, E::Dim> where S: DataShared +\nDataOwned, A: Clone, E: IntoDimension","parent":null,"children":[],"decl_id":null,"docs":" *Note: Reshape is for `ArcArray` only. Use `.into_shape()` for\n other arrays and array views.*","sig":null,"attributes":[{"value":"/ *Note: Reshape is for `ArcArray` only. Use `.into_shape()` for","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":546943,"byte_end":547009,"line_start":1800,"line_end":1800,"column_start":5,"column_end":71}},{"value":"/ other arrays and array views.*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547014,"byte_end":547048,"line_start":1801,"line_end":1801,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547053,"byte_end":547056,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ Transform the array into `shape`; any shape with the same number of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547061,"byte_end":547132,"line_start":1803,"line_end":1803,"column_start":5,"column_end":76}},{"value":"/ elements is accepted.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547137,"byte_end":547162,"line_start":1804,"line_end":1804,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547167,"byte_end":547170,"line_start":1805,"line_end":1805,"column_start":5,"column_end":8}},{"value":"/ May clone all elements if needed to arrange elements in standard","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547175,"byte_end":547243,"line_start":1806,"line_end":1806,"column_start":5,"column_end":73}},{"value":"/ layout (and break sharing).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547248,"byte_end":547279,"line_start":1807,"line_end":1807,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547284,"byte_end":547287,"line_start":1808,"line_end":1808,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes are incompatible.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547292,"byte_end":547334,"line_start":1809,"line_end":1809,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547339,"byte_end":547342,"line_start":1810,"line_end":1810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547347,"byte_end":547354,"line_start":1811,"line_end":1811,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{rcarr1, rcarr2};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547359,"byte_end":547393,"line_start":1812,"line_end":1812,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547398,"byte_end":547401,"line_start":1813,"line_end":1813,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547406,"byte_end":547418,"line_start":1814,"line_end":1814,"column_start":5,"column_end":17}},{"value":"/     rcarr1(&[1., 2., 3., 4.]).reshape((2, 2))","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547423,"byte_end":547472,"line_start":1815,"line_end":1815,"column_start":5,"column_end":54}},{"value":"/     == rcarr2(&[[1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547477,"byte_end":547506,"line_start":1816,"line_end":1816,"column_start":5,"column_end":34}},{"value":"/                 [3., 4.]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547511,"byte_end":547541,"line_start":1817,"line_end":1817,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547546,"byte_end":547552,"line_start":1818,"line_end":1818,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":547557,"byte_end":547564,"line_start":1819,"line_end":1819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4562},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":548843,"byte_end":548851,"line_start":1856,"line_end":1856,"column_start":12,"column_end":20},"name":"into_dyn","qualname":"<ArrayBase<S, D>>::into_dyn","value":"pub fn into_dyn(Self) -> ArrayBase<S, IxDyn>","parent":null,"children":[],"decl_id":null,"docs":" Convert any array or array view to a dynamic dimensional array or\n array view (respectively).","sig":null,"attributes":[{"value":"/ Convert any array or array view to a dynamic dimensional array or","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":548541,"byte_end":548610,"line_start":1847,"line_end":1847,"column_start":5,"column_end":74}},{"value":"/ array view (respectively).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":548615,"byte_end":548645,"line_start":1848,"line_end":1848,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":548650,"byte_end":548653,"line_start":1849,"line_end":1849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":548658,"byte_end":548665,"line_start":1850,"line_end":1850,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, ArrayD};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":548670,"byte_end":548702,"line_start":1851,"line_end":1851,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":548707,"byte_end":548710,"line_start":1852,"line_end":1852,"column_start":5,"column_end":8}},{"value":"/ let array: ArrayD<i32> = arr2(&[[1, 2],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":548715,"byte_end":548758,"line_start":1853,"line_end":1853,"column_start":5,"column_end":48}},{"value":"/                                 [3, 4]]).into_dyn();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":548763,"byte_end":548819,"line_start":1854,"line_end":1854,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":548824,"byte_end":548831,"line_start":1855,"line_end":1855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4563},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549761,"byte_end":549780,"line_start":1880,"line_end":1880,"column_start":12,"column_end":31},"name":"into_dimensionality","qualname":"<ArrayBase<S, D>>::into_dimensionality","value":"pub fn into_dimensionality<D2>(Self) -> Result<ArrayBase<S, D2>, ShapeError>\nwhere D2: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Convert an array or array view to another with the same type, but different dimensionality\n type. Errors if the dimensions don't agree (the number of axes must match).","sig":null,"attributes":[{"value":"/ Convert an array or array view to another with the same type, but different dimensionality","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549103,"byte_end":549197,"line_start":1864,"line_end":1864,"column_start":5,"column_end":99}},{"value":"/ type. Errors if the dimensions don't agree (the number of axes must match).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549202,"byte_end":549281,"line_start":1865,"line_end":1865,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549286,"byte_end":549289,"line_start":1866,"line_end":1866,"column_start":5,"column_end":8}},{"value":"/ Note that conversion to a dynamic dimensional array will never fail (and is equivalent to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549294,"byte_end":549387,"line_start":1867,"line_end":1867,"column_start":5,"column_end":98}},{"value":"/ the `into_dyn` method).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549392,"byte_end":549419,"line_start":1868,"line_end":1868,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549424,"byte_end":549427,"line_start":1869,"line_end":1869,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549432,"byte_end":549439,"line_start":1870,"line_end":1870,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{ArrayD, Ix2, IxDyn};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549444,"byte_end":549482,"line_start":1871,"line_end":1871,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549487,"byte_end":549490,"line_start":1872,"line_end":1872,"column_start":5,"column_end":8}},{"value":"/ // Create a dynamic dimensionality array and convert it to an Array2","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549495,"byte_end":549567,"line_start":1873,"line_end":1873,"column_start":5,"column_end":77}},{"value":"/ // (Ix2 dimension type).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549572,"byte_end":549600,"line_start":1874,"line_end":1874,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549605,"byte_end":549608,"line_start":1875,"line_end":1875,"column_start":5,"column_end":8}},{"value":"/ let array = ArrayD::<f64>::zeros(IxDyn(&[10, 10]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549613,"byte_end":549668,"line_start":1876,"line_end":1876,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549673,"byte_end":549676,"line_start":1877,"line_end":1877,"column_start":5,"column_end":8}},{"value":"/ assert!(array.into_dimensionality::<Ix2>().is_ok());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549681,"byte_end":549737,"line_start":1878,"line_end":1878,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":549742,"byte_end":549749,"line_start":1879,"line_end":1879,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551815,"byte_end":551824,"line_start":1932,"line_end":1932,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<ArrayBase<S, D>>::broadcast","value":"pub fn broadcast<E>(&Self, E) -> Option<ArrayView<, A, E::Dim>> where\nE: IntoDimension, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Act like a larger size and/or shape array by *broadcasting*\n into a larger shape, if possible.","sig":null,"attributes":[{"value":"/ Act like a larger size and/or shape array by *broadcasting*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":550761,"byte_end":550824,"line_start":1903,"line_end":1903,"column_start":5,"column_end":68}},{"value":"/ into a larger shape, if possible.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":550829,"byte_end":550866,"line_start":1904,"line_end":1904,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":550871,"byte_end":550874,"line_start":1905,"line_end":1905,"column_start":5,"column_end":8}},{"value":"/ Return `None` if shapes can not be broadcast together.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":550879,"byte_end":550937,"line_start":1906,"line_end":1906,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":550942,"byte_end":550945,"line_start":1907,"line_end":1907,"column_start":5,"column_end":8}},{"value":"/ ***Background***","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":550950,"byte_end":550970,"line_start":1908,"line_end":1908,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":550975,"byte_end":550978,"line_start":1909,"line_end":1909,"column_start":5,"column_end":8}},{"value":"/  * Two axes are compatible if they are equal, or one of them is 1.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":550983,"byte_end":551053,"line_start":1910,"line_end":1910,"column_start":5,"column_end":75}},{"value":"/  * In this instance, only the axes of the smaller side (self) can be 1.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551058,"byte_end":551133,"line_start":1911,"line_end":1911,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551138,"byte_end":551141,"line_start":1912,"line_end":1912,"column_start":5,"column_end":8}},{"value":"/ Compare axes beginning with the *last* axis of each shape.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551146,"byte_end":551208,"line_start":1913,"line_end":1913,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551213,"byte_end":551216,"line_start":1914,"line_end":1914,"column_start":5,"column_end":8}},{"value":"/ For example (1, 2, 4) can be broadcast into (7, 6, 2, 4)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551221,"byte_end":551281,"line_start":1915,"line_end":1915,"column_start":5,"column_end":65}},{"value":"/ because its axes are either equal or 1 (or missing);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551286,"byte_end":551342,"line_start":1916,"line_end":1916,"column_start":5,"column_end":61}},{"value":"/ while (2, 2) can *not* be broadcast into (2, 4).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551347,"byte_end":551399,"line_start":1917,"line_end":1917,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551404,"byte_end":551407,"line_start":1918,"line_end":1918,"column_start":5,"column_end":8}},{"value":"/ The implementation creates a view with strides set to zero for the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551412,"byte_end":551482,"line_start":1919,"line_end":1919,"column_start":5,"column_end":75}},{"value":"/ axes that are to be repeated.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551487,"byte_end":551520,"line_start":1920,"line_end":1920,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551525,"byte_end":551528,"line_start":1921,"line_end":1921,"column_start":5,"column_end":8}},{"value":"/ The broadcasting documentation for Numpy has more information.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551533,"byte_end":551599,"line_start":1922,"line_end":1922,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551604,"byte_end":551607,"line_start":1923,"line_end":1923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551612,"byte_end":551619,"line_start":1924,"line_end":1924,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, aview2};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551624,"byte_end":551658,"line_start":1925,"line_end":1925,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551663,"byte_end":551666,"line_start":1926,"line_end":1926,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551671,"byte_end":551683,"line_start":1927,"line_end":1927,"column_start":5,"column_end":17}},{"value":"/     aview1(&[1., 0.]).broadcast((10, 2)).unwrap()","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551688,"byte_end":551741,"line_start":1928,"line_end":1928,"column_start":5,"column_end":58}},{"value":"/     == aview2(&[[1., 0.]; 10])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551746,"byte_end":551780,"line_start":1929,"line_end":1929,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551785,"byte_end":551791,"line_start":1930,"line_end":1930,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":551796,"byte_end":551803,"line_start":1931,"line_end":1931,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4576},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556107,"byte_end":556116,"line_start":2044,"line_end":2044,"column_start":12,"column_end":21},"name":"swap_axes","qualname":"<ArrayBase<S, D>>::swap_axes","value":"pub fn swap_axes(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swap axes `ax` and `bx`.","sig":null,"attributes":[{"value":"/ Swap axes `ax` and `bx`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555694,"byte_end":555722,"line_start":2028,"line_end":2028,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555727,"byte_end":555730,"line_start":2029,"line_end":2029,"column_start":5,"column_end":8}},{"value":"/ This does not move any data, it just adjusts the array’s dimensions","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555735,"byte_end":555808,"line_start":2030,"line_end":2030,"column_start":5,"column_end":76}},{"value":"/ and strides.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555813,"byte_end":555829,"line_start":2031,"line_end":2031,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555834,"byte_end":555837,"line_start":2032,"line_end":2032,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axes are out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555842,"byte_end":555887,"line_start":2033,"line_end":2033,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555892,"byte_end":555895,"line_start":2034,"line_end":2034,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555900,"byte_end":555907,"line_start":2035,"line_end":2035,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555912,"byte_end":555934,"line_start":2036,"line_end":2036,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555939,"byte_end":555942,"line_start":2037,"line_end":2037,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1., 2., 3.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555947,"byte_end":555985,"line_start":2038,"line_end":2038,"column_start":5,"column_end":43}},{"value":"/ a.swap_axes(0, 1);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":555990,"byte_end":556012,"line_start":2039,"line_end":2039,"column_start":5,"column_end":27}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556017,"byte_end":556029,"line_start":2040,"line_end":2040,"column_start":5,"column_end":17}},{"value":"/     a == arr2(&[[1.], [2.], [3.]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556034,"byte_end":556072,"line_start":2041,"line_end":2041,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556077,"byte_end":556083,"line_start":2042,"line_end":2042,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556088,"byte_end":556095,"line_start":2043,"line_end":2043,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4577},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":557000,"byte_end":557013,"line_start":2071,"line_end":2071,"column_start":12,"column_end":25},"name":"permuted_axes","qualname":"<ArrayBase<S, D>>::permuted_axes","value":"pub fn permuted_axes<T>(Self, T) -> ArrayBase<S, D> where T: IntoDimension<Dim\n= D>","parent":null,"children":[],"decl_id":null,"docs":" Permute the axes.","sig":null,"attributes":[{"value":"/ Permute the axes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556253,"byte_end":556274,"line_start":2049,"line_end":2049,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556279,"byte_end":556282,"line_start":2050,"line_end":2050,"column_start":5,"column_end":8}},{"value":"/ This does not move any data, it just adjusts the array’s dimensions","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556287,"byte_end":556360,"line_start":2051,"line_end":2051,"column_start":5,"column_end":76}},{"value":"/ and strides.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556365,"byte_end":556381,"line_start":2052,"line_end":2052,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556386,"byte_end":556389,"line_start":2053,"line_end":2053,"column_start":5,"column_end":8}},{"value":"/ *i* in the *j*-th place in the axes sequence means `self`'s *i*-th axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556394,"byte_end":556469,"line_start":2054,"line_end":2054,"column_start":5,"column_end":80}},{"value":"/ becomes `self.permuted_axes()`'s *j*-th axis","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556474,"byte_end":556522,"line_start":2055,"line_end":2055,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556527,"byte_end":556530,"line_start":2056,"line_end":2056,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the axes are out of bounds, if an axis is missing,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556535,"byte_end":556610,"line_start":2057,"line_end":2057,"column_start":5,"column_end":80}},{"value":"/ or if an axis is repeated more than once.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556615,"byte_end":556660,"line_start":2058,"line_end":2058,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556665,"byte_end":556668,"line_start":2059,"line_end":2059,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556673,"byte_end":556687,"line_start":2060,"line_end":2060,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556692,"byte_end":556695,"line_start":2061,"line_end":2061,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556700,"byte_end":556707,"line_start":2062,"line_end":2062,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr2, Array3};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556712,"byte_end":556744,"line_start":2063,"line_end":2063,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556749,"byte_end":556752,"line_start":2064,"line_end":2064,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[0, 1], [2, 3]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556757,"byte_end":556793,"line_start":2065,"line_end":2065,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.view().permuted_axes([1, 0]), a.t());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556798,"byte_end":556852,"line_start":2066,"line_end":2066,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556857,"byte_end":556860,"line_start":2067,"line_end":2067,"column_start":5,"column_end":8}},{"value":"/ let b = Array3::<u8>::zeros((1, 2, 3));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556865,"byte_end":556908,"line_start":2068,"line_end":2068,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(b.permuted_axes([1, 0, 2]).shape(), &[2, 1, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556913,"byte_end":556976,"line_start":2069,"line_end":2069,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":556981,"byte_end":556988,"line_start":2070,"line_end":2070,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4579},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558300,"byte_end":558313,"line_start":2105,"line_end":2105,"column_start":12,"column_end":25},"name":"reversed_axes","qualname":"<ArrayBase<S, D>>::reversed_axes","value":"pub fn reversed_axes(Self) -> ArrayBase<S, D>","parent":null,"children":[],"decl_id":null,"docs":" Transpose the array by reversing axes.","sig":null,"attributes":[{"value":"/ Transpose the array by reversing axes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558121,"byte_end":558163,"line_start":2101,"line_end":2101,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558168,"byte_end":558171,"line_start":2102,"line_end":2102,"column_start":5,"column_end":8}},{"value":"/ Transposition reverses the order of the axes (dimensions and strides)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558176,"byte_end":558249,"line_start":2103,"line_end":2103,"column_start":5,"column_end":78}},{"value":"/ while retaining the same data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558254,"byte_end":558288,"line_start":2104,"line_end":2104,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4580},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558667,"byte_end":558668,"line_start":2116,"line_end":2116,"column_start":12,"column_end":13},"name":"t","qualname":"<ArrayBase<S, D>>::t","value":"pub fn t(&Self) -> ArrayView<, A, D> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return a transposed view of the array.","sig":null,"attributes":[{"value":"/ Return a transposed view of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558453,"byte_end":558495,"line_start":2111,"line_end":2111,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558500,"byte_end":558503,"line_start":2112,"line_end":2112,"column_start":5,"column_end":8}},{"value":"/ This is a shorthand for `self.view().reversed_axes()`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558508,"byte_end":558566,"line_start":2113,"line_end":2113,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558571,"byte_end":558574,"line_start":2114,"line_end":2114,"column_start":5,"column_end":8}},{"value":"/ See also the more general methods `.reversed_axes()` and `.swap_axes()`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558579,"byte_end":558655,"line_start":2115,"line_end":2115,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4581},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558854,"byte_end":558858,"line_start":2124,"line_end":2124,"column_start":12,"column_end":16},"name":"axes","qualname":"<ArrayBase<S, D>>::axes","value":"pub fn axes(&Self) -> Axes<, D>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the length and stride of each axis.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the length and stride of each axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":558779,"byte_end":558842,"line_start":2123,"line_end":2123,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4582},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559230,"byte_end":559245,"line_start":2137,"line_end":2137,"column_start":12,"column_end":27},"name":"max_stride_axis","qualname":"<ArrayBase<S, D>>::max_stride_axis","value":"pub fn max_stride_axis(&Self) -> Axis","parent":null,"children":[],"decl_id":null,"docs":" Return the axis with the greatest stride (by absolute value),\n preferring axes with len > 1.\n","sig":null,"attributes":[{"value":"/ Return the axis with the greatest stride (by absolute value),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559115,"byte_end":559180,"line_start":2135,"line_end":2135,"column_start":5,"column_end":70}},{"value":"/ preferring axes with len > 1.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559185,"byte_end":559218,"line_start":2136,"line_end":2136,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4583},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559426,"byte_end":559437,"line_start":2144,"line_end":2144,"column_start":12,"column_end":23},"name":"invert_axis","qualname":"<ArrayBase<S, D>>::invert_axis","value":"pub fn invert_axis(&mut Self, Axis)","parent":null,"children":[],"decl_id":null,"docs":" Reverse the stride of `axis`.","sig":null,"attributes":[{"value":"/ Reverse the stride of `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559322,"byte_end":559355,"line_start":2141,"line_end":2141,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559360,"byte_end":559363,"line_start":2142,"line_end":2142,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559368,"byte_end":559414,"line_start":2143,"line_end":2143,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4584},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561227,"byte_end":561237,"line_start":2190,"line_end":2190,"column_start":12,"column_end":22},"name":"merge_axes","qualname":"<ArrayBase<S, D>>::merge_axes","value":"pub fn merge_axes(&mut Self, Axis, Axis) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If possible, merge in the axis `take` to `into`.","sig":null,"attributes":[{"value":"/ If possible, merge in the axis `take` to `into`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559760,"byte_end":559812,"line_start":2155,"line_end":2155,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559817,"byte_end":559820,"line_start":2156,"line_end":2156,"column_start":5,"column_end":8}},{"value":"/ Returns `true` iff the axes are now merged.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559825,"byte_end":559872,"line_start":2157,"line_end":2157,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559877,"byte_end":559880,"line_start":2158,"line_end":2158,"column_start":5,"column_end":8}},{"value":"/ This method merges the axes if movement along the two original axes","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559885,"byte_end":559956,"line_start":2159,"line_end":2159,"column_start":5,"column_end":76}},{"value":"/ (moving fastest along the `into` axis) can be equivalently represented","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":559961,"byte_end":560035,"line_start":2160,"line_end":2160,"column_start":5,"column_end":79}},{"value":"/ as movement along one (merged) axis. Merging the axes preserves this","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560040,"byte_end":560112,"line_start":2161,"line_end":2161,"column_start":5,"column_end":77}},{"value":"/ order in the merged axis. If `take` and `into` are the same axis, then","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560117,"byte_end":560191,"line_start":2162,"line_end":2162,"column_start":5,"column_end":79}},{"value":"/ the axis is \"merged\" if its length is ≤ 1.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560196,"byte_end":560244,"line_start":2163,"line_end":2163,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560249,"byte_end":560252,"line_start":2164,"line_end":2164,"column_start":5,"column_end":8}},{"value":"/ If the return value is `true`, then the following hold:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560257,"byte_end":560316,"line_start":2165,"line_end":2165,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560321,"byte_end":560324,"line_start":2166,"line_end":2166,"column_start":5,"column_end":8}},{"value":"/ * The new length of the `into` axis is the product of the original","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560329,"byte_end":560399,"line_start":2167,"line_end":2167,"column_start":5,"column_end":75}},{"value":"/   lengths of the two axes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560404,"byte_end":560434,"line_start":2168,"line_end":2168,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560439,"byte_end":560442,"line_start":2169,"line_end":2169,"column_start":5,"column_end":8}},{"value":"/ * The new length of the `take` axis is 0 if the product of the original","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560447,"byte_end":560522,"line_start":2170,"line_end":2170,"column_start":5,"column_end":80}},{"value":"/   lengths of the two axes is 0, and 1 otherwise.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560527,"byte_end":560579,"line_start":2171,"line_end":2171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560584,"byte_end":560587,"line_start":2172,"line_end":2172,"column_start":5,"column_end":8}},{"value":"/ If the return value is `false`, then merging is not possible, and the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560592,"byte_end":560665,"line_start":2173,"line_end":2173,"column_start":5,"column_end":78}},{"value":"/ original shape and strides have been preserved.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560670,"byte_end":560721,"line_start":2174,"line_end":2174,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560726,"byte_end":560729,"line_start":2175,"line_end":2175,"column_start":5,"column_end":8}},{"value":"/ Note that the ordering constraint means that if it's possible to merge","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560734,"byte_end":560808,"line_start":2176,"line_end":2176,"column_start":5,"column_end":79}},{"value":"/ `take` into `into`, it's usually not possible to merge `into` into","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560813,"byte_end":560883,"line_start":2177,"line_end":2177,"column_start":5,"column_end":75}},{"value":"/ `take`, and vice versa.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560888,"byte_end":560915,"line_start":2178,"line_end":2178,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560920,"byte_end":560923,"line_start":2179,"line_end":2179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560928,"byte_end":560935,"line_start":2180,"line_end":2180,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560940,"byte_end":560964,"line_start":2181,"line_end":2181,"column_start":5,"column_end":29}},{"value":"/ use ndarray::Axis;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560969,"byte_end":560991,"line_start":2182,"line_end":2182,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":560996,"byte_end":560999,"line_start":2183,"line_end":2183,"column_start":5,"column_end":8}},{"value":"/ let mut a = Array3::<f64>::zeros((2, 3, 4));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561004,"byte_end":561052,"line_start":2184,"line_end":2184,"column_start":5,"column_end":53}},{"value":"/ assert!(a.merge_axes(Axis(1), Axis(2)));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561057,"byte_end":561101,"line_start":2185,"line_end":2185,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.shape(), &[2, 1, 12]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561106,"byte_end":561145,"line_start":2186,"line_end":2186,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561150,"byte_end":561157,"line_start":2187,"line_end":2187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561162,"byte_end":561165,"line_start":2188,"line_end":2188,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if an axis is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561170,"byte_end":561215,"line_start":2189,"line_end":2189,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4585},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562115,"byte_end":562126,"line_start":2215,"line_end":2215,"column_start":12,"column_end":23},"name":"insert_axis","qualname":"<ArrayBase<S, D>>::insert_axis","value":"pub fn insert_axis(Self, Axis) -> ArrayBase<S, D::Larger>","parent":null,"children":[],"decl_id":null,"docs":" Insert new array axis at `axis` and return the result.","sig":null,"attributes":[{"value":"/ Insert new array axis at `axis` and return the result.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561359,"byte_end":561417,"line_start":2194,"line_end":2194,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561422,"byte_end":561425,"line_start":2195,"line_end":2195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561430,"byte_end":561437,"line_start":2196,"line_end":2196,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Array3, Axis, arr1, arr2};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561442,"byte_end":561486,"line_start":2197,"line_end":2197,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561491,"byte_end":561494,"line_start":2198,"line_end":2198,"column_start":5,"column_end":8}},{"value":"/ // Convert a 1-D array into a row vector (2-D).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561499,"byte_end":561550,"line_start":2199,"line_end":2199,"column_start":5,"column_end":56}},{"value":"/ let a = arr1(&[1, 2, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561555,"byte_end":561584,"line_start":2200,"line_end":2200,"column_start":5,"column_end":34}},{"value":"/ let row = a.insert_axis(Axis(0));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561589,"byte_end":561626,"line_start":2201,"line_end":2201,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(row, arr2(&[[1, 2, 3]]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561631,"byte_end":561671,"line_start":2202,"line_end":2202,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561676,"byte_end":561679,"line_start":2203,"line_end":2203,"column_start":5,"column_end":8}},{"value":"/ // Convert a 1-D array into a column vector (2-D).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561684,"byte_end":561738,"line_start":2204,"line_end":2204,"column_start":5,"column_end":59}},{"value":"/ let b = arr1(&[1, 2, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561743,"byte_end":561772,"line_start":2205,"line_end":2205,"column_start":5,"column_end":34}},{"value":"/ let col = b.insert_axis(Axis(1));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561777,"byte_end":561814,"line_start":2206,"line_end":2206,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(col, arr2(&[[1], [2], [3]]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561819,"byte_end":561863,"line_start":2207,"line_end":2207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561868,"byte_end":561871,"line_start":2208,"line_end":2208,"column_start":5,"column_end":8}},{"value":"/ // The new axis always has length 1.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561876,"byte_end":561916,"line_start":2209,"line_end":2209,"column_start":5,"column_end":45}},{"value":"/ let b = Array3::<f64>::zeros((3, 4, 5));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561921,"byte_end":561965,"line_start":2210,"line_end":2210,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(b.insert_axis(Axis(2)).shape(), &[3, 4, 1, 5]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":561970,"byte_end":562032,"line_start":2211,"line_end":2211,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562037,"byte_end":562044,"line_start":2212,"line_end":2212,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562049,"byte_end":562052,"line_start":2213,"line_end":2213,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the axis is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562057,"byte_end":562103,"line_start":2214,"line_end":2214,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4586},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562775,"byte_end":562786,"line_start":2231,"line_end":2231,"column_start":12,"column_end":23},"name":"remove_axis","qualname":"<ArrayBase<S, D>>::remove_axis","value":"pub fn remove_axis(Self, Axis) -> ArrayBase<S, D::Smaller> where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Remove array axis `axis` and return the result.","sig":null,"attributes":[{"value":"/ Remove array axis `axis` and return the result.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562493,"byte_end":562544,"line_start":2225,"line_end":2225,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562549,"byte_end":562552,"line_start":2226,"line_end":2226,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `.index_axis_move(axis, 0)` and makes most sense to use if the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562557,"byte_end":562645,"line_start":2227,"line_end":2227,"column_start":5,"column_end":93}},{"value":"/ axis to remove is of length 1.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562650,"byte_end":562684,"line_start":2228,"line_end":2228,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562689,"byte_end":562692,"line_start":2229,"line_end":2229,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axis is out of bounds or its length is zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":562697,"byte_end":562763,"line_start":2230,"line_end":2230,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4588},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563253,"byte_end":563259,"line_start":2247,"line_end":2247,"column_start":12,"column_end":18},"name":"assign","qualname":"<ArrayBase<S, D>>::assign","value":"pub fn assign<E: Dimension, S2>(&mut Self, &ArrayBase<S2, E>) where\nS: DataMut, A: Clone, S2: Data<Elem = A>","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment to `self` from `rhs`.","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment to `self` from `rhs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563037,"byte_end":563095,"line_start":2242,"line_end":2242,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563100,"byte_end":563103,"line_start":2243,"line_end":2243,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563108,"byte_end":563180,"line_start":2244,"line_end":2244,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563185,"byte_end":563188,"line_start":2245,"line_end":2245,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563193,"byte_end":563241,"line_start":2246,"line_end":2246,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4592},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563771,"byte_end":563780,"line_start":2262,"line_end":2262,"column_start":12,"column_end":21},"name":"assign_to","qualname":"<ArrayBase<S, D>>::assign_to","value":"pub fn assign_to<P>(&Self, P) where S: Data, P: IntoNdProducer<Dim = D>,\nP::Item: AssignElem<A>, A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment of values cloned from `self` into array or producer `to`.","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment of values cloned from `self` into array or producer `to`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563461,"byte_end":563555,"line_start":2256,"line_end":2256,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563560,"byte_end":563563,"line_start":2257,"line_end":2257,"column_start":5,"column_end":8}},{"value":"/ The destination `to` can be another array or a producer of assignable elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563568,"byte_end":563651,"line_start":2258,"line_end":2258,"column_start":5,"column_end":88}},{"value":"/ [`AssignElem`] determines how elements are assigned.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563656,"byte_end":563712,"line_start":2259,"line_end":2259,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563717,"byte_end":563720,"line_start":2260,"line_end":2260,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes disagree.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563725,"byte_end":563759,"line_start":2261,"line_end":2261,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4594},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":564072,"byte_end":564076,"line_start":2274,"line_end":2274,"column_start":12,"column_end":16},"name":"fill","qualname":"<ArrayBase<S, D>>::fill","value":"pub fn fill(&mut Self, A) where S: DataMut, A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Perform an elementwise assigment to `self` from element `x`.\n","sig":null,"attributes":[{"value":"/ Perform an elementwise assigment to `self` from element `x`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":563996,"byte_end":564060,"line_start":2273,"line_end":2273,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4612},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566199,"byte_end":566211,"line_start":2341,"line_end":2341,"column_start":12,"column_end":24},"name":"zip_mut_with","qualname":"<ArrayBase<S, D>>::zip_mut_with","value":"pub fn zip_mut_with<B, S2, E, F>(&mut Self, &ArrayBase<S2, E>, F) where\nS: DataMut, S2: Data<Elem = B>, E: Dimension, F: FnMut(&mut A, &B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Traverse two arrays in unspecified order, in lock step,\n calling the closure `f` on each element pair.","sig":null,"attributes":[{"value":"/ Traverse two arrays in unspecified order, in lock step,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":565914,"byte_end":565973,"line_start":2334,"line_end":2334,"column_start":5,"column_end":64}},{"value":"/ calling the closure `f` on each element pair.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":565978,"byte_end":566027,"line_start":2335,"line_end":2335,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566032,"byte_end":566035,"line_start":2336,"line_end":2336,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566040,"byte_end":566112,"line_start":2337,"line_end":2337,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566117,"byte_end":566120,"line_start":2338,"line_end":2338,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566125,"byte_end":566173,"line_start":2339,"line_end":2339,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566178,"byte_end":566187,"line_start":2340,"line_end":2340,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4617},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566973,"byte_end":566977,"line_start":2363,"line_end":2363,"column_start":12,"column_end":16},"name":"fold","qualname":"<ArrayBase<S, D>>::fold","value":"pub fn fold<'a, F, B>(&'a Self, B, F) -> B where F: FnMut(B, &'a A) -> B,\nA: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Traverse the array elements and apply a fold,\n returning the resulting value.","sig":null,"attributes":[{"value":"/ Traverse the array elements and apply a fold,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566816,"byte_end":566865,"line_start":2359,"line_end":2359,"column_start":5,"column_end":54}},{"value":"/ returning the resulting value.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566870,"byte_end":566904,"line_start":2360,"line_end":2360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566909,"byte_end":566912,"line_start":2361,"line_end":2361,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":566917,"byte_end":566961,"line_start":2362,"line_end":2362,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4621},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567886,"byte_end":567889,"line_start":2396,"line_end":2396,"column_start":12,"column_end":15},"name":"map","qualname":"<ArrayBase<S, D>>::map","value":"pub fn map<'a, B, F>(&'a Self, F) -> Array<B, D> where F: FnMut(&'a A) -> B,\nA: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by reference on each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` by reference on each element and create a new array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567388,"byte_end":567452,"line_start":2378,"line_end":2378,"column_start":5,"column_end":69}},{"value":"/ with the new values.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567457,"byte_end":567481,"line_start":2379,"line_end":2379,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567486,"byte_end":567489,"line_start":2380,"line_end":2380,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567494,"byte_end":567538,"line_start":2381,"line_end":2381,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567543,"byte_end":567546,"line_start":2382,"line_end":2382,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567551,"byte_end":567601,"line_start":2383,"line_end":2383,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567606,"byte_end":567609,"line_start":2384,"line_end":2384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567614,"byte_end":567621,"line_start":2385,"line_end":2385,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567626,"byte_end":567648,"line_start":2386,"line_end":2386,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567653,"byte_end":567656,"line_start":2387,"line_end":2387,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[ 0., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567661,"byte_end":567690,"line_start":2388,"line_end":2388,"column_start":5,"column_end":34}},{"value":"/                [-1., 2.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567695,"byte_end":567726,"line_start":2389,"line_end":2389,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567731,"byte_end":567743,"line_start":2390,"line_end":2390,"column_start":5,"column_end":17}},{"value":"/     a.map(|x| *x >= 1.0)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567748,"byte_end":567776,"line_start":2391,"line_end":2391,"column_start":5,"column_end":33}},{"value":"/     == arr2(&[[false, true],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567781,"byte_end":567813,"line_start":2392,"line_end":2392,"column_start":5,"column_end":37}},{"value":"/               [false, true]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567818,"byte_end":567851,"line_start":2393,"line_end":2393,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567856,"byte_end":567862,"line_start":2394,"line_end":2394,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":567867,"byte_end":567874,"line_start":2395,"line_end":2395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4625},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":568639,"byte_end":568646,"line_start":2419,"line_end":2419,"column_start":12,"column_end":19},"name":"map_mut","qualname":"<ArrayBase<S, D>>::map_mut","value":"pub fn map_mut<'a, B, F>(&'a mut Self, F) -> Array<B, D> where\nF: FnMut(&'a mut A) -> B, A: 'a, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Call `f` on a mutable reference of each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` on a mutable reference of each element and create a new array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":568404,"byte_end":568478,"line_start":2413,"line_end":2413,"column_start":5,"column_end":79}},{"value":"/ with the new values.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":568483,"byte_end":568507,"line_start":2414,"line_end":2414,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":568512,"byte_end":568515,"line_start":2415,"line_end":2415,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":568520,"byte_end":568564,"line_start":2416,"line_end":2416,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":568569,"byte_end":568572,"line_start":2417,"line_end":2417,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":568577,"byte_end":568627,"line_start":2418,"line_end":2418,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4629},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569713,"byte_end":569717,"line_start":2453,"line_end":2453,"column_start":12,"column_end":16},"name":"mapv","qualname":"<ArrayBase<S, D>>::mapv","value":"pub fn mapv<B, F>(&Self, F) -> Array<B, D> where F: FnMut(A) -> B, A: Clone,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by **v**alue on each element and create a new array\n with the new values.","sig":null,"attributes":[{"value":"/ Call `f` by **v**alue on each element and create a new array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569224,"byte_end":569288,"line_start":2436,"line_end":2436,"column_start":5,"column_end":69}},{"value":"/ with the new values.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569293,"byte_end":569317,"line_start":2437,"line_end":2437,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569322,"byte_end":569325,"line_start":2438,"line_end":2438,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569330,"byte_end":569374,"line_start":2439,"line_end":2439,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569379,"byte_end":569382,"line_start":2440,"line_end":2440,"column_start":5,"column_end":8}},{"value":"/ Return an array with the same shape as `self`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569387,"byte_end":569437,"line_start":2441,"line_end":2441,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569442,"byte_end":569445,"line_start":2442,"line_end":2442,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569450,"byte_end":569457,"line_start":2443,"line_end":2443,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569462,"byte_end":569484,"line_start":2444,"line_end":2444,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569489,"byte_end":569492,"line_start":2445,"line_end":2445,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[ 0., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569497,"byte_end":569526,"line_start":2446,"line_end":2446,"column_start":5,"column_end":34}},{"value":"/                [-1., 2.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569531,"byte_end":569562,"line_start":2447,"line_end":2447,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569567,"byte_end":569579,"line_start":2448,"line_end":2448,"column_start":5,"column_end":17}},{"value":"/     a.mapv(f32::abs) == arr2(&[[0., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569584,"byte_end":569628,"line_start":2449,"line_end":2449,"column_start":5,"column_end":49}},{"value":"/                                [1., 2.]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569633,"byte_end":569678,"line_start":2450,"line_end":2450,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569683,"byte_end":569689,"line_start":2451,"line_end":2451,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569694,"byte_end":569701,"line_start":2452,"line_end":2452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4633},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":570055,"byte_end":570064,"line_start":2466,"line_end":2466,"column_start":12,"column_end":21},"name":"mapv_into","qualname":"<ArrayBase<S, D>>::mapv_into","value":"pub fn mapv_into<F>(Self, F) -> Self where S: DataMut, F: FnMut(A) -> A,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Call `f` by **v**alue on each element, update the array with the new values\n and return it.","sig":null,"attributes":[{"value":"/ Call `f` by **v**alue on each element, update the array with the new values","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569884,"byte_end":569963,"line_start":2462,"line_end":2462,"column_start":5,"column_end":84}},{"value":"/ and return it.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569968,"byte_end":569986,"line_start":2463,"line_end":2463,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569991,"byte_end":569994,"line_start":2464,"line_end":2464,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":569999,"byte_end":570043,"line_start":2465,"line_end":2465,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4635},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":570377,"byte_end":570388,"line_start":2479,"line_end":2479,"column_start":12,"column_end":23},"name":"map_inplace","qualname":"<ArrayBase<S, D>>::map_inplace","value":"pub fn map_inplace<'a, F>(&'a mut Self, F) where S: DataMut, A: 'a,\nF: FnMut(&'a mut A) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modify the array in place by calling `f` by mutable reference on each element.","sig":null,"attributes":[{"value":"/ Modify the array in place by calling `f` by mutable reference on each element.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":570226,"byte_end":570308,"line_start":2476,"line_end":2476,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":570313,"byte_end":570316,"line_start":2477,"line_end":2477,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":570321,"byte_end":570365,"line_start":2478,"line_end":2478,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4638},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571457,"byte_end":571469,"line_start":2516,"line_end":2516,"column_start":12,"column_end":24},"name":"mapv_inplace","qualname":"<ArrayBase<S, D>>::mapv_inplace","value":"pub fn mapv_inplace<F>(&mut Self, F) where S: DataMut, F: FnMut(A) -> A,\nA: Clone","parent":null,"children":[],"decl_id":null,"docs":" Modify the array in place by calling `f` by **v**alue on each element.\n The array is updated with the new values.","sig":null,"attributes":[{"value":"/ Modify the array in place by calling `f` by **v**alue on each element.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":570831,"byte_end":570905,"line_start":2495,"line_end":2495,"column_start":5,"column_end":79}},{"value":"/ The array is updated with the new values.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":570910,"byte_end":570955,"line_start":2496,"line_end":2496,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":570960,"byte_end":570963,"line_start":2497,"line_end":2497,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":570968,"byte_end":571012,"line_start":2498,"line_end":2498,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571017,"byte_end":571020,"line_start":2499,"line_end":2499,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571025,"byte_end":571032,"line_start":2500,"line_end":2500,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"approx\")] {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571037,"byte_end":571071,"line_start":2501,"line_end":2501,"column_start":5,"column_end":39}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571076,"byte_end":571111,"line_start":2502,"line_end":2502,"column_start":5,"column_end":40}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571116,"byte_end":571138,"line_start":2503,"line_end":2503,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571143,"byte_end":571146,"line_start":2504,"line_end":2504,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[ 0., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571151,"byte_end":571184,"line_start":2505,"line_end":2505,"column_start":5,"column_end":38}},{"value":"/                    [-1., 2.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571189,"byte_end":571224,"line_start":2506,"line_end":2506,"column_start":5,"column_end":40}},{"value":"/ a.mapv_inplace(f32::exp);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571229,"byte_end":571258,"line_start":2507,"line_end":2507,"column_start":5,"column_end":34}},{"value":"/ assert_abs_diff_eq!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571263,"byte_end":571287,"line_start":2508,"line_end":2508,"column_start":5,"column_end":29}},{"value":"/     a,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571292,"byte_end":571302,"line_start":2509,"line_end":2509,"column_start":5,"column_end":15}},{"value":"/     arr2(&[[1.00000, 2.71828],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571307,"byte_end":571341,"line_start":2510,"line_end":2510,"column_start":5,"column_end":39}},{"value":"/            [0.36788, 7.38906]]),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571346,"byte_end":571382,"line_start":2511,"line_end":2511,"column_start":5,"column_end":41}},{"value":"/     epsilon = 1e-5,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571387,"byte_end":571410,"line_start":2512,"line_end":2512,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571415,"byte_end":571421,"line_start":2513,"line_end":2513,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571426,"byte_end":571433,"line_start":2514,"line_end":2514,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571438,"byte_end":571445,"line_start":2515,"line_end":2515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4641},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571751,"byte_end":571759,"line_start":2528,"line_end":2528,"column_start":12,"column_end":20},"name":"for_each","qualname":"<ArrayBase<S, D>>::for_each","value":"pub fn for_each<'a, F>(&'a Self, F) where F: FnMut(&'a A) -> (), A: 'a,\nS: Data","parent":null,"children":[],"decl_id":null,"docs":" Call `f` for each element in the array.","sig":null,"attributes":[{"value":"/ Call `f` for each element in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571639,"byte_end":571682,"line_start":2525,"line_end":2525,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571687,"byte_end":571690,"line_start":2526,"line_end":2526,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571695,"byte_end":571739,"line_start":2527,"line_end":2527,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4645},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572138,"byte_end":572143,"line_start":2542,"line_end":2542,"column_start":12,"column_end":17},"name":"visit","qualname":"<ArrayBase<S, D>>::visit","value":"pub fn visit<'a, F>(&'a Self, F) where F: FnMut(&'a A) -> (), A: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Visit each element in the array by calling `f` by reference\n on each element.","sig":null,"attributes":[{"value":"/ Visit each element in the array by calling `f` by reference","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571916,"byte_end":571979,"line_start":2537,"line_end":2537,"column_start":5,"column_end":68}},{"value":"/ on each element.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":571984,"byte_end":572004,"line_start":2538,"line_end":2538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572009,"byte_end":572012,"line_start":2539,"line_end":2539,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572017,"byte_end":572061,"line_start":2540,"line_end":2540,"column_start":5,"column_end":49}},{"value":"deprecated(note = \"Renamed to .for_each()\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572066,"byte_end":572126,"line_start":2541,"line_end":2541,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4648},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572546,"byte_end":572555,"line_start":2559,"line_end":2559,"column_start":12,"column_end":21},"name":"fold_axis","qualname":"<ArrayBase<S, D>>::fold_axis","value":"pub fn fold_axis<B, F>(&Self, Axis, B, F) -> Array<B, D::Smaller> where\nD: RemoveAxis, F: FnMut(&B, &A) -> B, B: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Fold along an axis.","sig":null,"attributes":[{"value":"/ Fold along an axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572276,"byte_end":572299,"line_start":2551,"line_end":2551,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572304,"byte_end":572307,"line_start":2552,"line_end":2552,"column_start":5,"column_end":8}},{"value":"/ Combine the elements of each subview with the previous using the `fold`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572312,"byte_end":572387,"line_start":2553,"line_end":2553,"column_start":5,"column_end":80}},{"value":"/ function and initial value `init`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572392,"byte_end":572430,"line_start":2554,"line_end":2554,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572435,"byte_end":572438,"line_start":2555,"line_end":2555,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572443,"byte_end":572479,"line_start":2556,"line_end":2556,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572484,"byte_end":572487,"line_start":2557,"line_end":2557,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572492,"byte_end":572534,"line_start":2558,"line_end":2558,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4652},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":573239,"byte_end":573247,"line_start":2581,"line_end":2581,"column_start":12,"column_end":20},"name":"map_axis","qualname":"<ArrayBase<S, D>>::map_axis","value":"pub fn map_axis<'a, B, F>(&'a Self, Axis, F) -> Array<B, D::Smaller> where\nD: RemoveAxis, F: FnMut(ArrayView1) -> B, A: 'a, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":572955,"byte_end":573027,"line_start":2573,"line_end":2573,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":573032,"byte_end":573066,"line_start":2574,"line_end":2574,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":573071,"byte_end":573074,"line_start":2575,"line_end":2575,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":573079,"byte_end":573123,"line_start":2576,"line_end":2576,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":573128,"byte_end":573131,"line_start":2577,"line_end":2577,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":573136,"byte_end":573172,"line_start":2578,"line_end":2578,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":573177,"byte_end":573180,"line_start":2579,"line_end":2579,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":573185,"byte_end":573227,"line_start":2580,"line_end":2580,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4658},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574403,"byte_end":574415,"line_start":2612,"line_end":2612,"column_start":12,"column_end":24},"name":"map_axis_mut","qualname":"<ArrayBase<S, D>>::map_axis_mut","value":"pub fn map_axis_mut<'a, B, F>(&'a mut Self, Axis, F) -> Array<B, D::Smaller>\nwhere D: RemoveAxis, F: FnMut(ArrayViewMut1) -> B, A: 'a, S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Reduce the values along an axis into just one value, producing a new\n array with one less dimension.\n 1-dimensional lanes are passed as mutable references to the reducer,\n allowing for side-effects.","sig":null,"attributes":[{"value":"/ Reduce the values along an axis into just one value, producing a new","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574007,"byte_end":574079,"line_start":2602,"line_end":2602,"column_start":5,"column_end":77}},{"value":"/ array with one less dimension.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574084,"byte_end":574118,"line_start":2603,"line_end":2603,"column_start":5,"column_end":39}},{"value":"/ 1-dimensional lanes are passed as mutable references to the reducer,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574123,"byte_end":574195,"line_start":2604,"line_end":2604,"column_start":5,"column_end":77}},{"value":"/ allowing for side-effects.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574200,"byte_end":574230,"line_start":2605,"line_end":2605,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574235,"byte_end":574238,"line_start":2606,"line_end":2606,"column_start":5,"column_end":8}},{"value":"/ Elements are visited in arbitrary order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574243,"byte_end":574287,"line_start":2607,"line_end":2607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574292,"byte_end":574295,"line_start":2608,"line_end":2608,"column_start":5,"column_end":8}},{"value":"/ Return the result as an `Array`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574300,"byte_end":574336,"line_start":2609,"line_end":2609,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574341,"byte_end":574344,"line_start":2610,"line_end":2610,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":574349,"byte_end":574391,"line_start":2611,"line_end":2611,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4664},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575907,"byte_end":575919,"line_start":2648,"line_end":2648,"column_start":12,"column_end":24},"name":"remove_index","qualname":"<ArrayBase<S, D>>::remove_index","value":"pub fn remove_index(&mut Self, Axis, usize) where S: DataOwned + DataMut","parent":null,"children":[],"decl_id":null,"docs":" Remove the `index`th elements along `axis` and shift down elements from higher indexes.","sig":null,"attributes":[{"value":"/ Remove the `index`th elements along `axis` and shift down elements from higher indexes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575282,"byte_end":575373,"line_start":2637,"line_end":2637,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575378,"byte_end":575381,"line_start":2638,"line_end":2638,"column_start":5,"column_end":8}},{"value":"/ Note that this \"removes\" the elements by swapping them around to the end of the axis and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575386,"byte_end":575478,"line_start":2639,"line_end":2639,"column_start":5,"column_end":97}},{"value":"/ shortening the length of the axis; the elements are not deinitialized or dropped by this,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575483,"byte_end":575576,"line_start":2640,"line_end":2640,"column_start":5,"column_end":98}},{"value":"/ just moved out of view (this only matters for elements with ownership semantics). It's","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575581,"byte_end":575671,"line_start":2641,"line_end":2641,"column_start":5,"column_end":95}},{"value":"/ similar to slicing an owned array in place.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575676,"byte_end":575723,"line_start":2642,"line_end":2642,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575728,"byte_end":575731,"line_start":2643,"line_end":2643,"column_start":5,"column_end":8}},{"value":"/ Decreases the length of `axis` by one.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575736,"byte_end":575778,"line_start":2644,"line_end":2644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575783,"byte_end":575786,"line_start":2645,"line_end":2645,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `axis` is out of bounds<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575791,"byte_end":575838,"line_start":2646,"line_end":2646,"column_start":5,"column_end":52}},{"value":"/ ***Panics*** if not `index < self.len_of(axis)`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":575843,"byte_end":575895,"line_start":2647,"line_end":2647,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577403,"byte_end":577426,"line_start":2689,"line_end":2689,"column_start":12,"column_end":35},"name":"accumulate_axis_inplace","qualname":"<ArrayBase<S, D>>::accumulate_axis_inplace","value":"pub fn accumulate_axis_inplace<F>(&mut Self, Axis, F) where\nF: FnMut(&A, &mut A) -> (), S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Iterates over pairs of consecutive elements along the axis.","sig":null,"attributes":[{"value":"/ Iterates over pairs of consecutive elements along the axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576479,"byte_end":576542,"line_start":2661,"line_end":2661,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576547,"byte_end":576550,"line_start":2662,"line_end":2662,"column_start":5,"column_end":8}},{"value":"/ The first argument to the closure is an element, and the second","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576555,"byte_end":576622,"line_start":2663,"line_end":2663,"column_start":5,"column_end":72}},{"value":"/ argument is the next element along the axis. Iteration is guaranteed to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576627,"byte_end":576702,"line_start":2664,"line_end":2664,"column_start":5,"column_end":80}},{"value":"/ proceed in order along the specified axis, but in all other respects","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576707,"byte_end":576779,"line_start":2665,"line_end":2665,"column_start":5,"column_end":77}},{"value":"/ the iteration order is unspecified.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576784,"byte_end":576823,"line_start":2666,"line_end":2666,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576828,"byte_end":576831,"line_start":2667,"line_end":2667,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576836,"byte_end":576849,"line_start":2668,"line_end":2668,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576854,"byte_end":576857,"line_start":2669,"line_end":2669,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used to compute the cumulative sum along an","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576862,"byte_end":576934,"line_start":2670,"line_end":2670,"column_start":5,"column_end":77}},{"value":"/ axis:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576939,"byte_end":576948,"line_start":2671,"line_end":2671,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576953,"byte_end":576956,"line_start":2672,"line_end":2672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576961,"byte_end":576968,"line_start":2673,"line_end":2673,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{array, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":576973,"byte_end":577004,"line_start":2674,"line_end":2674,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577009,"byte_end":577012,"line_start":2675,"line_end":2675,"column_start":5,"column_end":8}},{"value":"/ let mut arr = array![","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577017,"byte_end":577042,"line_start":2676,"line_end":2676,"column_start":5,"column_end":30}},{"value":"/     [[1, 2], [3, 4], [5, 6]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577047,"byte_end":577080,"line_start":2677,"line_end":2677,"column_start":5,"column_end":38}},{"value":"/     [[7, 8], [9, 10], [11, 12]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577085,"byte_end":577121,"line_start":2678,"line_end":2678,"column_start":5,"column_end":41}},{"value":"/ ];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577126,"byte_end":577132,"line_start":2679,"line_end":2679,"column_start":5,"column_end":11}},{"value":"/ arr.accumulate_axis_inplace(Axis(1), |&prev, curr| *curr += prev);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577137,"byte_end":577207,"line_start":2680,"line_end":2680,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577212,"byte_end":577227,"line_start":2681,"line_end":2681,"column_start":5,"column_end":20}},{"value":"/     arr,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577232,"byte_end":577244,"line_start":2682,"line_end":2682,"column_start":5,"column_end":17}},{"value":"/     array![","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577249,"byte_end":577264,"line_start":2683,"line_end":2683,"column_start":5,"column_end":20}},{"value":"/         [[1, 2], [4, 6], [9, 12]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577269,"byte_end":577307,"line_start":2684,"line_end":2684,"column_start":5,"column_end":43}},{"value":"/         [[7, 8], [16, 18], [27, 30]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577312,"byte_end":577353,"line_start":2685,"line_end":2685,"column_start":5,"column_end":46}},{"value":"/     ],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577358,"byte_end":577368,"line_start":2686,"line_end":2686,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577373,"byte_end":577379,"line_start":2687,"line_end":2687,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":577384,"byte_end":577391,"line_start":2688,"line_end":2688,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4713},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579954,"byte_end":579965,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<Array<A, Ix0>>::into_scalar","value":"pub fn into_scalar(Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the single element in the array without cloning it.","sig":null,"attributes":[{"value":"/ Returns the single element in the array without cloning it.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579566,"byte_end":579629,"line_start":23,"line_end":23,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579634,"byte_end":579637,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579642,"byte_end":579649,"line_start":25,"line_end":25,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579654,"byte_end":579686,"line_start":26,"line_end":26,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579691,"byte_end":579694,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ // `Foo` doesn't implement `Clone`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579699,"byte_end":579738,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/ #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579743,"byte_end":579778,"line_start":29,"line_end":29,"column_start":5,"column_end":40}},{"value":"/ struct Foo;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579783,"byte_end":579798,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579803,"byte_end":579806,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let array: Array0<Foo> = arr0(Foo);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579811,"byte_end":579850,"line_start":32,"line_end":32,"column_start":5,"column_end":44}},{"value":"/ let scalar: Foo = array.into_scalar();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579855,"byte_end":579897,"line_start":33,"line_end":33,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(scalar, Foo);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579902,"byte_end":579930,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579935,"byte_end":579942,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4717},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581269,"byte_end":581281,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"into_raw_vec","qualname":"<Array<A, D>>::into_raw_vec","value":"pub fn into_raw_vec(Self) -> Vec<A>","parent":null,"children":[],"decl_id":null,"docs":" Return a vector of the elements in the array, in the way they are\n stored internally.","sig":null,"attributes":[{"value":"/ Return a vector of the elements in the array, in the way they are","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":580992,"byte_end":581061,"line_start":65,"line_end":65,"column_start":5,"column_end":74}},{"value":"/ stored internally.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581066,"byte_end":581088,"line_start":66,"line_end":66,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581093,"byte_end":581096,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If the array is in standard memory layout, the logical element order","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581101,"byte_end":581173,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ of the array (`.iter()` order) and of the returned vector will be the same.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581178,"byte_end":581257,"line_start":69,"line_end":69,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4720},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583234,"byte_end":583242,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"push_row","qualname":"<Array<A, Ix2>>::push_row","value":"pub fn push_row(&mut Self, ArrayView<, A, Ix1>) -> Result<(), ShapeError>\nwhere A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Append a row to an array","sig":null,"attributes":[{"value":"/ Append a row to an array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581498,"byte_end":581526,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581531,"byte_end":581534,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The elements from `row` are cloned and added as a new row in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581539,"byte_end":581614,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581619,"byte_end":581622,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ***Errors*** with a shape error if the length of the row does not match the length of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581627,"byte_end":581720,"line_start":85,"line_end":85,"column_start":5,"column_end":98}},{"value":"/ rows in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581725,"byte_end":581747,"line_start":86,"line_end":86,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581752,"byte_end":581755,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the `self` array matters for ensuring that the append is efficient.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581760,"byte_end":581852,"line_start":88,"line_end":88,"column_start":5,"column_end":97}},{"value":"/ Appending automatically changes memory layout of the array so that it is appended to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581857,"byte_end":581945,"line_start":89,"line_end":89,"column_start":5,"column_end":93}},{"value":"/ along the \"growing axis\". However, if the memory layout needs adjusting, the array must","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581950,"byte_end":582041,"line_start":90,"line_end":90,"column_start":5,"column_end":96}},{"value":"/ reallocate and move memory.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582046,"byte_end":582077,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582082,"byte_end":582085,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The operation leaves the existing data in place and is most efficent if one of these is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582090,"byte_end":582181,"line_start":93,"line_end":93,"column_start":5,"column_end":96}},{"value":"/ true:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582186,"byte_end":582195,"line_start":94,"line_end":94,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582200,"byte_end":582203,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ - The axis being appended to is the longest stride axis, i.e the array is in row major","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582208,"byte_end":582298,"line_start":96,"line_end":96,"column_start":5,"column_end":95}},{"value":"/   (\"C\") layout.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582303,"byte_end":582322,"line_start":97,"line_end":97,"column_start":5,"column_end":24}},{"value":"/ - The array has 0 or 1 rows (It is converted to row major)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582327,"byte_end":582389,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582394,"byte_end":582397,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Ensure appending is efficient by, for example, appending to an empty array and then always","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582402,"byte_end":582496,"line_start":100,"line_end":100,"column_start":5,"column_end":99}},{"value":"/ pushing/appending along the same axis. For pushing rows, ndarray's default layout (C order)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582501,"byte_end":582596,"line_start":101,"line_end":101,"column_start":5,"column_end":100}},{"value":"/ is efficient.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582601,"byte_end":582618,"line_start":102,"line_end":102,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582623,"byte_end":582626,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ When repeatedly appending to a single axis, the amortized average complexity of each","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582631,"byte_end":582719,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ append is O(m), where *m* is the length of the row.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582724,"byte_end":582779,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582784,"byte_end":582787,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582792,"byte_end":582803,"line_start":107,"line_end":107,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, ArrayView, array};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582808,"byte_end":582851,"line_start":108,"line_end":108,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582856,"byte_end":582859,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ // create an empty array and append","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582864,"byte_end":582903,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/ let mut a = Array::zeros((0, 4));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582908,"byte_end":582945,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/ a.push_row(ArrayView::from(&[ 1.,  2.,  3.,  4.])).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":582950,"byte_end":583014,"line_start":112,"line_end":112,"column_start":5,"column_end":69}},{"value":"/ a.push_row(ArrayView::from(&[-1., -2., -3., -4.])).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583019,"byte_end":583083,"line_start":113,"line_end":113,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583088,"byte_end":583091,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583096,"byte_end":583111,"line_start":115,"line_end":115,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583116,"byte_end":583126,"line_start":116,"line_end":116,"column_start":5,"column_end":15}},{"value":"/     array![[ 1.,  2.,  3.,  4.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583131,"byte_end":583167,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/            [-1., -2., -3., -4.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583172,"byte_end":583210,"line_start":118,"line_end":118,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583215,"byte_end":583222,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4721},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585124,"byte_end":585135,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"push_column","qualname":"<Array<A, Ix2>>::push_column","value":"pub fn push_column(&mut Self, ArrayView<, A, Ix1>) -> Result<(), ShapeError>\nwhere A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Append a column to an array","sig":null,"attributes":[{"value":"/ Append a column to an array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583404,"byte_end":583435,"line_start":127,"line_end":127,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583440,"byte_end":583443,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The elements from `column` are cloned and added as a new row in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583448,"byte_end":583526,"line_start":129,"line_end":129,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583531,"byte_end":583534,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ***Errors*** with a shape error if the length of the column does not match the length of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583539,"byte_end":583631,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ the columns in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583636,"byte_end":583665,"line_start":132,"line_end":132,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583670,"byte_end":583673,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the `self` array matters for ensuring that the append is efficient.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583678,"byte_end":583770,"line_start":134,"line_end":134,"column_start":5,"column_end":97}},{"value":"/ Appending automatically changes memory layout of the array so that it is appended to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583775,"byte_end":583863,"line_start":135,"line_end":135,"column_start":5,"column_end":93}},{"value":"/ along the \"growing axis\". However, if the memory layout needs adjusting, the array must","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583868,"byte_end":583959,"line_start":136,"line_end":136,"column_start":5,"column_end":96}},{"value":"/ reallocate and move memory.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":583964,"byte_end":583995,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584000,"byte_end":584003,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The operation leaves the existing data in place and is most efficent if one of these is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584008,"byte_end":584099,"line_start":139,"line_end":139,"column_start":5,"column_end":96}},{"value":"/ true:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584104,"byte_end":584113,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584118,"byte_end":584121,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ - The axis being appended to is the longest stride axis, i.e the array is in column major","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584126,"byte_end":584219,"line_start":142,"line_end":142,"column_start":5,"column_end":98}},{"value":"/   (\"F\") layout.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584224,"byte_end":584243,"line_start":143,"line_end":143,"column_start":5,"column_end":24}},{"value":"/ - The array has 0 or 1 columns (It is converted to column major)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584248,"byte_end":584316,"line_start":144,"line_end":144,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584321,"byte_end":584324,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Ensure appending is efficient by, for example, appending to an empty array and then always","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584329,"byte_end":584423,"line_start":146,"line_end":146,"column_start":5,"column_end":99}},{"value":"/ pushing/appending along the same axis. For pushing columns, column major layout (F order)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584428,"byte_end":584521,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ is efficient.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584526,"byte_end":584543,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584548,"byte_end":584551,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ When repeatedly appending to a single axis, the amortized average complexity of each append","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584556,"byte_end":584651,"line_start":150,"line_end":150,"column_start":5,"column_end":100}},{"value":"/ is O(m), where *m* is the length of the column.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584656,"byte_end":584707,"line_start":151,"line_end":151,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584712,"byte_end":584715,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584720,"byte_end":584731,"line_start":153,"line_end":153,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, ArrayView, array};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584736,"byte_end":584779,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584784,"byte_end":584787,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ // create an empty array and append","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584792,"byte_end":584831,"line_start":156,"line_end":156,"column_start":5,"column_end":44}},{"value":"/ let mut a = Array::zeros((2, 0));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584836,"byte_end":584873,"line_start":157,"line_end":157,"column_start":5,"column_end":42}},{"value":"/ a.push_column(ArrayView::from(&[1., 2.])).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584878,"byte_end":584933,"line_start":158,"line_end":158,"column_start":5,"column_end":60}},{"value":"/ a.push_column(ArrayView::from(&[-1., -2.])).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":584938,"byte_end":584995,"line_start":159,"line_end":159,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585000,"byte_end":585003,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585008,"byte_end":585023,"line_start":161,"line_end":161,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585028,"byte_end":585038,"line_start":162,"line_end":162,"column_start":5,"column_end":15}},{"value":"/     array![[1., -1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585043,"byte_end":585068,"line_start":163,"line_end":163,"column_start":5,"column_end":30}},{"value":"/            [2., -2.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585073,"byte_end":585100,"line_start":164,"line_end":164,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585105,"byte_end":585112,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4725},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":586010,"byte_end":586019,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"move_into","qualname":"<Array<A, D>>::move_into","value":"pub fn move_into<'a, AM>(Self, AM) where AM: Into<ArrayViewMut>, A: 'a","parent":null,"children":[],"decl_id":null,"docs":" Move all elements from self into `new_array`, which must be of the same shape but\n can have a different memory layout. The destination is overwritten completely.","sig":null,"attributes":[{"value":"/ Move all elements from self into `new_array`, which must be of the same shape but","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585353,"byte_end":585438,"line_start":177,"line_end":177,"column_start":5,"column_end":90}},{"value":"/ can have a different memory layout. The destination is overwritten completely.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585443,"byte_end":585525,"line_start":178,"line_end":178,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585530,"byte_end":585533,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The destination should be a mut reference to an array or an `ArrayViewMut` with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585538,"byte_end":585621,"line_start":180,"line_end":180,"column_start":5,"column_end":88}},{"value":"/ `A` elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585626,"byte_end":585643,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585648,"byte_end":585651,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the shapes don't agree.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585656,"byte_end":585699,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585704,"byte_end":585707,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585712,"byte_end":585726,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585731,"byte_end":585734,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585739,"byte_end":585746,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585751,"byte_end":585774,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585779,"byte_end":585782,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ // Usage example of move_into in safe code","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585787,"byte_end":585833,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/ let mut a = Array::default((10, 10));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585838,"byte_end":585879,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/ let b = Array::from_shape_fn((10, 10), |(i, j)| (i + j).to_string());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585884,"byte_end":585957,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ b.move_into(&mut a);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585962,"byte_end":585986,"line_start":193,"line_end":193,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585991,"byte_end":585998,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4730},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":588313,"byte_end":588329,"line_start":248,"line_end":248,"column_start":12,"column_end":28},"name":"move_into_uninit","qualname":"<Array<A, D>>::move_into_uninit","value":"pub fn move_into_uninit<'a, AM>(Self, AM) where AM: Into<ArrayViewMut>, A: 'a","parent":null,"children":[],"decl_id":null,"docs":" Move all elements from self into `new_array`, which must be of the same shape but\n can have a different memory layout. The destination is overwritten completely.","sig":null,"attributes":[{"value":"/ Move all elements from self into `new_array`, which must be of the same shape but","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587139,"byte_end":587224,"line_start":222,"line_end":222,"column_start":5,"column_end":90}},{"value":"/ can have a different memory layout. The destination is overwritten completely.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587229,"byte_end":587311,"line_start":223,"line_end":223,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587316,"byte_end":587319,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The destination should be a mut reference to an array or an `ArrayViewMut` with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587324,"byte_end":587407,"line_start":225,"line_end":225,"column_start":5,"column_end":88}},{"value":"/ `MaybeUninit<A>` elements (which are overwritten without dropping any existing value).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587412,"byte_end":587502,"line_start":226,"line_end":226,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587507,"byte_end":587510,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Minor implementation note: Owned arrays like `self` may be sliced in place and own elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587515,"byte_end":587610,"line_start":228,"line_end":228,"column_start":5,"column_end":100}},{"value":"/ that are not part of their active view; these are dropped at the end of this function,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587615,"byte_end":587705,"line_start":229,"line_end":229,"column_start":5,"column_end":95}},{"value":"/ after all elements in the \"active view\" are moved into `new_array`. If there is a panic in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587710,"byte_end":587804,"line_start":230,"line_end":230,"column_start":5,"column_end":99}},{"value":"/ drop of any such element, other elements may be leaked.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587809,"byte_end":587868,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587873,"byte_end":587876,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the shapes don't agree.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587881,"byte_end":587924,"line_start":233,"line_end":233,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587929,"byte_end":587932,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587937,"byte_end":587951,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587956,"byte_end":587959,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587964,"byte_end":587971,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use ndarray::Array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":587976,"byte_end":587999,"line_start":238,"line_end":238,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":588004,"byte_end":588007,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ let a = Array::from_iter(0..100).into_shape((10, 10)).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":588012,"byte_end":588079,"line_start":240,"line_end":240,"column_start":5,"column_end":72}},{"value":"/ let mut b = Array::uninit((10, 10));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":588084,"byte_end":588124,"line_start":241,"line_end":241,"column_start":5,"column_end":45}},{"value":"/ a.move_into_uninit(&mut b);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":588129,"byte_end":588160,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/ unsafe {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":588165,"byte_end":588177,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/     // we can now promise we have fully initialized `b`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":588182,"byte_end":588242,"line_start":244,"line_end":244,"column_start":5,"column_end":65}},{"value":"/     let b = b.assume_init();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":588247,"byte_end":588279,"line_start":245,"line_end":245,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":588284,"byte_end":588289,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":588294,"byte_end":588301,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4740},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594932,"byte_end":594936,"line_start":410,"line_end":410,"column_start":12,"column_end":16},"name":"push","qualname":"<Array<A, D>>::push","value":"pub fn push(&mut Self, Axis, ArrayView<, A, D::Smaller>)\n-> Result<(), ShapeError> where A: Clone, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Append an array to the array along an axis.","sig":null,"attributes":[{"value":"/ Append an array to the array along an axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":592493,"byte_end":592540,"line_start":360,"line_end":360,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":592545,"byte_end":592548,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The elements of `array` are cloned and extend the axis `axis` in the present array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":592553,"byte_end":592640,"line_start":362,"line_end":362,"column_start":5,"column_end":92}},{"value":"/ `self` will grow in size by 1 along `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":592645,"byte_end":592692,"line_start":363,"line_end":363,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":592697,"byte_end":592700,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Append to the array, where the array being pushed to the array has one dimension less than","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":592705,"byte_end":592799,"line_start":365,"line_end":365,"column_start":5,"column_end":99}},{"value":"/ the `self` array. This method is equivalent to [append](ArrayBase::append) in this way:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":592804,"byte_end":592895,"line_start":366,"line_end":366,"column_start":5,"column_end":96}},{"value":"/ `self.append(axis, array.insert_axis(axis))`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":592900,"byte_end":592949,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":592954,"byte_end":592957,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ***Errors*** with a shape error if the shape of self does not match the array-to-append;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":592962,"byte_end":593054,"line_start":369,"line_end":369,"column_start":5,"column_end":97}},{"value":"/ all axes *except* the axis along which it being appended matter for this check:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593059,"byte_end":593142,"line_start":370,"line_end":370,"column_start":5,"column_end":88}},{"value":"/ the shape of `self` with `axis` removed must be the same as the shape of `array`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593147,"byte_end":593232,"line_start":371,"line_end":371,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593237,"byte_end":593240,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the `self` array matters for ensuring that the append is efficient.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593245,"byte_end":593337,"line_start":373,"line_end":373,"column_start":5,"column_end":97}},{"value":"/ Appending automatically changes memory layout of the array so that it is appended to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593342,"byte_end":593430,"line_start":374,"line_end":374,"column_start":5,"column_end":93}},{"value":"/ along the \"growing axis\". However, if the memory layout needs adjusting, the array must","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593435,"byte_end":593526,"line_start":375,"line_end":375,"column_start":5,"column_end":96}},{"value":"/ reallocate and move memory.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593531,"byte_end":593562,"line_start":376,"line_end":376,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593567,"byte_end":593570,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The operation leaves the existing data in place and is most efficent if `axis` is a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593575,"byte_end":593662,"line_start":378,"line_end":378,"column_start":5,"column_end":92}},{"value":"/ \"growing axis\" for the array, i.e. one of these is true:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593667,"byte_end":593727,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593732,"byte_end":593735,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ - The axis is the longest stride axis, for example the 0th axis in a C-layout or the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593740,"byte_end":593828,"line_start":381,"line_end":381,"column_start":5,"column_end":93}},{"value":"/ *n-1*th axis in an F-layout array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593833,"byte_end":593871,"line_start":382,"line_end":382,"column_start":5,"column_end":43}},{"value":"/ - The axis has length 0 or 1 (It is converted to the new growing axis)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593876,"byte_end":593950,"line_start":383,"line_end":383,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593955,"byte_end":593958,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Ensure appending is efficient by for example starting from an empty array and/or always","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":593963,"byte_end":594054,"line_start":385,"line_end":385,"column_start":5,"column_end":96}},{"value":"/ appending to an array along the same axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594059,"byte_end":594105,"line_start":386,"line_end":386,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594110,"byte_end":594113,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ The amortized average complexity of the append, when appending along its growing axis, is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594118,"byte_end":594211,"line_start":388,"line_end":388,"column_start":5,"column_end":98}},{"value":"/ O(*m*) where *m* is the length of the row.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594216,"byte_end":594262,"line_start":389,"line_end":389,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594267,"byte_end":594270,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the argument `array` does not matter to the same extent.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594275,"byte_end":594356,"line_start":391,"line_end":391,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594361,"byte_end":594364,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594369,"byte_end":594380,"line_start":393,"line_end":393,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, ArrayView, array, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594385,"byte_end":594434,"line_start":394,"line_end":394,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594439,"byte_end":594442,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ // create an empty array and push rows to it","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594447,"byte_end":594495,"line_start":396,"line_end":396,"column_start":5,"column_end":53}},{"value":"/ let mut a = Array::zeros((0, 4));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594500,"byte_end":594537,"line_start":397,"line_end":397,"column_start":5,"column_end":42}},{"value":"/ let ones  = ArrayView::from(&[1.; 4]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594542,"byte_end":594584,"line_start":398,"line_end":398,"column_start":5,"column_end":47}},{"value":"/ let zeros = ArrayView::from(&[0.; 4]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594589,"byte_end":594631,"line_start":399,"line_end":399,"column_start":5,"column_end":47}},{"value":"/ a.push(Axis(0), ones).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594636,"byte_end":594671,"line_start":400,"line_end":400,"column_start":5,"column_end":40}},{"value":"/ a.push(Axis(0), zeros).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594676,"byte_end":594712,"line_start":401,"line_end":401,"column_start":5,"column_end":41}},{"value":"/ a.push(Axis(0), ones).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594717,"byte_end":594752,"line_start":402,"line_end":402,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594757,"byte_end":594760,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594765,"byte_end":594780,"line_start":404,"line_end":404,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594785,"byte_end":594795,"line_start":405,"line_end":405,"column_start":5,"column_end":15}},{"value":"/     array![[1., 1., 1., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594800,"byte_end":594832,"line_start":406,"line_end":406,"column_start":5,"column_end":37}},{"value":"/            [0., 0., 0., 0.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594837,"byte_end":594869,"line_start":407,"line_end":407,"column_start":5,"column_end":37}},{"value":"/            [1., 1., 1., 1.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594874,"byte_end":594908,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":594913,"byte_end":594920,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4741},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597618,"byte_end":597624,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"append","qualname":"<Array<A, D>>::append","value":"pub fn append(&mut Self, Axis, ArrayView<, A, D>) -> Result<(), ShapeError>\nwhere A: Clone, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Append an array to the array along an axis.","sig":null,"attributes":[{"value":"/ Append an array to the array along an axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595225,"byte_end":595272,"line_start":421,"line_end":421,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595277,"byte_end":595280,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ The elements of `array` are cloned and extend the axis `axis` in the present array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595285,"byte_end":595372,"line_start":423,"line_end":423,"column_start":5,"column_end":92}},{"value":"/ `self` will grow in size by `array.len_of(axis)` along `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595377,"byte_end":595443,"line_start":424,"line_end":424,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595448,"byte_end":595451,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ***Errors*** with a shape error if the shape of self does not match the array-to-append;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595456,"byte_end":595548,"line_start":426,"line_end":426,"column_start":5,"column_end":97}},{"value":"/ all axes *except* the axis along which it being appended matter for this check:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595553,"byte_end":595636,"line_start":427,"line_end":427,"column_start":5,"column_end":88}},{"value":"/ the shape of `self` with `axis` removed must be the same as the shape of `array` with","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595641,"byte_end":595730,"line_start":428,"line_end":428,"column_start":5,"column_end":94}},{"value":"/ `axis` removed.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595735,"byte_end":595754,"line_start":429,"line_end":429,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595759,"byte_end":595762,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the `self` array matters for ensuring that the append is efficient.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595767,"byte_end":595859,"line_start":431,"line_end":431,"column_start":5,"column_end":97}},{"value":"/ Appending automatically changes memory layout of the array so that it is appended to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595864,"byte_end":595952,"line_start":432,"line_end":432,"column_start":5,"column_end":93}},{"value":"/ along the \"growing axis\". However, if the memory layout needs adjusting, the array must","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":595957,"byte_end":596048,"line_start":433,"line_end":433,"column_start":5,"column_end":96}},{"value":"/ reallocate and move memory.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596053,"byte_end":596084,"line_start":434,"line_end":434,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596089,"byte_end":596092,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ The operation leaves the existing data in place and is most efficent if `axis` is a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596097,"byte_end":596184,"line_start":436,"line_end":436,"column_start":5,"column_end":92}},{"value":"/ \"growing axis\" for the array, i.e. one of these is true:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596189,"byte_end":596249,"line_start":437,"line_end":437,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596254,"byte_end":596257,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ - The axis is the longest stride axis, for example the 0th axis in a C-layout or the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596262,"byte_end":596350,"line_start":439,"line_end":439,"column_start":5,"column_end":93}},{"value":"/ *n-1*th axis in an F-layout array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596355,"byte_end":596393,"line_start":440,"line_end":440,"column_start":5,"column_end":43}},{"value":"/ - The axis has length 0 or 1 (It is converted to the new growing axis)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596398,"byte_end":596472,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596477,"byte_end":596480,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ Ensure appending is efficient by for example starting from an empty array and/or always","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596485,"byte_end":596576,"line_start":443,"line_end":443,"column_start":5,"column_end":96}},{"value":"/ appending to an array along the same axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596581,"byte_end":596627,"line_start":444,"line_end":444,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596632,"byte_end":596635,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ The amortized average complexity of the append, when appending along its growing axis, is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596640,"byte_end":596733,"line_start":446,"line_end":446,"column_start":5,"column_end":98}},{"value":"/ O(*m*) where *m* is the length of the row.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596738,"byte_end":596784,"line_start":447,"line_end":447,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596789,"byte_end":596792,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ The memory layout of the argument `array` does not matter to the same extent.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596797,"byte_end":596878,"line_start":449,"line_end":449,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596883,"byte_end":596886,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596891,"byte_end":596902,"line_start":451,"line_end":451,"column_start":5,"column_end":16}},{"value":"/ use ndarray::{Array, ArrayView, array, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596907,"byte_end":596956,"line_start":452,"line_end":452,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596961,"byte_end":596964,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ // create an empty array and append","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":596969,"byte_end":597008,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/ let mut a = Array::zeros((0, 4));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597013,"byte_end":597050,"line_start":455,"line_end":455,"column_start":5,"column_end":42}},{"value":"/ let ones  = ArrayView::from(&[1.; 8]).into_shape((2, 4)).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597055,"byte_end":597125,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"/ let zeros = ArrayView::from(&[0.; 8]).into_shape((2, 4)).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597130,"byte_end":597200,"line_start":457,"line_end":457,"column_start":5,"column_end":75}},{"value":"/ a.append(Axis(0), ones).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597205,"byte_end":597242,"line_start":458,"line_end":458,"column_start":5,"column_end":42}},{"value":"/ a.append(Axis(0), zeros).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597247,"byte_end":597285,"line_start":459,"line_end":459,"column_start":5,"column_end":43}},{"value":"/ a.append(Axis(0), ones).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597290,"byte_end":597327,"line_start":460,"line_end":460,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597332,"byte_end":597335,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597340,"byte_end":597355,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     a,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597360,"byte_end":597370,"line_start":463,"line_end":463,"column_start":5,"column_end":15}},{"value":"/     array![[1., 1., 1., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597375,"byte_end":597407,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/            [1., 1., 1., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597412,"byte_end":597444,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/            [0., 0., 0., 0.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597449,"byte_end":597481,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/            [0., 0., 0., 0.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597486,"byte_end":597518,"line_start":467,"line_end":467,"column_start":5,"column_end":37}},{"value":"/            [1., 1., 1., 1.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597523,"byte_end":597555,"line_start":468,"line_end":468,"column_start":5,"column_end":37}},{"value":"/            [1., 1., 1., 1.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597560,"byte_end":597594,"line_start":469,"line_end":469,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":597599,"byte_end":597606,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4778},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":612328,"byte_end":612339,"line_start":37,"line_end":37,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ArrayBase<S, D>>::assume_init","value":"pub unsafe fn assume_init(Self)\n-> ArrayBase<<S as RawDataSubst<A>>::Output, D>","parent":null,"children":[],"decl_id":null,"docs":" **Promise** that the array's elements are all fully initialized, and convert\n the array from element type `MaybeUninit<A>` to `A`.","sig":null,"attributes":[{"value":"/ **Promise** that the array's elements are all fully initialized, and convert","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":611712,"byte_end":611792,"line_start":25,"line_end":25,"column_start":5,"column_end":85}},{"value":"/ the array from element type `MaybeUninit<A>` to `A`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":611797,"byte_end":611853,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":611858,"byte_end":611861,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ For example, it can convert an `Array<MaybeUninit<f64>, D>` to `Array<f64, D>`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":611866,"byte_end":611949,"line_start":28,"line_end":28,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":611954,"byte_end":611957,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ## Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":611962,"byte_end":611975,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":611980,"byte_end":611983,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Safe to use if all the array's elements have been initialized.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":611988,"byte_end":612054,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":612059,"byte_end":612062,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that for owned and shared ownership arrays, the promise must include all of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":612067,"byte_end":612155,"line_start":34,"line_end":34,"column_start":5,"column_end":93}},{"value":"/ array's storage; it is for example possible to slice these in place, but that must","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":612160,"byte_end":612246,"line_start":35,"line_end":35,"column_start":5,"column_end":91}},{"value":"/ only be done after all elements have been initialized.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":612251,"byte_end":612309,"line_start":36,"line_end":36,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4806},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_1d.rs","byte_start":613370,"byte_end":613376,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<ArrayBase<S, Ix1>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<A> where A: Clone, S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an vector with the elements of the one-dimensional array.\n","sig":null,"attributes":[{"value":"/ Return an vector with the elements of the one-dimensional array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_1d.rs","byte_start":613290,"byte_end":613358,"line_start":21,"line_end":21,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4813},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615590,"byte_end":615593,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"row","qualname":"<ArrayBase<S, Ix2>>::row","value":"pub fn row(&Self, Ix) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an array view of row `index`.","sig":null,"attributes":[{"value":"/ Return an array view of row `index`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615324,"byte_end":615364,"line_start":17,"line_end":17,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615369,"byte_end":615372,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615377,"byte_end":615420,"line_start":19,"line_end":19,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615425,"byte_end":615428,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615433,"byte_end":615440,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615445,"byte_end":615468,"line_start":22,"line_end":22,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615473,"byte_end":615516,"line_start":23,"line_end":23,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.row(0), array![1., 2.]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615521,"byte_end":615566,"line_start":24,"line_end":24,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615571,"byte_end":615578,"line_start":25,"line_end":25,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4814},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616033,"byte_end":616040,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"row_mut","qualname":"<ArrayBase<S, Ix2>>::row_mut","value":"pub fn row_mut(&mut Self, Ix) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable array view of row `index`.","sig":null,"attributes":[{"value":"/ Return a mutable array view of row `index`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615717,"byte_end":615764,"line_start":33,"line_end":33,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615769,"byte_end":615772,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615777,"byte_end":615820,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615825,"byte_end":615828,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615833,"byte_end":615840,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615845,"byte_end":615868,"line_start":38,"line_end":38,"column_start":5,"column_end":28}},{"value":"/ let mut array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615873,"byte_end":615920,"line_start":39,"line_end":39,"column_start":5,"column_end":52}},{"value":"/ array.row_mut(0)[1] = 5.;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615925,"byte_end":615954,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(array, array![[1., 5.], [3., 4.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615959,"byte_end":616009,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616014,"byte_end":616021,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4815},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616422,"byte_end":616427,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"nrows","qualname":"<ArrayBase<S, Ix2>>::nrows","value":"pub fn nrows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","sig":null,"attributes":[{"value":"/ Return the number of rows (length of `Axis(0)`) in the two-dimensional array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616178,"byte_end":616259,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616264,"byte_end":616267,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616272,"byte_end":616279,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616284,"byte_end":616307,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616312,"byte_end":616355,"line_start":54,"line_end":54,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.nrows(), 2usize);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616360,"byte_end":616398,"line_start":55,"line_end":55,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616403,"byte_end":616410,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4816},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616758,"byte_end":616764,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"column","qualname":"<ArrayBase<S, Ix2>>::column","value":"pub fn column(&Self, Ix) -> ArrayView1<, A> where S: Data","parent":null,"children":[],"decl_id":null,"docs":" Return an array view of column `index`.","sig":null,"attributes":[{"value":"/ Return an array view of column `index`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616486,"byte_end":616529,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616534,"byte_end":616537,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616542,"byte_end":616585,"line_start":63,"line_end":63,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616590,"byte_end":616593,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616598,"byte_end":616605,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616610,"byte_end":616633,"line_start":66,"line_end":66,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616638,"byte_end":616681,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.column(0), array![1., 3.]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616686,"byte_end":616734,"line_start":68,"line_end":68,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616739,"byte_end":616746,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4817},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617210,"byte_end":617220,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"column_mut","qualname":"<ArrayBase<S, Ix2>>::column_mut","value":"pub fn column_mut(&mut Self, Ix) -> ArrayViewMut1<, A> where S: DataMut","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable array view of column `index`.","sig":null,"attributes":[{"value":"/ Return a mutable array view of column `index`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616888,"byte_end":616938,"line_start":77,"line_end":77,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616943,"byte_end":616946,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616951,"byte_end":616994,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":616999,"byte_end":617002,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617007,"byte_end":617014,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617019,"byte_end":617042,"line_start":82,"line_end":82,"column_start":5,"column_end":28}},{"value":"/ let mut array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617047,"byte_end":617094,"line_start":83,"line_end":83,"column_start":5,"column_end":52}},{"value":"/ array.column_mut(0)[1] = 5.;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617099,"byte_end":617131,"line_start":84,"line_end":84,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(array, array![[1., 2.], [5., 4.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617136,"byte_end":617186,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617191,"byte_end":617198,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4818},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617605,"byte_end":617610,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"ncols","qualname":"<ArrayBase<S, Ix2>>::ncols","value":"pub fn ncols(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","sig":null,"attributes":[{"value":"/ Return the number of columns (length of `Axis(1)`) in the two-dimensional array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617358,"byte_end":617442,"line_start":94,"line_end":94,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617447,"byte_end":617450,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617455,"byte_end":617462,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617467,"byte_end":617490,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617495,"byte_end":617538,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(array.ncols(), 2usize);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617543,"byte_end":617581,"line_start":99,"line_end":99,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617586,"byte_end":617593,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4819},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":618081,"byte_end":618090,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"is_square","qualname":"<ArrayBase<S, Ix2>>::is_square","value":"pub fn is_square(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the array is square, false otherwise.","sig":null,"attributes":[{"value":"/ Return true if the array is square, false otherwise.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617669,"byte_end":617725,"line_start":105,"line_end":105,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617730,"byte_end":617733,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617738,"byte_end":617752,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/ Sqaure:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617757,"byte_end":617768,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617773,"byte_end":617780,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617785,"byte_end":617808,"line_start":110,"line_end":110,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2.], [3., 4.]];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617813,"byte_end":617856,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ assert!(array.is_square());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617861,"byte_end":617892,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617897,"byte_end":617904,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ Not sqaure:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617909,"byte_end":617924,"line_start":114,"line_end":114,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617929,"byte_end":617936,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617941,"byte_end":617964,"line_start":116,"line_end":116,"column_start":5,"column_end":28}},{"value":"/ let array = array![[1., 2., 5.], [3., 4., 6.]];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":617969,"byte_end":618020,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ assert!(!array.is_square());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":618025,"byte_end":618057,"line_start":118,"line_end":118,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":618062,"byte_end":618069,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4825},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619210,"byte_end":619229,"line_start":32,"line_end":32,"column_start":12,"column_end":31},"name":"insert_axis_inplace","qualname":"<ArrayBase<S, IxDyn>>::insert_axis_inplace","value":"pub fn insert_axis_inplace(&mut Self, Axis)","parent":null,"children":[],"decl_id":null,"docs":" Insert new array axis of length 1 at `axis`, modifying the shape and\n strides in-place.","sig":null,"attributes":[{"value":"/ Insert new array axis of length 1 at `axis`, modifying the shape and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618700,"byte_end":618772,"line_start":17,"line_end":17,"column_start":5,"column_end":77}},{"value":"/ strides in-place.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618777,"byte_end":618798,"line_start":18,"line_end":18,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618803,"byte_end":618806,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the axis is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618811,"byte_end":618855,"line_start":20,"line_end":20,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618860,"byte_end":618863,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618868,"byte_end":618875,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Axis, arr2, arr3};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618880,"byte_end":618916,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618921,"byte_end":618924,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]).into_dyn();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618929,"byte_end":618986,"line_start":25,"line_end":25,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(a.shape(), &[2, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618991,"byte_end":619026,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619031,"byte_end":619034,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ a.insert_axis_inplace(Axis(1));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619039,"byte_end":619074,"line_start":28,"line_end":28,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a, arr3(&[[[1, 2, 3]], [[4, 5, 6]]]).into_dyn());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619079,"byte_end":619143,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(a.shape(), &[2, 1, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619148,"byte_end":619186,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619191,"byte_end":619198,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4826},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619932,"byte_end":619950,"line_start":53,"line_end":53,"column_start":12,"column_end":30},"name":"index_axis_inplace","qualname":"<ArrayBase<S, IxDyn>>::index_axis_inplace","value":"pub fn index_axis_inplace(&mut Self, Axis, usize)","parent":null,"children":[],"decl_id":null,"docs":" Collapses the array to `index` along the axis and removes the axis,\n modifying the shape and strides in-place.","sig":null,"attributes":[{"value":"/ Collapses the array to `index` along the axis and removes the axis,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619414,"byte_end":619485,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ modifying the shape and strides in-place.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619490,"byte_end":619535,"line_start":39,"line_end":39,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619540,"byte_end":619543,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619548,"byte_end":619601,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619606,"byte_end":619609,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619614,"byte_end":619621,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{Axis, arr1, arr2};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619626,"byte_end":619662,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619667,"byte_end":619670,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let mut a = arr2(&[[1, 2, 3], [4, 5, 6]]).into_dyn();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619675,"byte_end":619732,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(a.shape(), &[2, 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619737,"byte_end":619772,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619777,"byte_end":619780,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ a.index_axis_inplace(Axis(1), 1);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619785,"byte_end":619822,"line_start":49,"line_end":49,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a, arr1(&[2, 5]).into_dyn());","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619827,"byte_end":619871,"line_start":50,"line_end":50,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.shape(), &[2]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619876,"byte_end":619908,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":619913,"byte_end":619920,"line_start":52,"line_end":52,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4863},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":621075,"byte_end":621078,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"sum","qualname":"<ArrayBase<S, D>>::sum","value":"pub fn sum(&Self) -> A where A: Clone + Add<Output = A> + num_traits::Zero","parent":null,"children":[],"decl_id":null,"docs":" Return the sum of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the sum of all elements in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":620846,"byte_end":620894,"line_start":24,"line_end":24,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":620899,"byte_end":620902,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":620907,"byte_end":620914,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":620919,"byte_end":620941,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":620946,"byte_end":620949,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":620954,"byte_end":620982,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":620987,"byte_end":621017,"line_start":30,"line_end":30,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.sum(), 10.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":621022,"byte_end":621051,"line_start":31,"line_end":31,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":621056,"byte_end":621063,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4865},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":621825,"byte_end":621835,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"scalar_sum","qualname":"<ArrayBase<S, D>>::scalar_sum","value":"pub fn scalar_sum(&Self) -> A where A: Clone + Add<Output = A> +\nnum_traits::Zero","parent":null,"children":[],"decl_id":null,"docs":" Return the sum of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the sum of all elements in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":621647,"byte_end":621695,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":621700,"byte_end":621703,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ *This method has been renamed to `.sum()`*","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":621708,"byte_end":621754,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"deprecated(note = \"renamed to `sum`\", since = \"0.15.0\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":621759,"byte_end":621813,"line_start":54,"line_end":54,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4866},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622372,"byte_end":622376,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"mean","qualname":"<ArrayBase<S, D>>::mean","value":"pub fn mean(&Self) -> Option<A> where A: Clone + FromPrimitive + Add<Output =\nA> + Div<Output = A> + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the [arithmetic mean] x̅ of all elements in the array:","sig":null,"attributes":[{"value":"/ Returns the [arithmetic mean] x̅ of all elements in the array:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":621949,"byte_end":622016,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622021,"byte_end":622024,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622029,"byte_end":622040,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622045,"byte_end":622058,"line_start":65,"line_end":65,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622063,"byte_end":622087,"line_start":66,"line_end":66,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622092,"byte_end":622106,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622111,"byte_end":622118,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622123,"byte_end":622126,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If the array is empty, `None` is returned.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622131,"byte_end":622177,"line_start":70,"line_end":70,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622182,"byte_end":622185,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `A::from_usize()` fails to convert the number of elements in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622190,"byte_end":622279,"line_start":72,"line_end":72,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622284,"byte_end":622287,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [arithmetic mean]: https://en.wikipedia.org/wiki/Arithmetic_mean","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622292,"byte_end":622360,"line_start":74,"line_end":74,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4867},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623025,"byte_end":623032,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"product","qualname":"<ArrayBase<S, D>>::product","value":"pub fn product(&Self) -> A where A: Clone + Mul<Output = A> + num_traits::One","parent":null,"children":[],"decl_id":null,"docs":" Return the product of all elements in the array.","sig":null,"attributes":[{"value":"/ Return the product of all elements in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622788,"byte_end":622840,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622845,"byte_end":622848,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622853,"byte_end":622860,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622865,"byte_end":622887,"line_start":92,"line_end":92,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622892,"byte_end":622895,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622900,"byte_end":622928,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/                [3., 4.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622933,"byte_end":622963,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.product(), 24.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":622968,"byte_end":623001,"line_start":96,"line_end":96,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623006,"byte_end":623013,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4869},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624752,"byte_end":624755,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"var","qualname":"<ArrayBase<S, D>>::var","value":"pub fn var(&Self, A) -> A where A: Float + FromPrimitive","parent":null,"children":[],"decl_id":null,"docs":" Return variance of elements in the array.","sig":null,"attributes":[{"value":"/ Return variance of elements in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623596,"byte_end":623641,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623646,"byte_end":623649,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The variance is computed using the [Welford one-pass","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623654,"byte_end":623710,"line_start":118,"line_end":118,"column_start":5,"column_end":61}},{"value":"/ algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623715,"byte_end":623768,"line_start":119,"line_end":119,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623773,"byte_end":623776,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623781,"byte_end":623851,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population variance, use `ddof = 0`, or to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623856,"byte_end":623928,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ calculate the sample variance, use `ddof = 1`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623933,"byte_end":623983,"line_start":123,"line_end":123,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623988,"byte_end":623991,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The variance is defined as:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":623996,"byte_end":624027,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624032,"byte_end":624035,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624040,"byte_end":624051,"line_start":127,"line_end":127,"column_start":5,"column_end":16}},{"value":"/               1       n","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624056,"byte_end":624083,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/ variance = ――――――――   ∑ (xᵢ - x̅)²","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624088,"byte_end":624148,"line_start":129,"line_end":129,"column_start":5,"column_end":43}},{"value":"/            n - ddof  i=1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624153,"byte_end":624181,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624186,"byte_end":624193,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624198,"byte_end":624201,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624206,"byte_end":624215,"line_start":133,"line_end":133,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624220,"byte_end":624223,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624228,"byte_end":624239,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624244,"byte_end":624257,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624262,"byte_end":624286,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624291,"byte_end":624305,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624310,"byte_end":624317,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624322,"byte_end":624325,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624330,"byte_end":624369,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624374,"byte_end":624377,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624382,"byte_end":624444,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624449,"byte_end":624452,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624457,"byte_end":624470,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624475,"byte_end":624478,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624483,"byte_end":624490,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624495,"byte_end":624518,"line_start":148,"line_end":148,"column_start":5,"column_end":28}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624523,"byte_end":624558,"line_start":149,"line_end":149,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624563,"byte_end":624566,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let a = array![1., -4.32, 1.14, 0.32];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624571,"byte_end":624613,"line_start":151,"line_end":151,"column_start":5,"column_end":47}},{"value":"/ let var = a.var(1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624618,"byte_end":624642,"line_start":152,"line_end":152,"column_start":5,"column_end":29}},{"value":"/ assert_abs_diff_eq!(var, 6.7331, epsilon = 1e-4);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624647,"byte_end":624700,"line_start":153,"line_end":153,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624705,"byte_end":624712,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":624717,"byte_end":624740,"line_start":155,"line_end":155,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4871},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626893,"byte_end":626896,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"std","qualname":"<ArrayBase<S, D>>::std","value":"pub fn std(&Self, A) -> A where A: Float + FromPrimitive","parent":null,"children":[],"decl_id":null,"docs":" Return standard deviation of elements in the array.","sig":null,"attributes":[{"value":"/ Return standard deviation of elements in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":625613,"byte_end":625668,"line_start":181,"line_end":181,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":625673,"byte_end":625676,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is computed from the variance using","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":625681,"byte_end":625743,"line_start":183,"line_end":183,"column_start":5,"column_end":67}},{"value":"/ the [Welford one-pass algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":625748,"byte_end":625823,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":625828,"byte_end":625831,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":625836,"byte_end":625906,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population standard deviation, use `ddof = 0`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":625911,"byte_end":625987,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ or to calculate the sample standard deviation, use `ddof = 1`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":625992,"byte_end":626058,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626063,"byte_end":626066,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is defined as:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626071,"byte_end":626112,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626117,"byte_end":626120,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626125,"byte_end":626136,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/               ⎛    1       n          ⎞","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626141,"byte_end":626188,"line_start":193,"line_end":193,"column_start":5,"column_end":48}},{"value":"/ stddev = sqrt ⎜ ――――――――   ∑ (xᵢ - x̅)²⎟","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626193,"byte_end":626263,"line_start":194,"line_end":194,"column_start":5,"column_end":49}},{"value":"/               ⎝ n - ddof  i=1         ⎠","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626268,"byte_end":626315,"line_start":195,"line_end":195,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626320,"byte_end":626327,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626332,"byte_end":626335,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626340,"byte_end":626349,"line_start":198,"line_end":198,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626354,"byte_end":626357,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626362,"byte_end":626373,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626378,"byte_end":626391,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626396,"byte_end":626420,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626425,"byte_end":626439,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626444,"byte_end":626451,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626456,"byte_end":626459,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626464,"byte_end":626503,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626508,"byte_end":626511,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626516,"byte_end":626578,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626583,"byte_end":626586,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626591,"byte_end":626604,"line_start":210,"line_end":210,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626609,"byte_end":626612,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626617,"byte_end":626624,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ use ndarray::array;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626629,"byte_end":626652,"line_start":213,"line_end":213,"column_start":5,"column_end":28}},{"value":"/ use approx::assert_abs_diff_eq;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626657,"byte_end":626692,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626697,"byte_end":626700,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let a = array![1., -4.32, 1.14, 0.32];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626705,"byte_end":626747,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ let stddev = a.std(1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626752,"byte_end":626779,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ assert_abs_diff_eq!(stddev, 2.59483, epsilon = 1e-4);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626784,"byte_end":626841,"line_start":218,"line_end":218,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626846,"byte_end":626853,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":626858,"byte_end":626881,"line_start":220,"line_end":220,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4872},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627490,"byte_end":627498,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"sum_axis","qualname":"<ArrayBase<S, D>>::sum_axis","value":"pub fn sum_axis(&Self, Axis) -> Array<A, D::Smaller> where A: Clone + Zero +\nAdd<Output = A>, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return sum along `axis`.","sig":null,"attributes":[{"value":"/ Return sum along `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627009,"byte_end":627037,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627042,"byte_end":627045,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627050,"byte_end":627057,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview0, aview1, arr2, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627062,"byte_end":627108,"line_start":231,"line_end":231,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627113,"byte_end":627116,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2., 3.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627121,"byte_end":627153,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/                [4., 5., 6.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627158,"byte_end":627192,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627197,"byte_end":627209,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/     a.sum_axis(Axis(0)) == aview1(&[5., 7., 9.]) &&","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627214,"byte_end":627269,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/     a.sum_axis(Axis(1)) == aview1(&[6., 15.]) &&","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627274,"byte_end":627326,"line_start":237,"line_end":237,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627331,"byte_end":627334,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     a.sum_axis(Axis(0)).sum_axis(Axis(0)) == aview0(&21.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627339,"byte_end":627400,"line_start":239,"line_end":239,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627405,"byte_end":627411,"line_start":240,"line_end":240,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627416,"byte_end":627423,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627428,"byte_end":627431,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":627436,"byte_end":627478,"line_start":243,"line_end":243,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4873},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628870,"byte_end":628879,"line_start":286,"line_end":286,"column_start":12,"column_end":21},"name":"mean_axis","qualname":"<ArrayBase<S, D>>::mean_axis","value":"pub fn mean_axis(&Self, Axis) -> Option<Array<A, D::Smaller>> where A: Clone +\nZero + FromPrimitive + Add<Output = A> + Div<Output = A>, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return mean along `axis`.","sig":null,"attributes":[{"value":"/ Return mean along `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628223,"byte_end":628252,"line_start":267,"line_end":267,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628257,"byte_end":628260,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Return `None` if the length of the axis is zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628265,"byte_end":628317,"line_start":269,"line_end":269,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628322,"byte_end":628325,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` is out of bounds or if `A::from_usize()`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628330,"byte_end":628395,"line_start":271,"line_end":271,"column_start":5,"column_end":70}},{"value":"/ fails for the axis length.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628400,"byte_end":628430,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628435,"byte_end":628438,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628443,"byte_end":628450,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview0, aview1, arr2, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628455,"byte_end":628501,"line_start":275,"line_end":275,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628506,"byte_end":628509,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2., 3.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628514,"byte_end":628546,"line_start":277,"line_end":277,"column_start":5,"column_end":37}},{"value":"/                [4., 5., 6.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628551,"byte_end":628585,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628590,"byte_end":628602,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/     a.mean_axis(Axis(0)).unwrap() == aview1(&[2.5, 3.5, 4.5]) &&","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628607,"byte_end":628675,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/     a.mean_axis(Axis(1)).unwrap() == aview1(&[2., 5.]) &&","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628680,"byte_end":628741,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628746,"byte_end":628749,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/     a.mean_axis(Axis(0)).unwrap().mean_axis(Axis(0)).unwrap() == aview0(&3.5)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628754,"byte_end":628835,"line_start":283,"line_end":283,"column_start":5,"column_end":86}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628840,"byte_end":628846,"line_start":284,"line_end":284,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":628851,"byte_end":628858,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4874},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630690,"byte_end":630698,"line_start":345,"line_end":345,"column_start":12,"column_end":20},"name":"var_axis","qualname":"<ArrayBase<S, D>>::var_axis","value":"pub fn var_axis(&Self, Axis, A) -> Array<A, D::Smaller> where A: Float +\nFromPrimitive, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return variance along `axis`.","sig":null,"attributes":[{"value":"/ Return variance along `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629394,"byte_end":629427,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629432,"byte_end":629435,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ The variance is computed using the [Welford one-pass","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629440,"byte_end":629496,"line_start":304,"line_end":304,"column_start":5,"column_end":61}},{"value":"/ algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629501,"byte_end":629554,"line_start":305,"line_end":305,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629559,"byte_end":629562,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629567,"byte_end":629637,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population variance, use `ddof = 0`, or to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629642,"byte_end":629714,"line_start":308,"line_end":308,"column_start":5,"column_end":77}},{"value":"/ calculate the sample variance, use `ddof = 1`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629719,"byte_end":629769,"line_start":309,"line_end":309,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629774,"byte_end":629777,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ The variance is defined as:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629782,"byte_end":629813,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629818,"byte_end":629821,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629826,"byte_end":629837,"line_start":313,"line_end":313,"column_start":5,"column_end":16}},{"value":"/               1       n","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629842,"byte_end":629869,"line_start":314,"line_end":314,"column_start":5,"column_end":32}},{"value":"/ variance = ――――――――   ∑ (xᵢ - x̅)²","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629874,"byte_end":629934,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/            n - ddof  i=1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629939,"byte_end":629967,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629972,"byte_end":629979,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629984,"byte_end":629987,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":629992,"byte_end":630001,"line_start":319,"line_end":319,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630006,"byte_end":630009,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630014,"byte_end":630025,"line_start":321,"line_end":321,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630030,"byte_end":630043,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630048,"byte_end":630072,"line_start":323,"line_end":323,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630077,"byte_end":630091,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630096,"byte_end":630103,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630108,"byte_end":630111,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630116,"byte_end":630154,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630159,"byte_end":630162,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`, if `axis`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630167,"byte_end":630240,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/ is out of bounds, or if `A::from_usize()` fails for any any of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630245,"byte_end":630315,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ numbers in the range `0..=n`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630320,"byte_end":630353,"line_start":331,"line_end":331,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630358,"byte_end":630361,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630366,"byte_end":630379,"line_start":333,"line_end":333,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630384,"byte_end":630387,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630392,"byte_end":630399,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, arr2, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630404,"byte_end":630442,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630447,"byte_end":630450,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630455,"byte_end":630483,"line_start":338,"line_end":338,"column_start":5,"column_end":33}},{"value":"/                [3., 4.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630488,"byte_end":630516,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/                [5., 6.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630521,"byte_end":630551,"line_start":340,"line_end":340,"column_start":5,"column_end":35}},{"value":"/ let var = a.var_axis(Axis(0), 1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630556,"byte_end":630594,"line_start":341,"line_end":341,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(var, aview1(&[4., 4.]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630599,"byte_end":630638,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630643,"byte_end":630650,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":630655,"byte_end":630678,"line_start":344,"line_end":344,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4876},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":633233,"byte_end":633241,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"std_axis","qualname":"<ArrayBase<S, D>>::std_axis","value":"pub fn std_axis(&Self, Axis, A) -> Array<A, D::Smaller> where A: Float +\nFromPrimitive, D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return standard deviation along `axis`.","sig":null,"attributes":[{"value":"/ Return standard deviation along `axis`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":631814,"byte_end":631857,"line_start":371,"line_end":371,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":631862,"byte_end":631865,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is computed from the variance using","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":631870,"byte_end":631932,"line_start":373,"line_end":373,"column_start":5,"column_end":67}},{"value":"/ the [Welford one-pass algorithm](https://www.jstor.org/stable/1266577).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":631937,"byte_end":632012,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632017,"byte_end":632020,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The parameter `ddof` specifies the \"delta degrees of freedom\". For","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632025,"byte_end":632095,"line_start":376,"line_end":376,"column_start":5,"column_end":75}},{"value":"/ example, to calculate the population standard deviation, use `ddof = 0`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632100,"byte_end":632176,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ or to calculate the sample standard deviation, use `ddof = 1`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632181,"byte_end":632247,"line_start":378,"line_end":378,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632252,"byte_end":632255,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The standard deviation is defined as:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632260,"byte_end":632301,"line_start":380,"line_end":380,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632306,"byte_end":632309,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632314,"byte_end":632325,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/               ⎛    1       n          ⎞","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632330,"byte_end":632377,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/ stddev = sqrt ⎜ ――――――――   ∑ (xᵢ - x̅)²⎟","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632382,"byte_end":632452,"line_start":384,"line_end":384,"column_start":5,"column_end":49}},{"value":"/               ⎝ n - ddof  i=1         ⎠","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632457,"byte_end":632504,"line_start":385,"line_end":385,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632509,"byte_end":632516,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632521,"byte_end":632524,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ where","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632529,"byte_end":632538,"line_start":388,"line_end":388,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632543,"byte_end":632546,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632551,"byte_end":632562,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/     1   n","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632567,"byte_end":632580,"line_start":391,"line_end":391,"column_start":5,"column_end":18}},{"value":"/ x̅ = ―   ∑ xᵢ","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632585,"byte_end":632609,"line_start":392,"line_end":392,"column_start":5,"column_end":22}},{"value":"/     n  i=1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632614,"byte_end":632628,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632633,"byte_end":632640,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632645,"byte_end":632648,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ and `n` is the length of the axis.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632653,"byte_end":632691,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632696,"byte_end":632699,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `ddof` is less than zero or greater than `n`, if `axis`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632704,"byte_end":632777,"line_start":398,"line_end":398,"column_start":5,"column_end":78}},{"value":"/ is out of bounds, or if `A::from_usize()` fails for any any of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632782,"byte_end":632852,"line_start":399,"line_end":399,"column_start":5,"column_end":75}},{"value":"/ numbers in the range `0..=n`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632857,"byte_end":632890,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632895,"byte_end":632898,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632903,"byte_end":632916,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632921,"byte_end":632924,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632929,"byte_end":632936,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{aview1, arr2, Axis};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632941,"byte_end":632979,"line_start":405,"line_end":405,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632984,"byte_end":632987,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":632992,"byte_end":633020,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/                [3., 4.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":633025,"byte_end":633053,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"/                [5., 6.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":633058,"byte_end":633088,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ let stddev = a.std_axis(Axis(0), 1.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":633093,"byte_end":633134,"line_start":410,"line_end":410,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stddev, aview1(&[2., 2.]));","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":633139,"byte_end":633181,"line_start":411,"line_end":411,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":633186,"byte_end":633193,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":633198,"byte_end":633221,"line_start":413,"line_end":413,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":4878},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4888}],"decl_id":null,"docs":" Linear algebra.\n","sig":null,"attributes":[{"value":"/ Linear algebra.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/mod.rs","byte_start":633786,"byte_end":633805,"line_start":9,"line_end":9,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4909},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635958,"byte_end":635961,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"dot","qualname":"<ArrayBase<S, Ix1>>::dot","value":"pub fn dot<Rhs>(&Self, &Rhs) -> <Self as Dot<Rhs>>::Output where\nSelf: Dot<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" Perform dot product or matrix multiplication of arrays `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Perform dot product or matrix multiplication of arrays `self` and `rhs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635074,"byte_end":635150,"line_start":43,"line_end":43,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635155,"byte_end":635158,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `Rhs` may be either a one-dimensional or a two-dimensional array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635163,"byte_end":635232,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635237,"byte_end":635240,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If `Rhs` is one-dimensional, then the operation is a vector dot","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635245,"byte_end":635312,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"/ product, which is the sum of the elementwise products (no conjugation","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635317,"byte_end":635390,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ of complex operands, and thus not their inner product). In this case,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635395,"byte_end":635468,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ `self` and `rhs` must be the same length.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635473,"byte_end":635518,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635523,"byte_end":635526,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ If `Rhs` is two-dimensional, then the operation is matrix","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635531,"byte_end":635592,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/ multiplication, where `self` is treated as a row vector. In this case,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635597,"byte_end":635671,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ if `self` is shape *M*, then `rhs` is shape *M* × *N* and the result is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635676,"byte_end":635752,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ shape *N*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635757,"byte_end":635771,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635776,"byte_end":635779,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the array shapes are incompatible.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635784,"byte_end":635840,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/ *Note:* If enabled, uses blas `dot` for elements of `f32, f64` when memory","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635845,"byte_end":635923,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"/ layout allows.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635928,"byte_end":635946,"line_start":59,"line_end":59,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":4915},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639166,"byte_end":639169,"line_start":162,"line_end":162,"column_start":11,"column_end":14},"name":"Dot","qualname":"::linalg::impl_linalg::Dot","value":"Dot<Rhs>","parent":null,"children":[{"krate":0,"index":4917},{"krate":0,"index":4918}],"decl_id":null,"docs":" Matrix Multiplication","sig":null,"attributes":[{"value":"/ Matrix Multiplication","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639039,"byte_end":639064,"line_start":158,"line_end":158,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639065,"byte_end":639068,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ For two-dimensional arrays, the dot method computes the matrix","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639069,"byte_end":639135,"line_start":160,"line_end":160,"column_start":1,"column_end":67}},{"value":"/ multiplication.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639136,"byte_end":639155,"line_start":161,"line_end":161,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":4917},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639288,"byte_end":639294,"line_start":166,"line_end":166,"column_start":10,"column_end":16},"name":"Output","qualname":"::linalg::impl_linalg::Dot::Output","value":"type Output;","parent":{"krate":0,"index":4915},"children":[],"decl_id":null,"docs":" The result of the operation.","sig":null,"attributes":[{"value":"/ The result of the operation.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639181,"byte_end":639213,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639218,"byte_end":639221,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ For two-dimensional arrays: a rectangular array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639226,"byte_end":639278,"line_start":165,"line_end":165,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4918},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639303,"byte_end":639306,"line_start":167,"line_end":167,"column_start":8,"column_end":11},"name":"dot","qualname":"::linalg::impl_linalg::Dot::dot","value":"pub fn dot(&Self, &Rhs) -> Self::Output","parent":{"krate":0,"index":4915},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4934},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641682,"byte_end":641685,"line_start":246,"line_end":246,"column_start":12,"column_end":15},"name":"dot","qualname":"<ArrayBase<S, Ix2>>::dot","value":"pub fn dot<Rhs>(&Self, &Rhs) -> <Self as Dot<Rhs>>::Output where\nSelf: Dot<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" Perform matrix multiplication of rectangular arrays `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Perform matrix multiplication of rectangular arrays `self` and `rhs`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640637,"byte_end":640710,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640715,"byte_end":640718,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ `Rhs` may be either a one-dimensional or a two-dimensional array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640723,"byte_end":640792,"line_start":219,"line_end":219,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640797,"byte_end":640800,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If Rhs is two-dimensional, they array shapes must agree in the way that","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640805,"byte_end":640880,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ if `self` is *M* × *N*, then `rhs` is *N* × *K*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640885,"byte_end":640939,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640944,"byte_end":640947,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Return a result array with shape *M* × *K*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640952,"byte_end":641000,"line_start":224,"line_end":224,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641005,"byte_end":641008,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ **Panics** if shapes are incompatible or the number of elements in the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641013,"byte_end":641087,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ result would overflow `isize`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641092,"byte_end":641126,"line_start":227,"line_end":227,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641131,"byte_end":641134,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ *Note:* If enabled, uses blas `gemv/gemm` for elements of `f32, f64`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641139,"byte_end":641211,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ when memory layout allows. The default matrixmultiply backend","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641216,"byte_end":641281,"line_start":230,"line_end":230,"column_start":5,"column_end":70}},{"value":"/ is otherwise used for `f32, f64` for all memory layouts.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641286,"byte_end":641346,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641351,"byte_end":641354,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641359,"byte_end":641366,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use ndarray::arr2;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641371,"byte_end":641393,"line_start":234,"line_end":234,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641398,"byte_end":641401,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let a = arr2(&[[1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641406,"byte_end":641434,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/                [0., 1.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641439,"byte_end":641469,"line_start":237,"line_end":237,"column_start":5,"column_end":35}},{"value":"/ let b = arr2(&[[1., 2.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641474,"byte_end":641502,"line_start":238,"line_end":238,"column_start":5,"column_end":33}},{"value":"/                [2., 3.]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641507,"byte_end":641537,"line_start":239,"line_end":239,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641542,"byte_end":641545,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641550,"byte_end":641562,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/     a.dot(&b) == arr2(&[[5., 8.],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641567,"byte_end":641604,"line_start":242,"line_end":242,"column_start":5,"column_end":42}},{"value":"/                         [2., 3.]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641609,"byte_end":641647,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641652,"byte_end":641658,"line_start":244,"line_end":244,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641663,"byte_end":641670,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4954},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":644775,"byte_end":644785,"line_start":348,"line_end":348,"column_start":12,"column_end":22},"name":"scaled_add","qualname":"<ArrayBase<S, D>>::scaled_add","value":"pub fn scaled_add<S2, E>(&mut Self, A, &ArrayBase<S2, E>) where S: DataMut,\nS2: Data<Elem = A>, A: LinalgScalar, E: Dimension","parent":null,"children":[],"decl_id":null,"docs":" Perform the operation `self += alpha * rhs` efficiently, where\n `alpha` is a scalar and `rhs` is another array. This operation is\n also known as `axpy` in BLAS.","sig":null,"attributes":[{"value":"/ Perform the operation `self += alpha * rhs` efficiently, where","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":644439,"byte_end":644505,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ `alpha` is a scalar and `rhs` is another array. This operation is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":644510,"byte_end":644579,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ also known as `axpy` in BLAS.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":644584,"byte_end":644617,"line_start":343,"line_end":343,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":644622,"byte_end":644625,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ If their shapes disagree, `rhs` is broadcast to the shape of `self`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":644630,"byte_end":644702,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":644707,"byte_end":644710,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ **Panics** if broadcasting isn’t possible.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":644715,"byte_end":644763,"line_start":347,"line_end":347,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":4964},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651752,"byte_end":651767,"line_start":559,"line_end":559,"column_start":8,"column_end":23},"name":"general_mat_mul","qualname":"::linalg::impl_linalg::general_mat_mul","value":"pub fn general_mat_mul<A, S1, S2,\n                       S3>(A, &ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix2>, A,\n                           &mut ArrayBase<S3, Ix2>) where S1: Data<Elem = A>,\nS2: Data<Elem = A>, S3: DataMut<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" General matrix-matrix multiplication.","sig":null,"attributes":[{"value":"/ General matrix-matrix multiplication.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651287,"byte_end":651328,"line_start":548,"line_end":548,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651329,"byte_end":651332,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ Compute C ← α A B + β C","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651333,"byte_end":651364,"line_start":550,"line_end":550,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651365,"byte_end":651368,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ The array shapes must agree in the way that","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651369,"byte_end":651416,"line_start":552,"line_end":552,"column_start":1,"column_end":48}},{"value":"/ if `a` is *M* × *N*, then `b` is *N* × *K* and `c` is *M* × *K*.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651417,"byte_end":651488,"line_start":553,"line_end":553,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651489,"byte_end":651492,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ ***Panics*** if array shapes are not compatible<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651493,"byte_end":651548,"line_start":555,"line_end":555,"column_start":1,"column_end":56}},{"value":"/ *Note:* If enabled, uses blas `gemm` for elements of `f32, f64` when memory","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651549,"byte_end":651628,"line_start":556,"line_end":556,"column_start":1,"column_end":80}},{"value":"/ layout allows.  The default matrixmultiply backend is otherwise used for","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651629,"byte_end":651705,"line_start":557,"line_end":557,"column_start":1,"column_end":77}},{"value":"/ `f32, f64` for all memory layouts.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":651706,"byte_end":651744,"line_start":558,"line_end":558,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":4969},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652691,"byte_end":652710,"line_start":591,"line_end":591,"column_start":8,"column_end":27},"name":"general_mat_vec_mul","qualname":"::linalg::impl_linalg::general_mat_vec_mul","value":"pub fn general_mat_vec_mul<A, S1, S2,\n                           S3>(A, &ArrayBase<S1, Ix2>, &ArrayBase<S2, Ix1>, A,\n                               &mut ArrayBase<S3, Ix1>) where S1: Data<Elem =\nA>, S2: Data<Elem = A>, S3: DataMut<Elem = A>, A: LinalgScalar","parent":null,"children":[],"decl_id":null,"docs":" General matrix-vector multiplication.","sig":null,"attributes":[{"value":"/ General matrix-vector multiplication.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652272,"byte_end":652313,"line_start":580,"line_end":580,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652314,"byte_end":652317,"line_start":581,"line_end":581,"column_start":1,"column_end":4}},{"value":"/ Compute y ← α A x + β y","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652318,"byte_end":652349,"line_start":582,"line_end":582,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652350,"byte_end":652353,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ where A is a *M* × *N* matrix and x is an *N*-element column vector and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652354,"byte_end":652430,"line_start":584,"line_end":584,"column_start":1,"column_end":76}},{"value":"/ y an *M*-element column vector (one dimensional arrays).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652431,"byte_end":652491,"line_start":585,"line_end":585,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652492,"byte_end":652495,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ ***Panics*** if array shapes are not compatible<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652496,"byte_end":652551,"line_start":587,"line_end":587,"column_start":1,"column_end":56}},{"value":"/ *Note:* If enabled, uses blas `gemv` for elements of `f32, f64` when memory","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652552,"byte_end":652631,"line_start":588,"line_end":588,"column_start":1,"column_end":80}},{"value":"/ layout allows.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652632,"byte_end":652650,"line_start":589,"line_end":589,"column_start":1,"column_end":19}},{"value":"allow(clippy :: collapsible_if)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":652651,"byte_end":652683,"line_start":590,"line_end":590,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":4996},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661912,"byte_end":661925,"line_start":34,"line_end":34,"column_start":11,"column_end":24},"name":"ScalarOperand","qualname":"::impl_ops::ScalarOperand","value":"ScalarOperand: 'static + Clone","parent":null,"children":[],"decl_id":null,"docs":" Elements that can be used as direct operands in arithmetic with arrays.","sig":null,"attributes":[{"value":"/ Elements that can be used as direct operands in arithmetic with arrays.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":660829,"byte_end":660904,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":660905,"byte_end":660908,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ For example, `f64` is a `ScalarOperand` which means that for an array `a`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":660909,"byte_end":660987,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ arithmetic like `a + 1.0`, and, `a * 2.`, and `a += 3.` are allowed.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":660988,"byte_end":661060,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661061,"byte_end":661064,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In the description below, let `A` be an array or array view,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661065,"byte_end":661129,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ let `B` be an array with owned data,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661130,"byte_end":661170,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ and let `C` be an array with mutable data.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661171,"byte_end":661217,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661218,"byte_end":661221,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `ScalarOperand` determines for which scalars `K` operations `&A @ K`, and `B @ K`,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661222,"byte_end":661308,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/ and `C @= K` are defined, as ***right hand side operands***, for applicable","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661309,"byte_end":661388,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ arithmetic operators (denoted `@`).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661389,"byte_end":661428,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661429,"byte_end":661432,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ***Left hand side*** scalar operands are not related to this trait","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661433,"byte_end":661503,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ (they need one `impl` per concrete scalar type); but they are still","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661504,"byte_end":661575,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ implemented for the same types, allowing operations","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661576,"byte_end":661631,"line_start":28,"line_end":28,"column_start":1,"column_end":56}},{"value":"/ `K @ &A`, and `K @ B` for primitive numeric types `K`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661632,"byte_end":661690,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661691,"byte_end":661694,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This trait ***does not*** limit which elements can be stored in an array in general.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661695,"byte_end":661783,"line_start":31,"line_end":31,"column_start":1,"column_end":89}},{"value":"/ Non-`ScalarOperand` types can still participate in arithmetic as array elements in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661784,"byte_end":661870,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ in array-array operations.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661871,"byte_end":661901,"line_start":33,"line_end":33,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5108},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679641,"byte_end":679651,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"from_shape","qualname":"<ArrayView>::from_shape","value":"pub fn from_shape<Sh>(Sh, &'a [A]) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-only array view borrowing its data from a slice.","sig":null,"attributes":[{"value":"/ Create a read-only array view borrowing its data from a slice.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":678742,"byte_end":678808,"line_start":23,"line_end":23,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":678813,"byte_end":678816,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Checks whether `shape` are compatible with the slice's","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":678821,"byte_end":678879,"line_start":25,"line_end":25,"column_start":5,"column_end":63}},{"value":"/ length, returning an `Err` if not compatible.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":678884,"byte_end":678933,"line_start":26,"line_end":26,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":678938,"byte_end":678941,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":678946,"byte_end":678953,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ use ndarray::ArrayView;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":678958,"byte_end":678985,"line_start":29,"line_end":29,"column_start":5,"column_end":32}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":678990,"byte_end":679012,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ use ndarray::ShapeBuilder;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679017,"byte_end":679047,"line_start":31,"line_end":31,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679052,"byte_end":679055,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ // advanced example where we are even specifying exact strides to use (which is optional).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679060,"byte_end":679154,"line_start":33,"line_end":33,"column_start":5,"column_end":99}},{"value":"/ let s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679159,"byte_end":679214,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/ let a = ArrayView::from_shape((2, 3, 2).strides((1, 4, 2)),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679219,"byte_end":679282,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/                               &s).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679287,"byte_end":679334,"line_start":36,"line_end":36,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679339,"byte_end":679342,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679347,"byte_end":679359,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[0, 2],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679364,"byte_end":679392,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/                  [4, 6],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679397,"byte_end":679425,"line_start":40,"line_end":40,"column_start":5,"column_end":33}},{"value":"/                  [8, 10]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679430,"byte_end":679460,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/                 [[1, 3],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679465,"byte_end":679493,"line_start":42,"line_end":42,"column_start":5,"column_end":33}},{"value":"/                  [5, 7],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679498,"byte_end":679526,"line_start":43,"line_end":43,"column_start":5,"column_end":33}},{"value":"/                  [9, 11]]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679531,"byte_end":679562,"line_start":44,"line_end":44,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679567,"byte_end":679573,"line_start":45,"line_end":45,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[1, 4, 2]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679578,"byte_end":679617,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":679622,"byte_end":679629,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5111},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682498,"byte_end":682512,"line_start":107,"line_end":107,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<ArrayView>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *const A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ArrayView<A, D>` from shape information and a raw pointer to\n the elements.","sig":null,"attributes":[{"value":"/ Create an `ArrayView<A, D>` from shape information and a raw pointer to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680262,"byte_end":680337,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ the elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680342,"byte_end":680359,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680364,"byte_end":680367,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680372,"byte_end":680384,"line_start":66,"line_end":66,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680389,"byte_end":680392,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680397,"byte_end":680461,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680466,"byte_end":680469,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ * The elements seen by moving `ptr` according to the shape and strides","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680474,"byte_end":680548,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/   must live at least as long as `'a` and must not be not mutably","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680553,"byte_end":680621,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/   aliased for the duration of `'a`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680626,"byte_end":680665,"line_start":72,"line_end":72,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680670,"byte_end":680673,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680678,"byte_end":680742,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680747,"byte_end":680781,"line_start":75,"line_end":75,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680786,"byte_end":680789,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680794,"byte_end":680865,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680870,"byte_end":680941,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":680946,"byte_end":681020,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681025,"byte_end":681028,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681033,"byte_end":681054,"line_start":81,"line_end":81,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681059,"byte_end":681062,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681067,"byte_end":681142,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681147,"byte_end":681222,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681227,"byte_end":681305,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681310,"byte_end":681388,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681393,"byte_end":681459,"line_start":87,"line_end":87,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681464,"byte_end":681467,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681472,"byte_end":681547,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681552,"byte_end":681627,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681632,"byte_end":681707,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681712,"byte_end":681781,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681786,"byte_end":681789,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681794,"byte_end":681867,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681872,"byte_end":681947,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":681952,"byte_end":682030,"line_start":96,"line_end":96,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682035,"byte_end":682110,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682115,"byte_end":682118,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682123,"byte_end":682195,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682200,"byte_end":682203,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682208,"byte_end":682243,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682248,"byte_end":682251,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682256,"byte_end":682335,"line_start":103,"line_end":103,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682340,"byte_end":682374,"line_start":104,"line_end":104,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682379,"byte_end":682382,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682387,"byte_end":682479,"line_start":106,"line_end":106,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":5117},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683649,"byte_end":683659,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_shape","qualname":"<ArrayViewMut>::from_shape","value":"pub fn from_shape<Sh>(Sh, &'a mut [A]) -> Result<Self, ShapeError> where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create a read-write array view borrowing its data from a slice.","sig":null,"attributes":[{"value":"/ Create a read-write array view borrowing its data from a slice.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682785,"byte_end":682852,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682857,"byte_end":682860,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Checks whether `dim` and `strides` are compatible with the slice's","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682865,"byte_end":682935,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ length, returning an `Err` if not compatible.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682940,"byte_end":682989,"line_start":123,"line_end":123,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682994,"byte_end":682997,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683002,"byte_end":683009,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use ndarray::ArrayViewMut;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683014,"byte_end":683044,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ use ndarray::arr3;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683049,"byte_end":683071,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/ use ndarray::ShapeBuilder;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683076,"byte_end":683106,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683111,"byte_end":683114,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut s = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683119,"byte_end":683178,"line_start":130,"line_end":130,"column_start":5,"column_end":64}},{"value":"/ let mut a = ArrayViewMut::from_shape((2, 3, 2).strides((1, 4, 2)),","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683183,"byte_end":683253,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/                                      &mut s).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683258,"byte_end":683316,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683321,"byte_end":683324,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ a[[0, 0, 0]] = 1;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683329,"byte_end":683350,"line_start":134,"line_end":134,"column_start":5,"column_end":26}},{"value":"/ assert!(","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683355,"byte_end":683367,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/     a == arr3(&[[[1, 2],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683372,"byte_end":683400,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/                  [4, 6],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683405,"byte_end":683433,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/                  [8, 10]],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683438,"byte_end":683468,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/                 [[1, 3],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683473,"byte_end":683501,"line_start":139,"line_end":139,"column_start":5,"column_end":33}},{"value":"/                  [5, 7],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683506,"byte_end":683534,"line_start":140,"line_end":140,"column_start":5,"column_end":33}},{"value":"/                  [9, 11]]])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683539,"byte_end":683570,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683575,"byte_end":683581,"line_start":142,"line_end":142,"column_start":5,"column_end":11}},{"value":"/ assert!(a.strides() == &[1, 4, 2]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683586,"byte_end":683625,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":683630,"byte_end":683637,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5120},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686509,"byte_end":686523,"line_start":204,"line_end":204,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<ArrayViewMut>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *mut A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ArrayViewMut<A, D>` from shape information and a\n raw pointer to the elements.","sig":null,"attributes":[{"value":"/ Create an `ArrayViewMut<A, D>` from shape information and a","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684282,"byte_end":684345,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/ raw pointer to the elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684350,"byte_end":684382,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684387,"byte_end":684390,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684395,"byte_end":684407,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684412,"byte_end":684415,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684420,"byte_end":684484,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684489,"byte_end":684492,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ * The elements seen by moving `ptr` according to the shape and strides","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684497,"byte_end":684571,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/   must live at least as long as `'a` and must not be aliased for the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684576,"byte_end":684648,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/   duration of `'a`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684653,"byte_end":684676,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684681,"byte_end":684684,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null and aligned, and it must be safe to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684689,"byte_end":684753,"line_start":171,"line_end":171,"column_start":5,"column_end":69}},{"value":"/   [`.offset()`] `ptr` by zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684758,"byte_end":684792,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684797,"byte_end":684800,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684805,"byte_end":684876,"line_start":174,"line_end":174,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684881,"byte_end":684952,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":684957,"byte_end":685031,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685036,"byte_end":685039,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685044,"byte_end":685065,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685070,"byte_end":685073,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685078,"byte_end":685153,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685158,"byte_end":685233,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685238,"byte_end":685316,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685321,"byte_end":685399,"line_start":183,"line_end":183,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685404,"byte_end":685470,"line_start":184,"line_end":184,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685475,"byte_end":685478,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685483,"byte_end":685558,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685563,"byte_end":685638,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685643,"byte_end":685718,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685723,"byte_end":685792,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685797,"byte_end":685800,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685805,"byte_end":685878,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685883,"byte_end":685958,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":685963,"byte_end":686041,"line_start":193,"line_end":193,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686046,"byte_end":686121,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686126,"byte_end":686129,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686134,"byte_end":686206,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686211,"byte_end":686214,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686219,"byte_end":686254,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686259,"byte_end":686262,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686267,"byte_end":686346,"line_start":200,"line_end":200,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686351,"byte_end":686385,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686390,"byte_end":686393,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686398,"byte_end":686490,"line_start":203,"line_end":203,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":5122},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686812,"byte_end":686820,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"reborrow","qualname":"<ArrayViewMut>::reborrow","value":"pub fn reborrow<'b>(Self) -> ArrayViewMut where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Convert the view into an `ArrayViewMut<'b, A, D>` where `'b` is a lifetime\n outlived by `'a'`.\n","sig":null,"attributes":[{"value":"/ Convert the view into an `ArrayViewMut<'b, A, D>` where `'b` is a lifetime","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686695,"byte_end":686773,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ outlived by `'a'`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":686778,"byte_end":686800,"line_start":212,"line_end":212,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5180},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":689555,"byte_end":689563,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"reborrow","qualname":"<ArrayView>::reborrow","value":"pub fn reborrow<'b>(Self) -> ArrayView where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Convert the view into an `ArrayView<'b, A, D>` where `'b` is a lifetime\n outlived by `'a'`.\n","sig":null,"attributes":[{"value":"/ Convert the view into an `ArrayView<'b, A, D>` where `'b` is a lifetime","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":689441,"byte_end":689516,"line_start":25,"line_end":25,"column_start":5,"column_end":80}},{"value":"/ outlived by `'a'`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":689521,"byte_end":689543,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5182},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690014,"byte_end":690022,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<ArrayView>::to_slice","value":"pub fn to_slice(&Self) -> Option<&'a [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":689708,"byte_end":689792,"line_start":34,"line_end":34,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":689797,"byte_end":689825,"line_start":35,"line_end":35,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":689830,"byte_end":689833,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Note that while the method is similar to [`ArrayBase::as_slice()`], this method tranfers","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":689838,"byte_end":689930,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ the view's lifetime to the slice, so it is a bit more powerful.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":689935,"byte_end":690002,"line_start":38,"line_end":38,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5187},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691204,"byte_end":691215,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<ArrayView>::into_scalar","value":"pub fn into_scalar(Self) -> &'a A","parent":null,"children":[],"decl_id":null,"docs":" Consume the view and return a reference to the single element in the array.","sig":null,"attributes":[{"value":"/ Consume the view and return a reference to the single element in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690638,"byte_end":690717,"line_start":60,"line_end":60,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690722,"byte_end":690725,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference matches the lifetime of the data","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690730,"byte_end":690805,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ the array view was pointing to.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690810,"byte_end":690845,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690850,"byte_end":690853,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690858,"byte_end":690865,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690870,"byte_end":690902,"line_start":66,"line_end":66,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690907,"byte_end":690910,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ // `Foo` doesn't implement `Clone`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690915,"byte_end":690954,"line_start":68,"line_end":68,"column_start":5,"column_end":44}},{"value":"/ #[derive(Debug, Eq, PartialEq)]","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690959,"byte_end":690994,"line_start":69,"line_end":69,"column_start":5,"column_end":40}},{"value":"/ struct Foo;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690999,"byte_end":691014,"line_start":70,"line_end":70,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691019,"byte_end":691022,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let array: Array0<Foo> = arr0(Foo);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691027,"byte_end":691066,"line_start":72,"line_end":72,"column_start":5,"column_end":44}},{"value":"/ let view = array.view();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691071,"byte_end":691099,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ let scalar: &Foo = view.into_scalar();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691104,"byte_end":691146,"line_start":74,"line_end":74,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(scalar, &Foo);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691151,"byte_end":691180,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691185,"byte_end":691192,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5191},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692045,"byte_end":692056,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"into_scalar","qualname":"<ArrayViewMut>::into_scalar","value":"pub fn into_scalar(Self) -> &'a mut A","parent":null,"children":[],"decl_id":null,"docs":" Consume the mutable view and return a mutable reference to the single element in the array.","sig":null,"attributes":[{"value":"/ Consume the mutable view and return a mutable reference to the single element in the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691518,"byte_end":691613,"line_start":89,"line_end":89,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691618,"byte_end":691621,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The lifetime of the returned reference matches the lifetime of the data","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691626,"byte_end":691701,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ the array view was pointing to.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691706,"byte_end":691741,"line_start":92,"line_end":92,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691746,"byte_end":691749,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691754,"byte_end":691761,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use ndarray::{arr0, Array0};","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691766,"byte_end":691798,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691803,"byte_end":691806,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let mut array: Array0<f64> = arr0(5.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691811,"byte_end":691853,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/ let view = array.view_mut();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691858,"byte_end":691890,"line_start":98,"line_end":98,"column_start":5,"column_end":37}},{"value":"/ let scalar = view.into_scalar();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691895,"byte_end":691931,"line_start":99,"line_end":99,"column_start":5,"column_end":41}},{"value":"/ *scalar = 7.;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691936,"byte_end":691953,"line_start":100,"line_end":100,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(scalar, &7.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691958,"byte_end":691986,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(array[()], 7.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691991,"byte_end":692021,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692026,"byte_end":692033,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5196},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692495,"byte_end":692505,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"into_slice","qualname":"<ArrayViewMut>::into_slice","value":"pub fn into_slice(Self) -> Option<&'a mut [A]>","parent":null,"children":[],"decl_id":null,"docs":" Return the array’s data as a slice, if it is contiguous and in standard order.\n Return `None` otherwise.","sig":null,"attributes":[{"value":"/ Return the array’s data as a slice, if it is contiguous and in standard order.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692221,"byte_end":692305,"line_start":114,"line_end":114,"column_start":5,"column_end":87}},{"value":"/ Return `None` otherwise.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692310,"byte_end":692338,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692343,"byte_end":692346,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Note that while this is similar to [`ArrayBase::as_slice_mut()`], this method tranfers the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692351,"byte_end":692445,"line_start":117,"line_end":117,"column_start":5,"column_end":99}},{"value":"/ view's lifetime to the slice.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692450,"byte_end":692483,"line_start":118,"line_end":118,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5197},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692937,"byte_end":692951,"line_start":129,"line_end":129,"column_start":12,"column_end":26},"name":"into_cell_view","qualname":"<ArrayViewMut>::into_cell_view","value":"pub fn into_cell_view(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Return a shared view of the array with elements as if they were embedded in cells.","sig":null,"attributes":[{"value":"/ Return a shared view of the array with elements as if they were embedded in cells.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692583,"byte_end":692669,"line_start":123,"line_end":123,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692674,"byte_end":692677,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The cell view itself can be copied and accessed without exclusivity.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692682,"byte_end":692754,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692759,"byte_end":692762,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The view acts \"as if\" the elements are temporarily in cells, and elements","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692767,"byte_end":692844,"line_start":127,"line_end":127,"column_start":5,"column_end":82}},{"value":"/ can be changed through shared references using the regular cell methods.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692849,"byte_end":692925,"line_start":128,"line_end":128,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":5206},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":695076,"byte_end":695091,"line_start":182,"line_end":182,"column_start":12,"column_end":27},"name":"into_outer_iter","qualname":"<ArrayView>::into_outer_iter","value":"pub fn into_outer_iter(Self) -> iter::AxisIter where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an outer iterator for this view.\n","sig":null,"attributes":[{"value":"/ Return an outer iterator for this view.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":694928,"byte_end":694971,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"This method will be replaced.\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":695011,"byte_end":695064,"line_start":181,"line_end":181,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5217},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":696582,"byte_end":696597,"line_start":231,"line_end":231,"column_start":12,"column_end":27},"name":"into_outer_iter","qualname":"<ArrayViewMut>::into_outer_iter","value":"pub fn into_outer_iter(Self) -> iter::AxisIterMut where D: RemoveAxis","parent":null,"children":[],"decl_id":null,"docs":" Return an outer iterator for this view.\n","sig":null,"attributes":[{"value":"/ Return an outer iterator for this view.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":696434,"byte_end":696477,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"This method will be replaced.\")","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":696517,"byte_end":696570,"line_start":230,"line_end":230,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":5226},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698596,"byte_end":698607,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"IndexLonger","qualname":"::impl_views::indexing::IndexLonger","value":"IndexLonger<I>","parent":null,"children":[{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231}],"decl_id":null,"docs":" Extra indexing methods for array views","sig":null,"attributes":[{"value":"/ Extra indexing methods for array views","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697182,"byte_end":697224,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697225,"byte_end":697228,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ These methods are very similar to regular indexing or calling of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697229,"byte_end":697301,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ `get`/`get_mut` methods that we can use on any array or array view. The","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697302,"byte_end":697377,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ difference here is in the length of lifetime in the resulting reference.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697378,"byte_end":697454,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697455,"byte_end":697458,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Note** that the `ArrayView` (read-only) and `ArrayViewMut` (read-write) differ","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697459,"byte_end":697543,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/ in how they are allowed implement this trait -- `ArrayView`'s implementation","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697544,"byte_end":697624,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ is usual. If you put in a `ArrayView<'a, T, D>` here, you get references","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697625,"byte_end":697701,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ `&'a T` out.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697702,"byte_end":697718,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697719,"byte_end":697722,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For `ArrayViewMut` to obey the borrowing rules we have to consume the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697723,"byte_end":697796,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ view if we call any of these methods. (The equivalent of reborrow is","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697797,"byte_end":697869,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ `.view_mut()` for read-write array views, but if you can use that,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697870,"byte_end":697940,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ then the regular indexing / `get_mut` should suffice, too.)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":697941,"byte_end":698004,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698005,"byte_end":698008,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698009,"byte_end":698016,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use ndarray::IndexLonger;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698017,"byte_end":698046,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ use ndarray::ArrayView;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698047,"byte_end":698074,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698075,"byte_end":698078,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let data = [0.; 256];","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698079,"byte_end":698104,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ let long_life_ref = {","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698105,"byte_end":698130,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/     // make a 16 × 16 array view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698131,"byte_end":698168,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/     let view = ArrayView::from(&data[..]).into_shape((16, 16)).unwrap();","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698169,"byte_end":698245,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698246,"byte_end":698249,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     // index the view and with `IndexLonger`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698250,"byte_end":698299,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/     // Note here that we get a reference with a life that is derived from","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698300,"byte_end":698377,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/     // `data`, the base data, instead of being derived from the view","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698378,"byte_end":698450,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/     IndexLonger::index(&view, [0, 1])","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698451,"byte_end":698492,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ };","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698493,"byte_end":698499,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698500,"byte_end":698503,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // view goes out of scope","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698504,"byte_end":698533,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698534,"byte_end":698537,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(long_life_ref, &0.);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698538,"byte_end":698573,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698574,"byte_end":698577,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698578,"byte_end":698585,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5228},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698721,"byte_end":698727,"line_start":52,"line_end":52,"column_start":10,"column_end":16},"name":"Output","qualname":"::impl_views::indexing::IndexLonger::Output","value":"type Output;","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" The type of the reference to the element that is produced, including\n its lifetime.\n","sig":null,"attributes":[{"value":"/ The type of the reference to the element that is produced, including","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698617,"byte_end":698689,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ its lifetime.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698694,"byte_end":698711,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5229},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699189,"byte_end":699194,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"index","qualname":"::impl_views::indexing::IndexLonger::index","value":"pub fn index(Self, I) -> Self::Output","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view.","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698733,"byte_end":698783,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698788,"byte_end":698791,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method is like `Index::index` but with a longer lifetime (matching","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698796,"byte_end":698871,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ the array view); which we can only do for the array view and not in the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698876,"byte_end":698951,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ `Index` trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698956,"byte_end":698974,"line_start":57,"line_end":57,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698979,"byte_end":698982,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ See also [the `get` method][1] which works for all arrays and array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":698987,"byte_end":699058,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ views.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699063,"byte_end":699073,"line_start":60,"line_end":60,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699078,"byte_end":699081,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.get","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699086,"byte_end":699127,"line_start":62,"line_end":62,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699132,"byte_end":699135,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ **Panics** if index is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699140,"byte_end":699181,"line_start":64,"line_end":64,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699762,"byte_end":699765,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"get","qualname":"::impl_views::indexing::IndexLonger::get","value":"pub fn get(Self, I) -> Option<Self::Output>","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view.","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699233,"byte_end":699283,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699288,"byte_end":699291,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method is like `ArrayBase::get` but with a longer lifetime (matching","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699296,"byte_end":699373,"line_start":69,"line_end":69,"column_start":5,"column_end":82}},{"value":"/ the array view); which we can only do for the array view and not in the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699378,"byte_end":699453,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ `Index` trait.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699458,"byte_end":699476,"line_start":71,"line_end":71,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699481,"byte_end":699484,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ See also [the `get` method][1] (and [`get_mut`][2]) which works for all arrays and array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699489,"byte_end":699581,"line_start":73,"line_end":73,"column_start":5,"column_end":97}},{"value":"/ views.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699586,"byte_end":699596,"line_start":74,"line_end":74,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699601,"byte_end":699604,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.get","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699609,"byte_end":699650,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ [2]: struct.ArrayBase.html#method.get_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699655,"byte_end":699700,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699705,"byte_end":699708,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ **Panics** if index is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699713,"byte_end":699754,"line_start":79,"line_end":79,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700360,"byte_end":700364,"line_start":97,"line_end":97,"column_start":15,"column_end":19},"name":"uget","qualname":"::impl_views::indexing::IndexLonger::uget","value":"pub unsafe fn uget(Self, I) -> Self::Output","parent":{"krate":0,"index":5226},"children":[],"decl_id":null,"docs":" Get a reference of a element through the view without boundary check","sig":null,"attributes":[{"value":"/ Get a reference of a element through the view without boundary check","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699812,"byte_end":699884,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699889,"byte_end":699892,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method is like `elem` with a longer lifetime (matching the array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699897,"byte_end":699970,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ view); which we can't do for general arrays.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":699975,"byte_end":700023,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700028,"byte_end":700031,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ See also [the `uget` method][1] which works for all arrays and array","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700036,"byte_end":700108,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ views.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700113,"byte_end":700123,"line_start":88,"line_end":88,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700128,"byte_end":700131,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [1]: struct.ArrayBase.html#method.uget","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700136,"byte_end":700178,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700183,"byte_end":700186,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ **Note:** only unchecked for non-debug builds of ndarray.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700191,"byte_end":700252,"line_start":92,"line_end":92,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700257,"byte_end":700260,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700265,"byte_end":700277,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700282,"byte_end":700285,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the index is in-bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":700290,"byte_end":700345,"line_start":96,"line_end":96,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5262},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708141,"byte_end":708149,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"split_at","qualname":"<ArrayView>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one view strictly before the\n split and one view after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one view strictly before the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704380,"byte_end":704457,"line_start":17,"line_end":17,"column_start":5,"column_end":82}},{"value":"/ split and one view after the split.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704462,"byte_end":704501,"line_start":18,"line_end":18,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704506,"byte_end":704509,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704514,"byte_end":704567,"line_start":20,"line_end":20,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704572,"byte_end":704575,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ **Examples:**","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704580,"byte_end":704597,"line_start":22,"line_end":22,"column_start":5,"column_end":22}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704602,"byte_end":704613,"line_start":23,"line_end":23,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704618,"byte_end":704648,"line_start":24,"line_end":24,"column_start":5,"column_end":35}},{"value":"/ let a = aview2(&[[0, 1, 2, 3],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704653,"byte_end":704687,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/                  [4, 5, 6, 7],","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704692,"byte_end":704726,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/                  [8, 9, 0, 1]]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704731,"byte_end":704767,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704772,"byte_end":704775,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704780,"byte_end":704787,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ The array view `a` has two axes and shape 3 × 4:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704792,"byte_end":704845,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704850,"byte_end":704861,"line_start":31,"line_end":31,"column_start":5,"column_end":16}},{"value":"/          ──▶ Axis(1)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704866,"byte_end":704896,"line_start":32,"line_end":32,"column_start":5,"column_end":29}},{"value":"/         ┌─────┬─────┬─────┬─────┐ 0","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704901,"byte_end":704990,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/       │ │ a₀₀ │ a₀₁ │ a₀₂ │ a₀₃ │","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704995,"byte_end":705060,"line_start":34,"line_end":34,"column_start":5,"column_end":42}},{"value":"/       ▼ ├─────┼─────┼─────┼─────┤ 1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705065,"byte_end":705156,"line_start":35,"line_end":35,"column_start":5,"column_end":44}},{"value":"/  Axis(0)│ a₁₀ │ a₁₁ │ a₁₂ │ a₁₃ │","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705161,"byte_end":705224,"line_start":36,"line_end":36,"column_start":5,"column_end":42}},{"value":"/         ├─────┼─────┼─────┼─────┤ 2","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705229,"byte_end":705318,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/         │ a₂₀ │ a₂₁ │ a₂₂ │ a₂₃ │","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705323,"byte_end":705386,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"/         └─────┴─────┴─────┴─────┘ 3 ↑","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705391,"byte_end":705484,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/         0     1     2     3     4 ← possible split_at indices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705489,"byte_end":705557,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705562,"byte_end":705569,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705574,"byte_end":705577,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Row indices increase along `Axis(0)`, and column indices increase along","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705582,"byte_end":705657,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ `Axis(1)`. Note that we split “before” an element index, and that","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705662,"byte_end":705735,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ both 0 and the endpoint are valid split indices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705740,"byte_end":705792,"line_start":45,"line_end":45,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705797,"byte_end":705800,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ **Example 1**: Split `a` along the first axis, in this case the rows, at","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705805,"byte_end":705881,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ index 2.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705886,"byte_end":705902,"line_start":48,"line_end":48,"column_start":5,"column_end":21}},{"value":"/ This produces views v1 and v2 of shapes 2 × 4 and 1 × 4:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705907,"byte_end":705969,"line_start":49,"line_end":49,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705974,"byte_end":705977,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705982,"byte_end":705993,"line_start":51,"line_end":51,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":705998,"byte_end":706028,"line_start":52,"line_end":52,"column_start":5,"column_end":35}},{"value":"/ # let a = aview2(&[[0; 4]; 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706033,"byte_end":706068,"line_start":53,"line_end":53,"column_start":5,"column_end":40}},{"value":"/ let (v1, v2) = a.split_at(Axis(0), 2);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706073,"byte_end":706115,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706120,"byte_end":706127,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706132,"byte_end":706143,"line_start":56,"line_end":56,"column_start":5,"column_end":16}},{"value":"/         ┌─────┬─────┬─────┬─────┐       0  ↓ indices","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706148,"byte_end":706256,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/         │ a₀₀ │ a₀₁ │ a₀₂ │ a₀₃ │            along Axis(0)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706261,"byte_end":706349,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/         ├─────┼─────┼─────┼─────┤ v1    1","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706354,"byte_end":706449,"line_start":59,"line_end":59,"column_start":5,"column_end":50}},{"value":"/         │ a₁₀ │ a₁₁ │ a₁₂ │ a₁₃ │","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706454,"byte_end":706517,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/         └─────┴─────┴─────┴─────┘","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706522,"byte_end":706609,"line_start":61,"line_end":61,"column_start":5,"column_end":42}},{"value":"/         ┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄       2","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706614,"byte_end":706709,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/         ┌─────┬─────┬─────┬─────┐","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706714,"byte_end":706801,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/         │ a₂₀ │ a₂₁ │ a₂₂ │ a₂₃ │ v2","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706806,"byte_end":706872,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/         └─────┴─────┴─────┴─────┘       3","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706877,"byte_end":706972,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706977,"byte_end":706984,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706989,"byte_end":706992,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ **Example 2**: Split `a` along the second axis, in this case the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":706997,"byte_end":707065,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ columns, at index 2.<br>","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707070,"byte_end":707098,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/ This produces views u1 and u2 of shapes 3 × 2 and 3 × 2:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707103,"byte_end":707166,"line_start":70,"line_end":70,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707171,"byte_end":707174,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707179,"byte_end":707190,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ # use ndarray::prelude::*;","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707195,"byte_end":707225,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/ # let a = aview2(&[[0; 4]; 3]);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707230,"byte_end":707265,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/ let (u1, u2) = a.split_at(Axis(1), 2);","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707270,"byte_end":707312,"line_start":75,"line_end":75,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707317,"byte_end":707320,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707325,"byte_end":707332,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ ```text","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707337,"byte_end":707348,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/              u1             u2","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707353,"byte_end":707387,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/         ┌─────┬─────┐┊┌─────┬─────┐","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707392,"byte_end":707485,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/         │ a₀₀ │ a₀₁ │┊│ a₀₂ │ a₀₃ │","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707490,"byte_end":707559,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/         ├─────┼─────┤┊├─────┼─────┤","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707564,"byte_end":707657,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/         │ a₁₀ │ a₁₁ │┊│ a₁₂ │ a₁₃ │","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707662,"byte_end":707731,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/         ├─────┼─────┤┊├─────┼─────┤","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707736,"byte_end":707829,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/         │ a₂₀ │ a₂₁ │┊│ a₂₂ │ a₂₃ │","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707834,"byte_end":707903,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/         └─────┴─────┘┊└─────┴─────┘","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":707908,"byte_end":708001,"line_start":86,"line_end":86,"column_start":5,"column_end":44}},{"value":"/         0     1      2      3     4  indices →","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708006,"byte_end":708058,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/                                      along Axis(1)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708063,"byte_end":708117,"line_start":88,"line_end":88,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708122,"byte_end":708129,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5267},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708694,"byte_end":708702,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"split_at","qualname":"<ArrayViewMut>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one mutable view strictly\n before the split and one mutable view after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one mutable view strictly","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708479,"byte_end":708553,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ before the split and one mutable view after the split.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708558,"byte_end":708616,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708621,"byte_end":708624,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708629,"byte_end":708682,"line_start":106,"line_end":106,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5268},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709751,"byte_end":709767,"line_start":131,"line_end":131,"column_start":12,"column_end":28},"name":"multi_slice_move","qualname":"<ArrayViewMut>::multi_slice_move","value":"pub fn multi_slice_move<M>(Self, M) -> M::Output where M: MultiSliceArg","parent":null,"children":[],"decl_id":null,"docs":" Split the view into multiple disjoint slices.","sig":null,"attributes":[{"value":"/ Split the view into multiple disjoint slices.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708938,"byte_end":708987,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708992,"byte_end":708995,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`.multi_slice_mut()`], but `.multi_slice_move()`","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709000,"byte_end":709072,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ consumes `self` and produces views with lifetimes matching that of","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709077,"byte_end":709147,"line_start":117,"line_end":117,"column_start":5,"column_end":75}},{"value":"/ `self`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709152,"byte_end":709163,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709168,"byte_end":709171,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ See [*Slicing*](#slicing) for full documentation. See also","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709176,"byte_end":709238,"line_start":120,"line_end":120,"column_start":5,"column_end":67}},{"value":"/ [`MultiSliceArg`], [`s!`], [`SliceArg`](crate::SliceArg), and","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709243,"byte_end":709308,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/ [`SliceInfo`](crate::SliceInfo).","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709313,"byte_end":709349,"line_start":122,"line_end":122,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709354,"byte_end":709357,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`.multi_slice_mut()`]: struct.ArrayBase.html#method.multi_slice_mut","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709362,"byte_end":709434,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709439,"byte_end":709442,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ **Panics** if any of the following occur:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709447,"byte_end":709492,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709497,"byte_end":709500,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ * if any of the views would intersect (i.e. if any element would appear in multiple slices)","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709505,"byte_end":709600,"line_start":128,"line_end":128,"column_start":5,"column_end":100}},{"value":"/ * if an index is out of bounds or step size is zero","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709605,"byte_end":709660,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ * if `D` is `IxDyn` and `info` does not match the number of array axes","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":709665,"byte_end":709739,"line_start":130,"line_end":130,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5307},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712762,"byte_end":712776,"line_start":68,"line_end":68,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<RawArrayView<A, D>>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *const A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `RawArrayView<A, D>` from shape information and a raw pointer\n to the elements.","sig":null,"attributes":[{"value":"/ Create an `RawArrayView<A, D>` from shape information and a raw pointer","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":710738,"byte_end":710813,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ to the elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":710818,"byte_end":710838,"line_start":29,"line_end":29,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":710843,"byte_end":710846,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":710851,"byte_end":710863,"line_start":31,"line_end":31,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":710868,"byte_end":710871,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":710876,"byte_end":710940,"line_start":33,"line_end":33,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":710945,"byte_end":710948,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null, and it must be safe to [`.offset()`] `ptr` by","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":710953,"byte_end":711028,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/   zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711033,"byte_end":711044,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711049,"byte_end":711052,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711057,"byte_end":711128,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711133,"byte_end":711204,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711209,"byte_end":711283,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711288,"byte_end":711291,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711296,"byte_end":711317,"line_start":42,"line_end":42,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711322,"byte_end":711325,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711330,"byte_end":711405,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711410,"byte_end":711485,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711490,"byte_end":711568,"line_start":46,"line_end":46,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711573,"byte_end":711651,"line_start":47,"line_end":47,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711656,"byte_end":711722,"line_start":48,"line_end":48,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711727,"byte_end":711730,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711735,"byte_end":711810,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711815,"byte_end":711890,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711895,"byte_end":711970,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":711975,"byte_end":712044,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712049,"byte_end":712052,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712057,"byte_end":712130,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712135,"byte_end":712210,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712215,"byte_end":712293,"line_start":57,"line_end":57,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712298,"byte_end":712373,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712378,"byte_end":712381,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712386,"byte_end":712458,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712463,"byte_end":712467,"line_start":61,"line_end":61,"column_start":5,"column_end":9}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712472,"byte_end":712507,"line_start":62,"line_end":62,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712512,"byte_end":712515,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712520,"byte_end":712599,"line_start":64,"line_end":64,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712604,"byte_end":712638,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712643,"byte_end":712646,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":712651,"byte_end":712743,"line_start":67,"line_end":67,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":5309},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":713849,"byte_end":713864,"line_start":96,"line_end":96,"column_start":19,"column_end":34},"name":"deref_into_view","qualname":"<RawArrayView<A, D>>::deref_into_view","value":"pub unsafe fn deref_into_view<'a>(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Converts to a read-only view of the array.","sig":null,"attributes":[{"value":"/ Converts to a read-only view of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":713481,"byte_end":713527,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":713532,"byte_end":713535,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":713540,"byte_end":713552,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":713557,"byte_end":713560,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":713565,"byte_end":713636,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":713641,"byte_end":713716,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":713721,"byte_end":713790,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":713795,"byte_end":713816,"line_start":94,"line_end":94,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":713821,"byte_end":713830,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5311},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":714305,"byte_end":714313,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawArrayView<A, D>>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one array pointer strictly\n before the split and one array pointer after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one array pointer strictly","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":714088,"byte_end":714163,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ before the split and one array pointer after the split.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":714168,"byte_end":714227,"line_start":105,"line_end":105,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":714232,"byte_end":714235,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":714240,"byte_end":714293,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5312},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715661,"byte_end":715665,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"cast","qualname":"<RawArrayView<A, D>>::cast","value":"pub fn cast<B>(Self) -> RawArrayView<B, D>","parent":null,"children":[],"decl_id":null,"docs":" Cast the raw pointer of the raw array view to a different type","sig":null,"attributes":[{"value":"/ Cast the raw pointer of the raw array view to a different type","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715186,"byte_end":715252,"line_start":131,"line_end":131,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715257,"byte_end":715260,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ **Panics** if element size is not compatible.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715265,"byte_end":715314,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715319,"byte_end":715322,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Lack of panic does not imply it is a valid cast. The cast works the same","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715327,"byte_end":715403,"line_start":135,"line_end":135,"column_start":5,"column_end":81}},{"value":"/ way as regular raw pointer casts.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715408,"byte_end":715445,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715450,"byte_end":715453,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ While this method is safe, for the same reason as regular raw pointer","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715458,"byte_end":715531,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/ casts are safe, access through the produced raw view is only possible","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715536,"byte_end":715609,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ in an unsafe block or function.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715614,"byte_end":715649,"line_start":140,"line_end":140,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5319},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718575,"byte_end":718589,"line_start":210,"line_end":210,"column_start":19,"column_end":33},"name":"from_shape_ptr","qualname":"<RawArrayViewMut<A, D>>::from_shape_ptr","value":"pub unsafe fn from_shape_ptr<Sh>(Sh, *mut A) -> Self where\nSh: Into<StrideShape<D>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `RawArrayViewMut<A, D>` from shape information and a raw\n pointer to the elements.","sig":null,"attributes":[{"value":"/ Create an `RawArrayViewMut<A, D>` from shape information and a raw","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716548,"byte_end":716618,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ pointer to the elements.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716623,"byte_end":716651,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716656,"byte_end":716659,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716664,"byte_end":716676,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716681,"byte_end":716684,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring all of the following:","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716689,"byte_end":716753,"line_start":175,"line_end":175,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716758,"byte_end":716761,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ * `ptr` must be non-null, and it must be safe to [`.offset()`] `ptr` by","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716766,"byte_end":716841,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/   zero.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716846,"byte_end":716857,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716862,"byte_end":716865,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ * It must be safe to [`.offset()`] the pointer repeatedly along all","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716870,"byte_end":716941,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/   axes and calculate the `count`s for the `.offset()` calls without","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":716946,"byte_end":717017,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/   overflow, even if the array is empty or the elements are zero-sized.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717022,"byte_end":717096,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717101,"byte_end":717104,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/   In other words,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717109,"byte_end":717130,"line_start":184,"line_end":184,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717135,"byte_end":717138,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/   * All possible pointers generated by moving along all axes must be in","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717143,"byte_end":717218,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/     bounds or one byte past the end of a single allocation with element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717223,"byte_end":717298,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/     type `A`. The only exceptions are if the array is empty or the element","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717303,"byte_end":717381,"line_start":188,"line_end":188,"column_start":5,"column_end":83}},{"value":"/     type is zero-sized. In these cases, `ptr` may be dangling, but it must","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717386,"byte_end":717464,"line_start":189,"line_end":189,"column_start":5,"column_end":83}},{"value":"/     still be safe to [`.offset()`] the pointer along the axes.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717469,"byte_end":717535,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717540,"byte_end":717543,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of bytes between the least address and greatest","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717548,"byte_end":717623,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717628,"byte_end":717703,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/     constraint prevents the computed offset, in bytes, from overflowing","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717708,"byte_end":717783,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/     `isize` regardless of the starting point due to past offsets.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717788,"byte_end":717857,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717862,"byte_end":717865,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/   * The offset in units of `A` between the least address and greatest","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717870,"byte_end":717943,"line_start":197,"line_end":197,"column_start":5,"column_end":78}},{"value":"/     address by moving along all axes must not exceed `isize::MAX`. This","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":717948,"byte_end":718023,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/     constraint prevents overflow when calculating the `count` parameter to","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718028,"byte_end":718106,"line_start":199,"line_end":199,"column_start":5,"column_end":83}},{"value":"/     [`.offset()`] regardless of the starting point due to past offsets.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718111,"byte_end":718186,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718191,"byte_end":718194,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * The product of non-zero axis lengths must not exceed `isize::MAX`.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718199,"byte_end":718271,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718276,"byte_end":718280,"line_start":203,"line_end":203,"column_start":5,"column_end":9}},{"value":"/ * Strides must be non-negative.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718285,"byte_end":718320,"line_start":204,"line_end":204,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718325,"byte_end":718328,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This function can use debug assertions to check some of these requirements,","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718333,"byte_end":718412,"line_start":206,"line_end":206,"column_start":5,"column_end":84}},{"value":"/ but it's not a complete check.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718417,"byte_end":718451,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718456,"byte_end":718459,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`.offset()`]: https://doc.rust-lang.org/stable/std/primitive.pointer.html#method.offset","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":718464,"byte_end":718556,"line_start":209,"line_end":209,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":5322},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":719867,"byte_end":719882,"line_start":244,"line_end":244,"column_start":19,"column_end":34},"name":"deref_into_view","qualname":"<RawArrayViewMut<A, D>>::deref_into_view","value":"pub unsafe fn deref_into_view<'a>(Self) -> ArrayView","parent":null,"children":[],"decl_id":null,"docs":" Converts to a read-only view of the array.","sig":null,"attributes":[{"value":"/ Converts to a read-only view of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":719499,"byte_end":719545,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":719550,"byte_end":719553,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":719558,"byte_end":719570,"line_start":237,"line_end":237,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":719575,"byte_end":719578,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":719583,"byte_end":719654,"line_start":239,"line_end":239,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":719659,"byte_end":719734,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":719739,"byte_end":719808,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":719813,"byte_end":719834,"line_start":242,"line_end":242,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":719839,"byte_end":719848,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5324},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720472,"byte_end":720491,"line_start":261,"line_end":261,"column_start":19,"column_end":38},"name":"deref_into_view_mut","qualname":"<RawArrayViewMut<A, D>>::deref_into_view_mut","value":"pub unsafe fn deref_into_view_mut<'a>(Self) -> ArrayViewMut","parent":null,"children":[],"decl_id":null,"docs":" Converts to a mutable view of the array.","sig":null,"attributes":[{"value":"/ Converts to a mutable view of the array.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720106,"byte_end":720150,"line_start":252,"line_end":252,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720155,"byte_end":720158,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720163,"byte_end":720175,"line_start":254,"line_end":254,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720180,"byte_end":720183,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ From a safety standpoint, this is equivalent to dereferencing a raw","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720188,"byte_end":720259,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/ pointer for every element in the array. You must ensure that all of the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720264,"byte_end":720339,"line_start":257,"line_end":257,"column_start":5,"column_end":80}},{"value":"/ data is valid, ensure that the pointer is aligned, and choose the","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720344,"byte_end":720413,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ correct lifetime.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720418,"byte_end":720439,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720444,"byte_end":720453,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5326},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720938,"byte_end":720946,"line_start":273,"line_end":273,"column_start":12,"column_end":20},"name":"split_at","qualname":"<RawArrayViewMut<A, D>>::split_at","value":"pub fn split_at(Self, Axis, Ix) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the array view along `axis` and return one array pointer strictly\n before the split and one array pointer after the split.","sig":null,"attributes":[{"value":"/ Split the array view along `axis` and return one array pointer strictly","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720721,"byte_end":720796,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ before the split and one array pointer after the split.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720801,"byte_end":720860,"line_start":270,"line_end":270,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720865,"byte_end":720868,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `axis` or `index` is out of bounds.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":720873,"byte_end":720926,"line_start":272,"line_end":272,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5327},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721732,"byte_end":721736,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"cast","qualname":"<RawArrayViewMut<A, D>>::cast","value":"pub fn cast<B>(Self) -> RawArrayViewMut<B, D>","parent":null,"children":[],"decl_id":null,"docs":" Cast the raw pointer of the raw array view to a different type","sig":null,"attributes":[{"value":"/ Cast the raw pointer of the raw array view to a different type","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721257,"byte_end":721323,"line_start":283,"line_end":283,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721328,"byte_end":721331,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ **Panics** if element size is not compatible.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721336,"byte_end":721385,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721390,"byte_end":721393,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Lack of panic does not imply it is a valid cast. The cast works the same","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721398,"byte_end":721474,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"/ way as regular raw pointer casts.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721479,"byte_end":721516,"line_start":288,"line_end":288,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721521,"byte_end":721524,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ While this method is safe, for the same reason as regular raw pointer","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721529,"byte_end":721602,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ casts are safe, access through the produced raw view is only possible","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721607,"byte_end":721680,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ in an unsafe block or function.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":721685,"byte_end":721720,"line_start":292,"line_end":292,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5335},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_cow.rs","byte_start":722677,"byte_end":722684,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"is_view","qualname":"<CowArray>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the array is the view (borrowed) variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the array is the view (borrowed) variant.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_cow.rs","byte_start":722601,"byte_end":722665,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5336},"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_cow.rs","byte_start":722807,"byte_end":722815,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"is_owned","qualname":"<CowArray>::is_owned","value":"pub fn is_owned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff the array is the owned variant.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff the array is the owned variant.","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_cow.rs","byte_start":722741,"byte_end":722795,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":71120,"byte_end":71133,"line_start":38,"line_end":38,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":76112,"byte_end":76121,"line_start":192,"line_end":192,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":76564,"byte_end":76573,"line_start":206,"line_end":206,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":77443,"byte_end":77452,"line_start":234,"line_end":234,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":77904,"byte_end":77913,"line_start":248,"line_end":248,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":78364,"byte_end":78373,"line_start":261,"line_end":261,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":78819,"byte_end":78828,"line_start":275,"line_end":275,"column_start":59,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":93770,"byte_end":93779,"line_start":43,"line_end":43,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":94328,"byte_end":94337,"line_start":66,"line_end":66,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":94926,"byte_end":94935,"line_start":87,"line_end":87,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":95826,"byte_end":95835,"line_start":118,"line_end":118,"column_start":62,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":96408,"byte_end":96417,"line_start":144,"line_end":144,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":96513,"byte_end":96522,"line_start":152,"line_end":152,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":96826,"byte_end":96835,"line_start":164,"line_end":164,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":97251,"byte_end":97260,"line_start":182,"line_end":182,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":98363,"byte_end":98372,"line_start":231,"line_end":231,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":98579,"byte_end":98591,"line_start":243,"line_end":243,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":98803,"byte_end":98812,"line_start":255,"line_end":255,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":99753,"byte_end":99762,"line_start":286,"line_end":286,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":99892,"byte_end":99901,"line_start":294,"line_end":294,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":100286,"byte_end":100295,"line_start":307,"line_end":307,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":100947,"byte_end":100956,"line_start":327,"line_end":327,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":101284,"byte_end":101296,"line_start":339,"line_end":339,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":101968,"byte_end":101980,"line_start":359,"line_end":359,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102217,"byte_end":102225,"line_start":370,"line_end":370,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102952,"byte_end":102953,"line_start":405,"line_end":405,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":103561,"byte_end":103570,"line_start":424,"line_end":424,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":104484,"byte_end":104493,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":107416,"byte_end":107425,"line_start":135,"line_end":135,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":107920,"byte_end":107929,"line_start":156,"line_end":156,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":108786,"byte_end":108795,"line_start":177,"line_end":177,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":108841,"byte_end":108850,"line_start":178,"line_end":178,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113698,"byte_end":113709,"line_start":154,"line_end":154,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":5366}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113976,"byte_end":113987,"line_start":168,"line_end":168,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":114152,"byte_end":114163,"line_start":174,"line_end":174,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":5367}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":114426,"byte_end":114437,"line_start":188,"line_end":188,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":114702,"byte_end":114713,"line_start":203,"line_end":203,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":114876,"byte_end":114888,"line_start":209,"line_end":209,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":5368}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":115200,"byte_end":115212,"line_start":223,"line_end":223,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":116217,"byte_end":116229,"line_start":259,"line_end":259,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":117011,"byte_end":117023,"line_start":285,"line_end":285,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":117078,"byte_end":117090,"line_start":287,"line_end":287,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":117287,"byte_end":117296,"line_start":294,"line_end":294,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":5369}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":117707,"byte_end":117716,"line_start":311,"line_end":311,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":117974,"byte_end":117983,"line_start":326,"line_end":326,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":118196,"byte_end":118205,"line_start":337,"line_end":337,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":118245,"byte_end":118254,"line_start":339,"line_end":339,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":119138,"byte_end":119146,"line_start":369,"line_end":369,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":5370}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":119406,"byte_end":119414,"line_start":383,"line_end":383,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":119646,"byte_end":119654,"line_start":393,"line_end":393,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":119820,"byte_end":119828,"line_start":399,"line_end":399,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":5371}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120098,"byte_end":120106,"line_start":413,"line_end":413,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120376,"byte_end":120384,"line_start":428,"line_end":428,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120615,"byte_end":120623,"line_start":438,"line_end":438,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121992,"byte_end":122004,"line_start":472,"line_end":472,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":122045,"byte_end":122053,"line_start":473,"line_end":473,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":122094,"byte_end":122103,"line_start":475,"line_end":475,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":122361,"byte_end":122373,"line_start":487,"line_end":487,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":122636,"byte_end":122643,"line_start":499,"line_end":499,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":5372}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":123209,"byte_end":123216,"line_start":521,"line_end":521,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":123874,"byte_end":123881,"line_start":549,"line_end":549,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":125189,"byte_end":125196,"line_start":589,"line_end":589,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":125763,"byte_end":125770,"line_start":607,"line_end":607,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126480,"byte_end":126489,"line_start":628,"line_end":628,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126643,"byte_end":126655,"line_start":636,"line_end":636,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126868,"byte_end":126879,"line_start":644,"line_end":644,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":127050,"byte_end":127061,"line_start":652,"line_end":652,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":127240,"byte_end":127248,"line_start":660,"line_end":660,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":127419,"byte_end":127427,"line_start":668,"line_end":668,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":127606,"byte_end":127613,"line_start":676,"line_end":676,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":135025,"byte_end":135031,"line_start":219,"line_end":219,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":136151,"byte_end":136157,"line_start":249,"line_end":249,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":138955,"byte_end":138965,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139899,"byte_end":139908,"line_start":59,"line_end":59,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":140034,"byte_end":140044,"line_start":66,"line_end":66,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":140186,"byte_end":140196,"line_start":74,"line_end":74,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":140223,"byte_end":140233,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":140859,"byte_end":140869,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/geomspace.rs","byte_start":142856,"byte_end":142865,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/geomspace.rs","byte_start":143461,"byte_end":143470,"line_start":48,"line_end":48,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/geomspace.rs","byte_start":143912,"byte_end":143921,"line_start":66,"line_end":66,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":148622,"byte_end":148633,"line_start":53,"line_end":53,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150262,"byte_end":150273,"line_start":112,"line_end":112,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150325,"byte_end":150332,"line_start":114,"line_end":114,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150972,"byte_end":150980,"line_start":147,"line_end":147,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":5528}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":151905,"byte_end":151912,"line_start":175,"line_end":175,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":5529},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":153949,"byte_end":153961,"line_start":271,"line_end":271,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":154764,"byte_end":154776,"line_start":303,"line_end":303,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":202723,"byte_end":202734,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":203598,"byte_end":203609,"line_start":73,"line_end":73,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":204966,"byte_end":204980,"line_start":130,"line_end":130,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":205850,"byte_end":205864,"line_start":163,"line_end":163,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":208350,"byte_end":208358,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":209162,"byte_end":209170,"line_start":60,"line_end":60,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":209449,"byte_end":209457,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":209537,"byte_end":209545,"line_start":77,"line_end":77,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":210317,"byte_end":210322,"line_start":100,"line_end":100,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":210518,"byte_end":210526,"line_start":112,"line_end":112,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":210750,"byte_end":210758,"line_start":125,"line_end":125,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":212241,"byte_end":212246,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":213290,"byte_end":213295,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":213899,"byte_end":213907,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":214584,"byte_end":214592,"line_start":130,"line_end":130,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":215341,"byte_end":215348,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":216823,"byte_end":216830,"line_start":71,"line_end":71,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":157596,"byte_end":157604,"line_start":44,"line_end":44,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":158051,"byte_end":158059,"line_start":59,"line_end":59,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":159528,"byte_end":159536,"line_start":106,"line_end":106,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":160028,"byte_end":160036,"line_start":124,"line_end":124,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":161883,"byte_end":161895,"line_start":201,"line_end":201,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":162108,"byte_end":162120,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":162588,"byte_end":162600,"line_start":229,"line_end":229,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":162970,"byte_end":162982,"line_start":243,"line_end":243,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":163672,"byte_end":163676,"line_start":279,"line_end":279,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164029,"byte_end":164036,"line_start":294,"line_end":294,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165381,"byte_end":165396,"line_start":346,"line_end":346,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":166067,"byte_end":166078,"line_start":365,"line_end":365,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":166221,"byte_end":166235,"line_start":374,"line_end":374,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":166408,"byte_end":166412,"line_start":383,"line_end":383,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":168188,"byte_end":168192,"line_start":456,"line_end":456,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":168666,"byte_end":168670,"line_start":474,"line_end":474,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":168836,"byte_end":168847,"line_start":483,"line_end":483,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":169349,"byte_end":169360,"line_start":502,"line_end":502,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":169501,"byte_end":169508,"line_start":511,"line_end":511,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":171292,"byte_end":171299,"line_start":584,"line_end":584,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":171781,"byte_end":171788,"line_start":602,"line_end":602,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":171954,"byte_end":171969,"line_start":611,"line_end":611,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":172453,"byte_end":172468,"line_start":630,"line_end":630,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":172850,"byte_end":172865,"line_start":644,"line_end":644,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":173004,"byte_end":173018,"line_start":653,"line_end":653,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":173524,"byte_end":173538,"line_start":672,"line_end":672,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":174175,"byte_end":174184,"line_start":704,"line_end":704,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":174581,"byte_end":174590,"line_start":720,"line_end":720,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":175229,"byte_end":175241,"line_start":744,"line_end":744,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":175644,"byte_end":175656,"line_start":760,"line_end":760,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":176539,"byte_end":176551,"line_start":801,"line_end":801,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":178850,"byte_end":178862,"line_start":873,"line_end":873,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179314,"byte_end":179326,"line_start":895,"line_end":895,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179642,"byte_end":179654,"line_start":910,"line_end":910,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180615,"byte_end":180623,"line_start":949,"line_end":949,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181606,"byte_end":181614,"line_start":983,"line_end":983,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181937,"byte_end":181945,"line_start":998,"line_end":998,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182149,"byte_end":182157,"line_start":1007,"line_end":1007,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":183004,"byte_end":183015,"line_start":1035,"line_end":1035,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":184010,"byte_end":184021,"line_start":1069,"line_end":1069,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":184347,"byte_end":184358,"line_start":1084,"line_end":1084,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":184562,"byte_end":184573,"line_start":1093,"line_end":1093,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":184713,"byte_end":184721,"line_start":1102,"line_end":1102,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":5748}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":186347,"byte_end":186358,"line_start":1159,"line_end":1159,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":5749}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":190519,"byte_end":190533,"line_start":1299,"line_end":1299,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":194431,"byte_end":194448,"line_start":1413,"line_end":1413,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":195838,"byte_end":195846,"line_start":1455,"line_end":1455,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":195912,"byte_end":195921,"line_start":1457,"line_end":1457,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":195987,"byte_end":195995,"line_start":1459,"line_end":1459,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196044,"byte_end":196048,"line_start":1460,"line_end":1460,"column_start":43,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196104,"byte_end":196111,"line_start":1461,"line_end":1461,"column_start":43,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196171,"byte_end":196177,"line_start":1462,"line_end":1462,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196258,"byte_end":196261,"line_start":1463,"line_end":1463,"column_start":50,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196342,"byte_end":196346,"line_start":1464,"line_end":1464,"column_start":47,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196403,"byte_end":196410,"line_start":1465,"line_end":1465,"column_start":47,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196465,"byte_end":196470,"line_start":1466,"line_end":1466,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196595,"byte_end":196606,"line_start":1468,"line_end":1468,"column_start":36,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196667,"byte_end":196679,"line_start":1469,"line_end":1469,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196743,"byte_end":196751,"line_start":1470,"line_end":1470,"column_start":39,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/layout/layoutfmt.rs","byte_start":225643,"byte_end":225649,"line_start":15,"line_end":15,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/layout/mod.rs","byte_start":218113,"byte_end":218119,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227177,"byte_end":227178,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linspace.rs","byte_start":228707,"byte_end":228715,"line_start":21,"line_end":21,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linspace.rs","byte_start":229256,"byte_end":229264,"line_start":46,"line_end":46,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linspace.rs","byte_start":229651,"byte_end":229659,"line_start":63,"line_end":63,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/logspace.rs","byte_start":231800,"byte_end":231808,"line_start":23,"line_end":23,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/logspace.rs","byte_start":232414,"byte_end":232422,"line_start":49,"line_end":49,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/logspace.rs","byte_start":232874,"byte_end":232882,"line_start":67,"line_end":67,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236023,"byte_end":236031,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236412,"byte_end":236420,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2162},{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236548,"byte_end":236556,"line_start":37,"line_end":37,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236670,"byte_end":236678,"line_start":42,"line_end":42,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236797,"byte_end":236805,"line_start":50,"line_end":50,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236936,"byte_end":236944,"line_start":58,"line_end":58,"column_start":16,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236999,"byte_end":237007,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":237441,"byte_end":237449,"line_start":75,"line_end":75,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":237590,"byte_end":237598,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242925,"byte_end":242930,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/partial.rs","byte_start":244889,"byte_end":244896,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2224}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/partial.rs","byte_start":246727,"byte_end":246734,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/partial.rs","byte_start":246774,"byte_end":246781,"line_start":80,"line_end":80,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247460,"byte_end":247465,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247765,"byte_end":247776,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":248242,"byte_end":248249,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2249},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249522,"byte_end":249527,"line_start":99,"line_end":99,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249736,"byte_end":249747,"line_start":109,"line_end":109,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2264}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":250067,"byte_end":250068,"line_start":124,"line_end":124,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":250605,"byte_end":250610,"line_start":147,"line_end":147,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251095,"byte_end":251100,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251822,"byte_end":251823,"line_start":203,"line_end":203,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2290},{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254135,"byte_end":254140,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2376},{"krate":0,"index":2377}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257413,"byte_end":257426,"line_start":132,"line_end":132,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257897,"byte_end":257910,"line_start":149,"line_end":149,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":260776,"byte_end":260781,"line_start":238,"line_end":238,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2386}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":260961,"byte_end":260974,"line_start":249,"line_end":249,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":261173,"byte_end":261186,"line_start":260,"line_end":260,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":261777,"byte_end":261790,"line_start":285,"line_end":285,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2393}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":263611,"byte_end":263620,"line_start":358,"line_end":358,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":6143}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264935,"byte_end":264944,"line_start":408,"line_end":408,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2423},{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":265625,"byte_end":265634,"line_start":437,"line_end":437,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":268257,"byte_end":268266,"line_start":518,"line_end":518,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2440},{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":268738,"byte_end":268747,"line_start":536,"line_end":536,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2445},{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":270253,"byte_end":270262,"line_start":586,"line_end":586,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":270504,"byte_end":270513,"line_start":598,"line_end":598,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":270899,"byte_end":270908,"line_start":613,"line_end":613,"column_start":29,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":271017,"byte_end":271026,"line_start":621,"line_end":621,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/split_at.rs","byte_start":284370,"byte_end":284371,"line_start":18,"line_end":18,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/split_at.rs","byte_start":284681,"byte_end":284693,"line_start":33,"line_end":33,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/split_at.rs","byte_start":284863,"byte_end":284878,"line_start":42,"line_end":42,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/low_level_util.rs","byte_start":293271,"byte_end":293283,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/low_level_util.rs","byte_start":293462,"byte_end":293474,"line_start":25,"line_end":25,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332129,"byte_end":332130,"line_start":23,"line_end":23,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":337016,"byte_end":337025,"line_start":191,"line_end":191,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":6339},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":338120,"byte_end":338132,"line_start":244,"line_end":244,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":6340},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":339231,"byte_end":339243,"line_start":297,"line_end":297,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":6341},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":340332,"byte_end":340347,"line_start":350,"line_end":350,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":6342},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":296218,"byte_end":296227,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":296416,"byte_end":296425,"line_start":90,"line_end":90,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":6344}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":300237,"byte_end":300240,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":300911,"byte_end":300914,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2805}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301812,"byte_end":301815,"line_start":263,"line_end":263,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":303000,"byte_end":303003,"line_start":308,"line_end":308,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2825},{"krate":0,"index":2828},{"krate":0,"index":2831},{"krate":0,"index":2834},{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":307564,"byte_end":307567,"line_start":439,"line_end":439,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326335,"byte_end":326344,"line_start":933,"line_end":933,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2857},{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383423,"byte_end":383438,"line_start":64,"line_end":64,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":384016,"byte_end":384020,"line_start":87,"line_end":87,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":384992,"byte_end":384996,"line_start":126,"line_end":126,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2973}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":387134,"byte_end":387138,"line_start":29,"line_end":29,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2984}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/broadcast.rs","byte_start":388815,"byte_end":388816,"line_start":45,"line_end":45,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3024}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":393642,"byte_end":393644,"line_start":47,"line_end":47,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3065},{"krate":0,"index":3066}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":393779,"byte_end":393780,"line_start":55,"line_end":55,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3069},{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":393930,"byte_end":393939,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":394084,"byte_end":394087,"line_start":74,"line_end":74,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3075},{"krate":0,"index":3076}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397504,"byte_end":397507,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":398005,"byte_end":398008,"line_start":67,"line_end":67,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":398133,"byte_end":398136,"line_start":76,"line_end":76,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":413118,"byte_end":413121,"line_start":392,"line_end":392,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":7351},{"krate":0,"index":3317},{"krate":0,"index":7353}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":414019,"byte_end":414022,"line_start":435,"line_end":435,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":7354},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":7356}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":416529,"byte_end":416532,"line_start":550,"line_end":550,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":7357},{"krate":0,"index":3367},{"krate":0,"index":7359}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":420209,"byte_end":420212,"line_start":706,"line_end":706,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383},{"krate":0,"index":7360},{"krate":0,"index":3385},{"krate":0,"index":7362}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":425225,"byte_end":425230,"line_start":878,"line_end":878,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3401},{"krate":0,"index":7410}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":426309,"byte_end":426312,"line_start":931,"line_end":931,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3403},{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":426494,"byte_end":426497,"line_start":938,"line_end":938,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":426937,"byte_end":426946,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3441},{"krate":0,"index":3442}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":427292,"byte_end":427301,"line_start":29,"line_end":29,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":427701,"byte_end":427710,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3447}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":427827,"byte_end":427836,"line_start":50,"line_end":50,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":428133,"byte_end":428142,"line_start":62,"line_end":62,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":428384,"byte_end":428393,"line_start":73,"line_end":73,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3460},{"krate":0,"index":3461}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":428589,"byte_end":428598,"line_start":83,"line_end":83,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3464}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":428806,"byte_end":428815,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":428856,"byte_end":428865,"line_start":94,"line_end":94,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3469}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":429301,"byte_end":429310,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3474}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":429726,"byte_end":429735,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3477},{"krate":0,"index":3479}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431060,"byte_end":431069,"line_start":161,"line_end":161,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3485}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431198,"byte_end":431207,"line_start":168,"line_end":168,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3487}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431337,"byte_end":431346,"line_start":175,"line_end":175,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3490},{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431526,"byte_end":431535,"line_start":185,"line_end":185,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431679,"byte_end":431688,"line_start":194,"line_end":194,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":3497}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431803,"byte_end":431812,"line_start":202,"line_end":202,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3499}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":432135,"byte_end":432138,"line_start":218,"line_end":218,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3506}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":432314,"byte_end":432319,"line_start":225,"line_end":225,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3508}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":433326,"byte_end":433327,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3571},{"krate":0,"index":3572}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":435513,"byte_end":435515,"line_start":100,"line_end":100,"column_start":30,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3591},{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":435832,"byte_end":435834,"line_start":111,"line_end":111,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3595}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ops.rs","byte_start":440423,"byte_end":440426,"line_start":30,"line_end":30,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ops.rs","byte_start":442190,"byte_end":442195,"line_start":88,"line_end":88,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":442932,"byte_end":442935,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3647}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":443102,"byte_end":443105,"line_start":27,"line_end":27,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3650}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":454369,"byte_end":454376,"line_start":9,"line_end":9,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3706},{"krate":0,"index":3707}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":454550,"byte_end":454557,"line_start":21,"line_end":21,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3710},{"krate":0,"index":3711}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":454738,"byte_end":454745,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3714}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":454913,"byte_end":454920,"line_start":43,"line_end":43,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3717},{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455111,"byte_end":455118,"line_start":55,"line_end":55,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3721},{"krate":0,"index":3722}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455316,"byte_end":455323,"line_start":67,"line_end":67,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3725}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455766,"byte_end":455773,"line_start":86,"line_end":86,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3731}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455882,"byte_end":455889,"line_start":91,"line_end":91,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3734}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":456005,"byte_end":456012,"line_start":96,"line_end":96,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":456066,"byte_end":456073,"line_start":98,"line_end":98,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3739}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":456182,"byte_end":456189,"line_start":103,"line_end":103,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3742}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":456305,"byte_end":456312,"line_start":108,"line_end":108,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/mod.rs","byte_start":352690,"byte_end":352691,"line_start":321,"line_end":321,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3780},{"krate":0,"index":3781}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52759,"byte_end":52771,"line_start":1458,"line_end":1458,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4091}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53233,"byte_end":53244,"line_start":1475,"line_end":1475,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4094}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53699,"byte_end":53707,"line_start":1493,"line_end":1493,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4097}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54090,"byte_end":54097,"line_start":1511,"line_end":1511,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4110},{"krate":0,"index":4111}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_clone.rs","byte_start":458407,"byte_end":458416,"line_start":12,"line_end":12,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4120},{"krate":0,"index":4121}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_clone.rs","byte_start":459306,"byte_end":459315,"line_start":38,"line_end":38,"column_start":48,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_internal_constructors.rs","byte_start":459776,"byte_end":459785,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4133}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_internal_constructors.rs","byte_start":460468,"byte_end":460477,"line_start":39,"line_end":39,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4138}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462537,"byte_end":462546,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467467,"byte_end":467476,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4224},{"krate":0,"index":4225}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470133,"byte_end":470142,"line_start":278,"line_end":278,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4234},{"krate":0,"index":4236},{"krate":0,"index":4238},{"krate":0,"index":4240},{"krate":0,"index":4244},{"krate":0,"index":4247},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4257},{"krate":0,"index":4259},{"krate":0,"index":4262}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483796,"byte_end":483805,"line_start":651,"line_end":651,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4268}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":485967,"byte_end":485976,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4440},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4443},{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4446},{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4466},{"krate":0,"index":4468},{"krate":0,"index":4471},{"krate":0,"index":4474},{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479},{"krate":0,"index":4480},{"krate":0,"index":4482},{"krate":0,"index":4484},{"krate":0,"index":4486},{"krate":0,"index":4489},{"krate":0,"index":4492},{"krate":0,"index":4495},{"krate":0,"index":4498},{"krate":0,"index":4500},{"krate":0,"index":4502},{"krate":0,"index":4504},{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4515},{"krate":0,"index":4516},{"krate":0,"index":4517},{"krate":0,"index":4518},{"krate":0,"index":4519},{"krate":0,"index":4520},{"krate":0,"index":4521},{"krate":0,"index":4522},{"krate":0,"index":4523},{"krate":0,"index":4524},{"krate":0,"index":4525},{"krate":0,"index":4526},{"krate":0,"index":4527},{"krate":0,"index":4528},{"krate":0,"index":4529},{"krate":0,"index":4531},{"krate":0,"index":4533},{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541},{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4556},{"krate":0,"index":4558},{"krate":0,"index":4560},{"krate":0,"index":4562},{"krate":0,"index":4563},{"krate":0,"index":4565},{"krate":0,"index":4570},{"krate":0,"index":4576},{"krate":0,"index":4577},{"krate":0,"index":4579},{"krate":0,"index":4580},{"krate":0,"index":4581},{"krate":0,"index":4582},{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4592},{"krate":0,"index":4594},{"krate":0,"index":4596},{"krate":0,"index":4601},{"krate":0,"index":4608},{"krate":0,"index":4612},{"krate":0,"index":4617},{"krate":0,"index":4621},{"krate":0,"index":4625},{"krate":0,"index":4629},{"krate":0,"index":4633},{"krate":0,"index":4635},{"krate":0,"index":4638},{"krate":0,"index":4641},{"krate":0,"index":4645},{"krate":0,"index":4648},{"krate":0,"index":4652},{"krate":0,"index":4658},{"krate":0,"index":4664},{"krate":0,"index":4666}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579546,"byte_end":579551,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4713}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":580950,"byte_end":580955,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4717}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581478,"byte_end":581483,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4720},{"krate":0,"index":4721}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585312,"byte_end":585317,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4725},{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":4733},{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4737},{"krate":0,"index":4739},{"krate":0,"index":4740},{"krate":0,"index":4741}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":604471,"byte_end":604483,"line_start":631,"line_end":631,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4750}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":611621,"byte_end":611630,"line_start":20,"line_end":20,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4778}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54933,"byte_end":54942,"line_start":1542,"line_end":1542,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4783},{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":4791}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_1d.rs","byte_start":613234,"byte_end":613243,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4806},{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615268,"byte_end":615277,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4815},{"krate":0,"index":4816},{"krate":0,"index":4817},{"krate":0,"index":4818},{"krate":0,"index":4819}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618645,"byte_end":618654,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4825},{"krate":0,"index":4826}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":620777,"byte_end":620786,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4865},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4869},{"krate":0,"index":4871},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635021,"byte_end":635030,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4909},{"krate":0,"index":4911},{"krate":0,"index":4913}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639388,"byte_end":639397,"line_start":170,"line_end":170,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4923},{"krate":0,"index":4924}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640021,"byte_end":640030,"line_start":191,"line_end":191,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4929},{"krate":0,"index":4930}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640584,"byte_end":640593,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4934}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641859,"byte_end":641868,"line_start":254,"line_end":254,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4940},{"krate":0,"index":4941}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":643761,"byte_end":643770,"line_start":314,"line_end":314,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4948},{"krate":0,"index":4949}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":644370,"byte_end":644379,"line_start":336,"line_end":336,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4954}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":662424,"byte_end":662431,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":662463,"byte_end":662470,"line_start":51,"line_end":51,"column_start":24,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":673532,"byte_end":673541,"line_start":368,"line_end":368,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5048},{"krate":0,"index":5049}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":674343,"byte_end":674352,"line_start":398,"line_end":398,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5062},{"krate":0,"index":5063}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":678692,"byte_end":678701,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5108},{"krate":0,"index":5110},{"krate":0,"index":5111}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682732,"byte_end":682744,"line_start":116,"line_end":116,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5117},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5122}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":687015,"byte_end":687024,"line_start":222,"line_end":222,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5128},{"krate":0,"index":5129}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":687859,"byte_end":687871,"line_start":245,"line_end":245,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5134},{"krate":0,"index":5135}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":689391,"byte_end":689400,"line_start":21,"line_end":21,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5180},{"krate":0,"index":5182},{"krate":0,"index":5183}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690610,"byte_end":690619,"line_start":59,"line_end":59,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5187}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691487,"byte_end":691499,"line_start":88,"line_end":88,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5191}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692168,"byte_end":692180,"line_start":110,"line_end":110,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":694512,"byte_end":694521,"line_start":161,"line_end":161,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5203},{"krate":0,"index":5204},{"krate":0,"index":5205},{"krate":0,"index":5206}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":695235,"byte_end":695247,"line_start":190,"line_end":190,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":701918,"byte_end":701930,"line_start":145,"line_end":145,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":5251},{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704330,"byte_end":704339,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5262}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708426,"byte_end":708438,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5267},{"krate":0,"index":5268}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":710154,"byte_end":710166,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5309},{"krate":0,"index":5311},{"krate":0,"index":5312}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715967,"byte_end":715982,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5319},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5324},{"krate":0,"index":5326},{"krate":0,"index":5327}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Inherent","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_cow.rs","byte_start":722552,"byte_end":722560,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5336}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_cow.rs","byte_start":722916,"byte_end":722924,"line_start":31,"line_end":31,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5341}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_cow.rs","byte_start":723268,"byte_end":723276,"line_start":44,"line_end":44,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5346}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":156866,"byte_end":156870,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1272}},{"kind":"Mod","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":8610,"byte_end":8617,"line_start":237,"line_end":237,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3873}},{"kind":"Mod","span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":56773,"byte_end":56779,"line_start":1614,"line_end":1614,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4878}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":71120,"byte_end":71133,"line_start":38,"line_end":38,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":5349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":76112,"byte_end":76121,"line_start":192,"line_end":192,"column_start":61,"column_end":70},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":76564,"byte_end":76573,"line_start":206,"line_end":206,"column_start":57,"column_end":66},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":77443,"byte_end":77452,"line_start":234,"line_end":234,"column_start":63,"column_end":72},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":8906}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":77904,"byte_end":77913,"line_start":248,"line_end":248,"column_start":63,"column_end":72},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":8908}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":78364,"byte_end":78373,"line_start":261,"line_end":261,"column_start":63,"column_end":72},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":8900}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arrayformat.rs","byte_start":78819,"byte_end":78828,"line_start":275,"line_end":275,"column_start":59,"column_end":68},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":8898}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":93770,"byte_end":93779,"line_start":43,"line_end":43,"column_start":28,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":94328,"byte_end":94337,"line_start":66,"line_end":66,"column_start":31,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":94926,"byte_end":94935,"line_start":87,"line_end":87,"column_start":54,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":95826,"byte_end":95835,"line_start":118,"line_end":118,"column_start":62,"column_end":71},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":96408,"byte_end":96417,"line_start":144,"line_end":144,"column_start":19,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":96513,"byte_end":96522,"line_start":152,"line_end":152,"column_start":31,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":96826,"byte_end":96835,"line_start":164,"line_end":164,"column_start":29,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":97251,"byte_end":97260,"line_start":182,"line_end":182,"column_start":32,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":7143}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":98363,"byte_end":98372,"line_start":231,"line_end":231,"column_start":33,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4072},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":98579,"byte_end":98591,"line_start":243,"line_end":243,"column_start":33,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":98803,"byte_end":98812,"line_start":255,"line_end":255,"column_start":31,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":99753,"byte_end":99762,"line_start":286,"line_end":286,"column_start":28,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":99892,"byte_end":99901,"line_start":294,"line_end":294,"column_start":28,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":100286,"byte_end":100295,"line_start":307,"line_end":307,"column_start":48,"column_end":57},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4072},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":100947,"byte_end":100956,"line_start":327,"line_end":327,"column_start":49,"column_end":58},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4072},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":101284,"byte_end":101296,"line_start":339,"line_end":339,"column_start":52,"column_end":64},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":101968,"byte_end":101980,"line_start":359,"line_end":359,"column_start":53,"column_end":65},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102217,"byte_end":102225,"line_start":370,"line_end":370,"column_start":34,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4062},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102854,"byte_end":102858,"line_start":400,"line_end":400,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2756},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":102952,"byte_end":102953,"line_start":405,"line_end":405,"column_start":45,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":566},"to":{"krate":0,"index":558}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/arraytraits.rs","byte_start":103561,"byte_end":103570,"line_start":424,"line_end":424,"column_start":27,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":104484,"byte_end":104493,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":107416,"byte_end":107425,"line_start":135,"line_end":135,"column_start":19,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5357},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":107920,"byte_end":107929,"line_start":156,"line_end":156,"column_start":18,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":5357},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":108786,"byte_end":108795,"line_start":177,"line_end":177,"column_start":25,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":5357},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_repr.rs","byte_start":108841,"byte_end":108850,"line_start":178,"line_end":178,"column_start":25,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":5357},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":109991,"byte_end":109996,"line_start":30,"line_end":30,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":675}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":110477,"byte_end":110484,"line_start":50,"line_end":50,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":675},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":111412,"byte_end":111419,"line_start":77,"line_end":77,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":675},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":112033,"byte_end":112040,"line_start":99,"line_end":99,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":675},"to":{"krate":0,"index":686}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113212,"byte_end":113216,"line_start":134,"line_end":134,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":686},"to":{"krate":0,"index":691}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113219,"byte_end":113229,"line_start":134,"line_end":134,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":679},"to":{"krate":0,"index":691}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113698,"byte_end":113709,"line_start":154,"line_end":154,"column_start":28,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":7761},"to":{"krate":0,"index":675}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":113976,"byte_end":113987,"line_start":168,"line_end":168,"column_start":33,"column_end":44},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":7761},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":114152,"byte_end":114163,"line_start":174,"line_end":174,"column_start":28,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":7761},"to":{"krate":0,"index":675}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":114426,"byte_end":114437,"line_start":188,"line_end":188,"column_start":31,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":7761},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":114702,"byte_end":114713,"line_start":203,"line_end":203,"column_start":33,"column_end":44},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":7761},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":114876,"byte_end":114888,"line_start":209,"line_end":209,"column_start":28,"column_end":40},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":7754},"to":{"krate":0,"index":675}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":115200,"byte_end":115212,"line_start":223,"line_end":223,"column_start":31,"column_end":43},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":7754},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":116217,"byte_end":116229,"line_start":259,"line_end":259,"column_start":25,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":7754},"to":{"krate":0,"index":686}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":117011,"byte_end":117023,"line_start":285,"line_end":285,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":7754},"to":{"krate":0,"index":691}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":117078,"byte_end":117090,"line_start":287,"line_end":287,"column_start":33,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":7754},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":117287,"byte_end":117296,"line_start":294,"line_end":294,"column_start":28,"column_end":37},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5357},"to":{"krate":0,"index":675}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":117707,"byte_end":117716,"line_start":311,"line_end":311,"column_start":31,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5357},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":117974,"byte_end":117983,"line_start":326,"line_end":326,"column_start":25,"column_end":34},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5357},"to":{"krate":0,"index":686}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":118196,"byte_end":118205,"line_start":337,"line_end":337,"column_start":28,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5357},"to":{"krate":0,"index":691}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":118245,"byte_end":118254,"line_start":339,"line_end":339,"column_start":33,"column_end":42},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5357},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":119138,"byte_end":119146,"line_start":369,"line_end":369,"column_start":32,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":675}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":119406,"byte_end":119414,"line_start":383,"line_end":383,"column_start":29,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":686}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":119646,"byte_end":119654,"line_start":393,"line_end":393,"column_start":37,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":119820,"byte_end":119828,"line_start":399,"line_end":399,"column_start":32,"column_end":40},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":675}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120098,"byte_end":120106,"line_start":413,"line_end":413,"column_start":35,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120376,"byte_end":120384,"line_start":428,"line_end":428,"column_start":29,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":686}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":120615,"byte_end":120623,"line_start":438,"line_end":438,"column_start":32,"column_end":40},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":691}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121338,"byte_end":121342,"line_start":452,"line_end":452,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":686},"to":{"krate":0,"index":792}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121930,"byte_end":121935,"line_start":470,"line_end":470,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":796}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121938,"byte_end":121942,"line_start":470,"line_end":470,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":686},"to":{"krate":0,"index":796}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121945,"byte_end":121957,"line_start":470,"line_end":470,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":683},"to":{"krate":0,"index":796}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":121992,"byte_end":122004,"line_start":472,"line_end":472,"column_start":31,"column_end":43},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":7754},"to":{"krate":0,"index":796}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":122045,"byte_end":122053,"line_start":473,"line_end":473,"column_start":35,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":796}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":122094,"byte_end":122103,"line_start":475,"line_end":475,"column_start":30,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5357},"to":{"krate":0,"index":792}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":122361,"byte_end":122373,"line_start":487,"line_end":487,"column_start":30,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":7754},"to":{"krate":0,"index":792}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":122636,"byte_end":122643,"line_start":499,"line_end":499,"column_start":32,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4098},"to":{"krate":0,"index":675}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":123209,"byte_end":123216,"line_start":521,"line_end":521,"column_start":35,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4098},"to":{"krate":0,"index":679}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":123874,"byte_end":123881,"line_start":549,"line_end":549,"column_start":37,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4098},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":125189,"byte_end":125196,"line_start":589,"line_end":589,"column_start":29,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4098},"to":{"krate":0,"index":686}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":125763,"byte_end":125770,"line_start":607,"line_end":607,"column_start":32,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4098},"to":{"krate":0,"index":691}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126061,"byte_end":126068,"line_start":615,"line_end":615,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":675},"to":{"krate":0,"index":837}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126480,"byte_end":126489,"line_start":628,"line_end":628,"column_start":32,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5357},"to":{"krate":0,"index":837}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126643,"byte_end":126655,"line_start":636,"line_end":636,"column_start":32,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":7754},"to":{"krate":0,"index":837}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":126868,"byte_end":126879,"line_start":644,"line_end":644,"column_start":32,"column_end":43},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":7761},"to":{"krate":0,"index":837}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":127050,"byte_end":127061,"line_start":652,"line_end":652,"column_start":32,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":7761},"to":{"krate":0,"index":837}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":127240,"byte_end":127248,"line_start":660,"line_end":660,"column_start":44,"column_end":52},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":837}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":127419,"byte_end":127427,"line_start":668,"line_end":668,"column_start":44,"column_end":52},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":7769},"to":{"krate":0,"index":837}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/data_traits.rs","byte_start":127606,"byte_end":127613,"line_start":676,"line_end":676,"column_start":44,"column_end":51},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4098},"to":{"krate":0,"index":837}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":135025,"byte_end":135031,"line_start":219,"line_end":219,"column_start":29,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/free_functions.rs","byte_start":136151,"byte_end":136157,"line_start":249,"line_end":249,"column_start":32,"column_end":38},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":138955,"byte_end":138965,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":139899,"byte_end":139908,"line_start":59,"line_end":59,"column_start":20,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5479},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":140034,"byte_end":140044,"line_start":66,"line_end":66,"column_start":20,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5475},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":140186,"byte_end":140196,"line_start":74,"line_end":74,"column_start":16,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5475},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":140223,"byte_end":140233,"line_start":76,"line_end":76,"column_start":23,"column_end":33},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5475},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/error.rs","byte_start":140859,"byte_end":140869,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5475},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/geomspace.rs","byte_start":142856,"byte_end":142865,"line_start":22,"line_end":22,"column_start":22,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1026},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/geomspace.rs","byte_start":143461,"byte_end":143470,"line_start":48,"line_end":48,"column_start":33,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1026},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/geomspace.rs","byte_start":143912,"byte_end":143921,"line_start":66,"line_end":66,"column_start":31,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1026},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":148622,"byte_end":148633,"line_start":53,"line_end":53,"column_start":22,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5498},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150262,"byte_end":150273,"line_start":112,"line_end":112,"column_start":31,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5498},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150325,"byte_end":150332,"line_start":114,"line_end":114,"column_start":26,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5505},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":150972,"byte_end":150980,"line_start":147,"line_end":147,"column_start":20,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5517},"to":{"krate":0,"index":2604}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":151905,"byte_end":151912,"line_start":175,"line_end":175,"column_start":42,"column_end":49},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5505},"to":{"krate":0,"index":2590}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":153949,"byte_end":153961,"line_start":271,"line_end":271,"column_start":22,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5530},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/indexes.rs","byte_start":154764,"byte_end":154776,"line_start":303,"line_end":303,"column_start":31,"column_end":43},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5530},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":202723,"byte_end":202734,"line_start":40,"line_end":40,"column_start":27,"column_end":38},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":203598,"byte_end":203609,"line_start":73,"line_end":73,"column_start":33,"column_end":44},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1156},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":204966,"byte_end":204980,"line_start":130,"line_end":130,"column_start":27,"column_end":41},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/chunks.rs","byte_start":205850,"byte_end":205864,"line_start":163,"line_end":163,"column_start":33,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":208350,"byte_end":208358,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":209162,"byte_end":209170,"line_start":60,"line_end":60,"column_start":36,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":209449,"byte_end":209457,"line_start":73,"line_end":73,"column_start":45,"column_end":53},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":209537,"byte_end":209545,"line_start":77,"line_end":77,"column_start":21,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1227},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":210317,"byte_end":210322,"line_start":100,"line_end":100,"column_start":29,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4065},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":210518,"byte_end":210526,"line_start":112,"line_end":112,"column_start":29,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4062},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/into_iter.rs","byte_start":210750,"byte_end":210758,"line_start":125,"line_end":125,"column_start":29,"column_end":37},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4068},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":212241,"byte_end":212246,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":213290,"byte_end":213295,"line_start":79,"line_end":79,"column_start":33,"column_end":38},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1353},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":213899,"byte_end":213907,"line_start":103,"line_end":103,"column_start":27,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/lanes.rs","byte_start":214584,"byte_end":214592,"line_start":130,"line_end":130,"column_start":33,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1373},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":215341,"byte_end":215348,"line_start":17,"line_end":17,"column_start":27,"column_end":34},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/windows.rs","byte_start":216823,"byte_end":216830,"line_start":71,"line_end":71,"column_start":33,"column_end":40},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1407},"to":{"krate":2,"index":7147}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":157596,"byte_end":157604,"line_start":44,"line_end":44,"column_start":23,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":158051,"byte_end":158059,"line_start":59,"line_end":59,"column_start":36,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":159528,"byte_end":159536,"line_start":106,"line_end":106,"column_start":49,"column_end":57},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":160028,"byte_end":160036,"line_start":124,"line_end":124,"column_start":33,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":161883,"byte_end":161895,"line_start":201,"line_end":201,"column_start":27,"column_end":39},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":162108,"byte_end":162120,"line_start":210,"line_end":210,"column_start":40,"column_end":52},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1598},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":162588,"byte_end":162600,"line_start":229,"line_end":229,"column_start":37,"column_end":49},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1598},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":162970,"byte_end":162982,"line_start":243,"line_end":243,"column_start":38,"column_end":50},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1598},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":163672,"byte_end":163676,"line_start":279,"line_end":279,"column_start":16,"column_end":20},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":164029,"byte_end":164036,"line_start":294,"line_end":294,"column_start":16,"column_end":23},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":165381,"byte_end":165396,"line_start":346,"line_end":346,"column_start":27,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":166067,"byte_end":166078,"line_start":365,"line_end":365,"column_start":16,"column_end":27},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":166221,"byte_end":166235,"line_start":374,"line_end":374,"column_start":16,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":166408,"byte_end":166412,"line_start":383,"line_end":383,"column_start":40,"column_end":44},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1593},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":168188,"byte_end":168192,"line_start":456,"line_end":456,"column_start":37,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1593},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":168666,"byte_end":168670,"line_start":474,"line_end":474,"column_start":38,"column_end":42},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1593},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":168836,"byte_end":168847,"line_start":483,"line_end":483,"column_start":40,"column_end":51},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5699},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":169349,"byte_end":169360,"line_start":502,"line_end":502,"column_start":38,"column_end":49},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5699},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":169501,"byte_end":169508,"line_start":511,"line_end":511,"column_start":40,"column_end":47},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1604},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":171292,"byte_end":171299,"line_start":584,"line_end":584,"column_start":37,"column_end":44},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1604},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":171781,"byte_end":171788,"line_start":602,"line_end":602,"column_start":38,"column_end":45},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1604},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":171954,"byte_end":171969,"line_start":611,"line_end":611,"column_start":40,"column_end":55},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1609},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":172453,"byte_end":172468,"line_start":630,"line_end":630,"column_start":37,"column_end":52},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1609},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":172850,"byte_end":172865,"line_start":644,"line_end":644,"column_start":38,"column_end":53},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1609},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":173004,"byte_end":173018,"line_start":653,"line_end":653,"column_start":40,"column_end":54},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1620},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":173524,"byte_end":173538,"line_start":672,"line_end":672,"column_start":38,"column_end":52},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1620},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":174175,"byte_end":174184,"line_start":704,"line_end":704,"column_start":29,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1764},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":174581,"byte_end":174590,"line_start":720,"line_end":720,"column_start":38,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1764},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":175229,"byte_end":175241,"line_start":744,"line_end":744,"column_start":29,"column_end":41},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1785},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":175644,"byte_end":175656,"line_start":760,"line_end":760,"column_start":38,"column_end":50},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1785},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":176539,"byte_end":176551,"line_start":801,"line_end":801,"column_start":23,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":178850,"byte_end":178862,"line_start":873,"line_end":873,"column_start":25,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5715},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179314,"byte_end":179326,"line_start":895,"line_end":895,"column_start":36,"column_end":48},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5715},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":179642,"byte_end":179654,"line_start":910,"line_end":910,"column_start":34,"column_end":46},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5715},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":180615,"byte_end":180623,"line_start":949,"line_end":949,"column_start":27,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181606,"byte_end":181614,"line_start":983,"line_end":983,"column_start":29,"column_end":37},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5732},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":181937,"byte_end":181945,"line_start":998,"line_end":998,"column_start":40,"column_end":48},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5732},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":182149,"byte_end":182157,"line_start":1007,"line_end":1007,"column_start":38,"column_end":46},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5732},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":183004,"byte_end":183015,"line_start":1035,"line_end":1035,"column_start":27,"column_end":38},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":184010,"byte_end":184021,"line_start":1069,"line_end":1069,"column_start":29,"column_end":40},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1858},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":184347,"byte_end":184358,"line_start":1084,"line_end":1084,"column_start":40,"column_end":51},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1858},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":184562,"byte_end":184573,"line_start":1093,"line_end":1093,"column_start":38,"column_end":49},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1858},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":184713,"byte_end":184721,"line_start":1102,"line_end":1102,"column_start":42,"column_end":50},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5732},"to":{"krate":0,"index":2590}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":186347,"byte_end":186358,"line_start":1159,"line_end":1159,"column_start":42,"column_end":53},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1858},"to":{"krate":0,"index":2590}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":190519,"byte_end":190533,"line_start":1299,"line_end":1299,"column_start":27,"column_end":41},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":194431,"byte_end":194448,"line_start":1413,"line_end":1413,"column_start":27,"column_end":44},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":195838,"byte_end":195846,"line_start":1455,"line_end":1455,"column_start":36,"column_end":44},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2094},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":195912,"byte_end":195921,"line_start":1457,"line_end":1457,"column_start":36,"column_end":45},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1026},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":195987,"byte_end":195995,"line_start":1459,"line_end":1459,"column_start":36,"column_end":44},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2118},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196044,"byte_end":196048,"line_start":1460,"line_end":1460,"column_start":43,"column_end":47},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1593},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196104,"byte_end":196111,"line_start":1461,"line_end":1461,"column_start":43,"column_end":50},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1604},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196171,"byte_end":196177,"line_start":1462,"line_end":1462,"column_start":47,"column_end":53},"kind":{"Impl":{"id":169}},"from":{"krate":2,"index":39073},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196258,"byte_end":196261,"line_start":1463,"line_end":1463,"column_start":50,"column_end":53},"kind":{"Impl":{"id":170}},"from":{"krate":2,"index":39172},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196342,"byte_end":196346,"line_start":1464,"line_end":1464,"column_start":47,"column_end":51},"kind":{"Impl":{"id":171}},"from":{"krate":2,"index":9637},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196403,"byte_end":196410,"line_start":1465,"line_end":1465,"column_start":47,"column_end":54},"kind":{"Impl":{"id":172}},"from":{"krate":2,"index":9661},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196465,"byte_end":196470,"line_start":1466,"line_end":1466,"column_start":45,"column_end":50},"kind":{"Impl":{"id":173}},"from":{"krate":2,"index":38528},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196595,"byte_end":196606,"line_start":1468,"line_end":1468,"column_start":36,"column_end":47},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5498},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196667,"byte_end":196679,"line_start":1469,"line_end":1469,"column_start":36,"column_end":48},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5530},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/iterators/mod.rs","byte_start":196743,"byte_end":196751,"line_start":1470,"line_end":1470,"column_start":39,"column_end":47},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1227},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/layout/layoutfmt.rs","byte_start":225643,"byte_end":225649,"line_start":15,"line_end":15,"column_start":21,"column_end":27},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5899},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/layout/mod.rs","byte_start":218113,"byte_end":218119,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5899},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227021,"byte_end":227025,"line_start":28,"line_end":28,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227032,"byte_end":227036,"line_start":29,"line_end":29,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":18,"index":497},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227043,"byte_end":227046,"line_start":30,"line_end":30,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":18,"index":507},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227053,"byte_end":227056,"line_start":31,"line_end":31,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2920},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227078,"byte_end":227081,"line_start":32,"line_end":32,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2925},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227103,"byte_end":227106,"line_start":33,"line_end":33,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227128,"byte_end":227131,"line_start":34,"line_end":34,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2935},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227177,"byte_end":227178,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2086},"to":{"krate":0,"index":2084}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227773,"byte_end":227778,"line_start":60,"line_end":60,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":18,"index":424},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227785,"byte_end":227794,"line_start":61,"line_end":61,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2951},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227801,"byte_end":227810,"line_start":62,"line_end":62,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2955},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227817,"byte_end":227826,"line_start":63,"line_end":63,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2959},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227833,"byte_end":227842,"line_start":64,"line_end":64,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2963},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227849,"byte_end":227858,"line_start":65,"line_end":65,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2967},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227870,"byte_end":227877,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":8894},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227889,"byte_end":227894,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227906,"byte_end":227914,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":8906},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227926,"byte_end":227934,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":8908},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227941,"byte_end":227954,"line_start":70,"line_end":70,"column_start":7,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":4996},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227961,"byte_end":227973,"line_start":71,"line_end":71,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":2084},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227980,"byte_end":227984,"line_start":72,"line_end":72,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg_traits.rs","byte_start":227991,"byte_end":227995,"line_start":73,"line_end":73,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":2087}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linspace.rs","byte_start":228707,"byte_end":228715,"line_start":21,"line_end":21,"column_start":22,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linspace.rs","byte_start":229256,"byte_end":229264,"line_start":46,"line_end":46,"column_start":33,"column_end":41},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linspace.rs","byte_start":229651,"byte_end":229659,"line_start":63,"line_end":63,"column_start":31,"column_end":39},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/logspace.rs","byte_start":231800,"byte_end":231808,"line_start":23,"line_end":23,"column_start":22,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2118},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/logspace.rs","byte_start":232414,"byte_end":232422,"line_start":49,"line_end":49,"column_start":33,"column_end":41},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2118},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/logspace.rs","byte_start":232874,"byte_end":232882,"line_start":67,"line_end":67,"column_start":31,"column_end":39},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2118},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236023,"byte_end":236031,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236412,"byte_end":236420,"line_start":31,"line_end":31,"column_start":19,"column_end":27},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5905},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236548,"byte_end":236556,"line_start":37,"line_end":37,"column_start":22,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5905},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236670,"byte_end":236678,"line_start":42,"line_end":42,"column_start":19,"column_end":27},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5905},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236797,"byte_end":236805,"line_start":50,"line_end":50,"column_start":23,"column_end":31},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5905},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236936,"byte_end":236944,"line_start":58,"line_end":58,"column_start":16,"column_end":24},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5905},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":236999,"byte_end":237007,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5905},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":237441,"byte_end":237449,"line_start":75,"line_end":75,"column_start":17,"column_end":25},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5905},"to":{"krate":2,"index":2540}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/math_cell.rs","byte_start":237590,"byte_end":237598,"line_start":83,"line_end":83,"column_start":24,"column_end":32},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5905},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/order.rs","byte_start":242925,"byte_end":242930,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/partial.rs","byte_start":244889,"byte_end":244896,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/partial.rs","byte_start":246727,"byte_end":246734,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2217},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/partial.rs","byte_start":246774,"byte_end":246781,"line_start":80,"line_end":80,"column_start":18,"column_end":25},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2217},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247460,"byte_end":247465,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":247765,"byte_end":247776,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":248242,"byte_end":248249,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249522,"byte_end":249527,"line_start":99,"line_end":99,"column_start":21,"column_end":26},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5928},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":249736,"byte_end":249747,"line_start":109,"line_end":109,"column_start":24,"column_end":35},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5946},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":250067,"byte_end":250068,"line_start":124,"line_end":124,"column_start":26,"column_end":27},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2266},"to":{"krate":0,"index":2251}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":250605,"byte_end":250610,"line_start":147,"line_end":147,"column_start":26,"column_end":31},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5928},"to":{"krate":0,"index":2251}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251095,"byte_end":251100,"line_start":175,"line_end":175,"column_start":9,"column_end":14},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/shape_builder.rs","byte_start":251822,"byte_end":251823,"line_start":203,"line_end":203,"column_start":22,"column_end":23},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2289},"to":{"krate":0,"index":2285}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":254135,"byte_end":254140,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257413,"byte_end":257426,"line_start":132,"line_end":132,"column_start":6,"column_end":19},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":6001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":257897,"byte_end":257910,"line_start":149,"line_end":149,"column_start":23,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":6001},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":260776,"byte_end":260781,"line_start":238,"line_end":238,"column_start":26,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5975},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":260961,"byte_end":260974,"line_start":249,"line_end":249,"column_start":26,"column_end":39},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":6001},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":261173,"byte_end":261186,"line_start":260,"line_end":260,"column_start":22,"column_end":35},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":6001},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":261777,"byte_end":261790,"line_start":285,"line_end":285,"column_start":24,"column_end":37},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":6001},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":262296,"byte_end":262301,"line_start":298,"line_end":298,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2750},"to":{"krate":0,"index":2394}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":263611,"byte_end":263620,"line_start":358,"line_end":358,"column_start":47,"column_end":56},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6145},"to":{"krate":0,"index":2394}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":264935,"byte_end":264944,"line_start":408,"line_end":408,"column_start":30,"column_end":39},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6145},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":265625,"byte_end":265634,"line_start":437,"line_end":437,"column_start":20,"column_end":29},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":268257,"byte_end":268266,"line_start":518,"line_end":518,"column_start":54,"column_end":63},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":6145},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":268738,"byte_end":268747,"line_start":536,"line_end":536,"column_start":49,"column_end":58},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6145},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":270253,"byte_end":270262,"line_start":586,"line_end":586,"column_start":47,"column_end":56},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":6145},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":270504,"byte_end":270513,"line_start":598,"line_end":598,"column_start":9,"column_end":18},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6145},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":270899,"byte_end":270908,"line_start":613,"line_end":613,"column_start":29,"column_end":38},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6145},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/slice.rs","byte_start":271017,"byte_end":271026,"line_start":621,"line_end":621,"column_start":30,"column_end":39},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":6145},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/split_at.rs","byte_start":284106,"byte_end":284113,"line_start":9,"line_end":9,"column_start":36,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":2506},"to":{"krate":0,"index":2508}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/split_at.rs","byte_start":284370,"byte_end":284371,"line_start":18,"line_end":18,"column_start":21,"column_end":22},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2513},"to":{"krate":0,"index":2506}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/split_at.rs","byte_start":284681,"byte_end":284693,"line_start":33,"line_end":33,"column_start":28,"column_end":40},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4076},"to":{"krate":0,"index":2506}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/split_at.rs","byte_start":284863,"byte_end":284878,"line_start":42,"line_end":42,"column_start":24,"column_end":39},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4083},"to":{"krate":0,"index":2506}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/low_level_util.rs","byte_start":293271,"byte_end":293283,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/low_level_util.rs","byte_start":293462,"byte_end":293474,"line_start":25,"line_end":25,"column_start":15,"column_end":27},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":332129,"byte_end":332130,"line_start":23,"line_end":23,"column_start":28,"column_end":29},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2585},"to":{"krate":0,"index":2579}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":334545,"byte_end":334549,"line_start":99,"line_end":99,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":2604}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":337016,"byte_end":337025,"line_start":191,"line_end":191,"column_start":42,"column_end":51},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4072},"to":{"krate":0,"index":2590}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":338120,"byte_end":338132,"line_start":244,"line_end":244,"column_start":42,"column_end":54},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4076},"to":{"krate":0,"index":2590}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":339231,"byte_end":339243,"line_start":297,"line_end":297,"column_start":38,"column_end":50},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4080},"to":{"krate":0,"index":2590}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/ndproducer.rs","byte_start":340332,"byte_end":340347,"line_start":350,"line_end":350,"column_start":38,"column_end":53},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4083},"to":{"krate":0,"index":2590}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":296218,"byte_end":296227,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":296416,"byte_end":296425,"line_start":90,"line_end":90,"column_start":36,"column_end":45},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4072},"to":{"krate":0,"index":2768}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":296796,"byte_end":296801,"line_start":103,"line_end":103,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":2786}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":300237,"byte_end":300240,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":6345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":300911,"byte_end":300914,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":301812,"byte_end":301815,"line_start":263,"line_end":263,"column_start":16,"column_end":19},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":6345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":303000,"byte_end":303003,"line_start":308,"line_end":308,"column_start":12,"column_end":15},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":6345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":307564,"byte_end":307567,"line_start":439,"line_end":439,"column_start":17,"column_end":20},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/zip/mod.rs","byte_start":326335,"byte_end":326344,"line_start":933,"line_end":933,"column_start":9,"column_end":18},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":383423,"byte_end":383438,"line_start":64,"line_end":64,"column_start":6,"column_end":21},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":384016,"byte_end":384020,"line_start":87,"line_end":87,"column_start":26,"column_end":30},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6933},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":384992,"byte_end":384996,"line_start":126,"line_end":126,"column_start":37,"column_end":41},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6933},"to":{"krate":2,"index":7174}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axes.rs","byte_start":385387,"byte_end":385391,"line_start":144,"line_end":144,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":2974}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/axis.rs","byte_start":387134,"byte_end":387138,"line_start":29,"line_end":29,"column_start":6,"column_end":10},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/broadcast.rs","byte_start":388815,"byte_end":388816,"line_start":45,"line_end":45,"column_start":34,"column_end":35},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3023},"to":{"krate":0,"index":3019}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":393642,"byte_end":393644,"line_start":47,"line_end":47,"column_start":24,"column_end":26},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4053},"to":{"krate":0,"index":3061}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":393779,"byte_end":393780,"line_start":55,"line_end":55,"column_start":27,"column_end":28},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":3068},"to":{"krate":0,"index":3061}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":393930,"byte_end":393939,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7424},"to":{"krate":0,"index":3061}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/conversion.rs","byte_start":394084,"byte_end":394087,"line_start":74,"line_end":74,"column_start":24,"column_end":27},"kind":{"Impl":{"id":356}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":3061}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":397504,"byte_end":397507,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":398005,"byte_end":398008,"line_start":67,"line_end":67,"column_start":34,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7269},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dim.rs","byte_start":398133,"byte_end":398136,"line_start":76,"line_end":76,"column_start":24,"column_end":27},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7269},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402027,"byte_end":402032,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402039,"byte_end":402041,"line_start":33,"line_end":33,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2509},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402048,"byte_end":402053,"line_start":34,"line_end":34,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402060,"byte_end":402064,"line_start":35,"line_end":35,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402071,"byte_end":402075,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402082,"byte_end":402089,"line_start":37,"line_end":37,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402096,"byte_end":402104,"line_start":38,"line_end":38,"column_start":7,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":3153},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402134,"byte_end":402137,"line_start":39,"line_end":39,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2920},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402165,"byte_end":402174,"line_start":40,"line_end":40,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2951},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402189,"byte_end":402198,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2951},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402215,"byte_end":402218,"line_start":42,"line_end":42,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2925},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402246,"byte_end":402255,"line_start":43,"line_end":43,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2955},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402270,"byte_end":402279,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2955},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402296,"byte_end":402299,"line_start":45,"line_end":45,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402328,"byte_end":402331,"line_start":46,"line_end":46,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402359,"byte_end":402368,"line_start":47,"line_end":47,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2959},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402383,"byte_end":402392,"line_start":48,"line_end":48,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2959},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402409,"byte_end":402418,"line_start":49,"line_end":49,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2959},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402432,"byte_end":402438,"line_start":50,"line_end":50,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3019},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402463,"byte_end":402469,"line_start":51,"line_end":51,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3019},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402495,"byte_end":402501,"line_start":52,"line_end":52,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3019},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402529,"byte_end":402535,"line_start":53,"line_end":53,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3019},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402585,"byte_end":402591,"line_start":54,"line_end":54,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3019},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402663,"byte_end":402669,"line_start":55,"line_end":55,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3612},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402682,"byte_end":402688,"line_start":56,"line_end":56,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3612},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402725,"byte_end":402731,"line_start":57,"line_end":57,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3612},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402767,"byte_end":402773,"line_start":58,"line_end":58,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3612},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402800,"byte_end":402806,"line_start":59,"line_end":59,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3612},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":402856,"byte_end":402862,"line_start":60,"line_end":60,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":3612},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":413118,"byte_end":413121,"line_start":392,"line_end":392,"column_start":20,"column_end":23},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7269},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":414019,"byte_end":414022,"line_start":435,"line_end":435,"column_start":20,"column_end":23},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":7269},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":416529,"byte_end":416532,"line_start":550,"line_end":550,"column_start":20,"column_end":23},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7269},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":420209,"byte_end":420212,"line_start":706,"line_end":706,"column_start":20,"column_end":23},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":7269},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":425225,"byte_end":425230,"line_start":878,"line_end":878,"column_start":20,"column_end":25},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":190},"to":{"krate":0,"index":3253}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":426309,"byte_end":426312,"line_start":931,"line_end":931,"column_start":23,"column_end":26},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7269},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dimension_trait.rs","byte_start":426494,"byte_end":426497,"line_start":938,"line_end":938,"column_start":26,"column_end":29},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7269},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":426937,"byte_end":426946,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":427292,"byte_end":427301,"line_start":29,"line_end":29,"column_start":22,"column_end":31},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":427701,"byte_end":427710,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":427827,"byte_end":427836,"line_start":50,"line_end":50,"column_start":22,"column_end":31},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":7411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":428133,"byte_end":428142,"line_start":62,"line_end":62,"column_start":22,"column_end":31},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":7411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":428384,"byte_end":428393,"line_start":73,"line_end":73,"column_start":15,"column_end":24},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":7411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":428589,"byte_end":428598,"line_start":83,"line_end":83,"column_start":25,"column_end":34},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":428806,"byte_end":428815,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":428856,"byte_end":428865,"line_start":94,"line_end":94,"column_start":34,"column_end":43},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":429301,"byte_end":429310,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":429726,"byte_end":429735,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431060,"byte_end":431069,"line_start":161,"line_end":161,"column_start":29,"column_end":38},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7424},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431198,"byte_end":431207,"line_start":168,"line_end":168,"column_start":24,"column_end":33},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7424},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431337,"byte_end":431346,"line_start":175,"line_end":175,"column_start":22,"column_end":31},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7424},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431526,"byte_end":431535,"line_start":185,"line_end":185,"column_start":25,"column_end":34},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":7424},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431679,"byte_end":431688,"line_start":194,"line_end":194,"column_start":16,"column_end":25},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7424},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":431803,"byte_end":431812,"line_start":202,"line_end":202,"column_start":19,"column_end":28},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7424},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":432135,"byte_end":432138,"line_start":218,"line_end":218,"column_start":21,"column_end":24},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":7269},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/dynindeximpl.rs","byte_start":432314,"byte_end":432319,"line_start":225,"line_end":225,"column_start":6,"column_end":11},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":433126,"byte_end":433131,"line_start":21,"line_end":21,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":3565}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":433326,"byte_end":433327,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":3570},"to":{"krate":0,"index":3565}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":435513,"byte_end":435515,"line_start":100,"line_end":100,"column_start":30,"column_end":32},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":4053},"to":{"krate":0,"index":3565}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ndindex.rs","byte_start":435832,"byte_end":435834,"line_start":111,"line_end":111,"column_start":32,"column_end":34},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4053},"to":{"krate":0,"index":3565}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ops.rs","byte_start":440423,"byte_end":440426,"line_start":30,"line_end":30,"column_start":34,"column_end":37},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":176},"to":{"krate":0,"index":3612}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/ops.rs","byte_start":442190,"byte_end":442195,"line_start":88,"line_end":88,"column_start":34,"column_end":39},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":190},"to":{"krate":0,"index":3612}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":442841,"byte_end":442850,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":3253},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":442932,"byte_end":442935,"line_start":19,"line_end":19,"column_start":21,"column_end":24},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7269},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/remove_axis.rs","byte_start":443102,"byte_end":443105,"line_start":27,"line_end":27,"column_start":21,"column_end":24},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7269},"to":{"krate":0,"index":3643}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":454369,"byte_end":454376,"line_start":9,"line_end":9,"column_start":26,"column_end":33},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":3696},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":454550,"byte_end":454557,"line_start":21,"line_end":21,"column_start":26,"column_end":33},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":3696},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":454738,"byte_end":454745,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":3696},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":454913,"byte_end":454920,"line_start":43,"line_end":43,"column_start":26,"column_end":33},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":3700},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455111,"byte_end":455118,"line_start":55,"line_end":55,"column_start":26,"column_end":33},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":3700},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455316,"byte_end":455323,"line_start":67,"line_end":67,"column_start":29,"column_end":36},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":3700},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455582,"byte_end":455587,"line_start":79,"line_end":79,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":3149},"to":{"krate":0,"index":3726}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455713,"byte_end":455721,"line_start":84,"line_end":84,"column_start":45,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":3726},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455724,"byte_end":455732,"line_start":84,"line_end":84,"column_start":56,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":3153},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455766,"byte_end":455773,"line_start":86,"line_end":86,"column_start":22,"column_end":29},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":3696},"to":{"krate":0,"index":3726}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":455882,"byte_end":455889,"line_start":91,"line_end":91,"column_start":22,"column_end":29},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":3696},"to":{"krate":0,"index":3726}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":456005,"byte_end":456012,"line_start":96,"line_end":96,"column_start":25,"column_end":32},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":3696},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":456066,"byte_end":456073,"line_start":98,"line_end":98,"column_start":22,"column_end":29},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":3700},"to":{"krate":0,"index":3726}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":456182,"byte_end":456189,"line_start":103,"line_end":103,"column_start":22,"column_end":29},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":3700},"to":{"krate":0,"index":3726}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/sequence.rs","byte_start":456305,"byte_end":456312,"line_start":108,"line_end":108,"column_start":25,"column_end":32},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":3700},"to":{"krate":0,"index":3728}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/dimension/mod.rs","byte_start":352690,"byte_end":352691,"line_start":321,"line_end":321,"column_start":26,"column_end":27},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":3775}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":52759,"byte_end":52771,"line_start":1458,"line_end":1458,"column_start":19,"column_end":31},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":7754},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53233,"byte_end":53244,"line_start":1475,"line_end":1475,"column_start":9,"column_end":20},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":7761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":53699,"byte_end":53707,"line_start":1493,"line_end":1493,"column_start":9,"column_end":17},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":7769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54090,"byte_end":54097,"line_start":1511,"line_end":1511,"column_start":13,"column_end":20},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_clone.rs","byte_start":458407,"byte_end":458416,"line_start":12,"line_end":12,"column_start":43,"column_end":52},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_clone.rs","byte_start":459306,"byte_end":459315,"line_start":38,"line_end":38,"column_start":48,"column_end":57},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_internal_constructors.rs","byte_start":459776,"byte_end":459785,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_internal_constructors.rs","byte_start":460468,"byte_end":460477,"line_start":39,"line_end":39,"column_start":15,"column_end":24},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":462537,"byte_end":462546,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":467467,"byte_end":467476,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":470133,"byte_end":470142,"line_start":278,"line_end":278,"column_start":15,"column_end":24},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_constructors.rs","byte_start":483796,"byte_end":483805,"line_start":651,"line_end":651,"column_start":15,"column_end":24},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_methods.rs","byte_start":485967,"byte_end":485976,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":579546,"byte_end":579551,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":4065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":580950,"byte_end":580955,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":581478,"byte_end":581483,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":4065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":585312,"byte_end":585317,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":4065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_owned_array.rs","byte_start":604471,"byte_end":604483,"line_start":631,"line_end":631,"column_start":30,"column_end":42},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":4743},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_special_element_types.rs","byte_start":611621,"byte_end":611630,"line_start":20,"line_end":20,"column_start":15,"column_end":24},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/lib.rs","byte_start":54933,"byte_end":54942,"line_start":1542,"line_end":1542,"column_start":15,"column_end":24},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_1d.rs","byte_start":613234,"byte_end":613243,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_2d.rs","byte_start":615268,"byte_end":615277,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_dyn.rs","byte_start":618645,"byte_end":618654,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/numeric/impl_numeric.rs","byte_start":620777,"byte_end":620786,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":635021,"byte_end":635030,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":639388,"byte_end":639397,"line_start":170,"line_end":170,"column_start":44,"column_end":53},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":4055},"to":{"krate":0,"index":4915}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640021,"byte_end":640030,"line_start":191,"line_end":191,"column_start":44,"column_end":53},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":4055},"to":{"krate":0,"index":4915}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":640584,"byte_end":640593,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":641859,"byte_end":641868,"line_start":254,"line_end":254,"column_start":44,"column_end":53},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":4055},"to":{"krate":0,"index":4915}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":643761,"byte_end":643770,"line_start":314,"line_end":314,"column_start":44,"column_end":53},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":4055},"to":{"krate":0,"index":4915}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/linalg/impl_linalg.rs","byte_start":644370,"byte_end":644379,"line_start":336,"line_end":336,"column_start":15,"column_end":24},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":4055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":661937,"byte_end":661942,"line_start":34,"line_end":34,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2474},"to":{"krate":0,"index":4996}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":662424,"byte_end":662431,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":452}},"from":{"krate":20,"index":523},"to":{"krate":0,"index":4996}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":662463,"byte_end":662470,"line_start":51,"line_end":51,"column_start":24,"column_end":31},"kind":{"Impl":{"id":453}},"from":{"krate":20,"index":523},"to":{"krate":0,"index":4996}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":673532,"byte_end":673541,"line_start":368,"line_end":368,"column_start":27,"column_end":36},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2947}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_ops.rs","byte_start":674343,"byte_end":674352,"line_start":398,"line_end":398,"column_start":27,"column_end":36},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":4055},"to":{"krate":2,"index":2972}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":678692,"byte_end":678701,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":4072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":682732,"byte_end":682744,"line_start":116,"line_end":116,"column_start":16,"column_end":28},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":687015,"byte_end":687024,"line_start":222,"line_end":222,"column_start":16,"column_end":25},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":4072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/constructors.rs","byte_start":687859,"byte_end":687871,"line_start":245,"line_end":245,"column_start":16,"column_end":28},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":689391,"byte_end":689400,"line_start":21,"line_end":21,"column_start":16,"column_end":25},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":4072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":690610,"byte_end":690619,"line_start":59,"line_end":59,"column_start":13,"column_end":22},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":4072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":691487,"byte_end":691499,"line_start":88,"line_end":88,"column_start":13,"column_end":25},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":692168,"byte_end":692180,"line_start":110,"line_end":110,"column_start":16,"column_end":28},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":694512,"byte_end":694521,"line_start":161,"line_end":161,"column_start":16,"column_end":25},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":4072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/conversions.rs","byte_start":695235,"byte_end":695247,"line_start":190,"line_end":190,"column_start":16,"column_end":28},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/indexing.rs","byte_start":701918,"byte_end":701930,"line_start":145,"line_end":145,"column_start":38,"column_end":50},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":4076},"to":{"krate":0,"index":5226}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":704330,"byte_end":704339,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":4072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_views/splitting.rs","byte_start":708426,"byte_end":708438,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":710154,"byte_end":710166,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":4080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_raw_views.rs","byte_start":715967,"byte_end":715982,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":4083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_cow.rs","byte_start":722552,"byte_end":722560,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":4068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_cow.rs","byte_start":722916,"byte_end":722924,"line_start":31,"line_end":31,"column_start":46,"column_end":54},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":4068},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/egeatesalp/.cargo/registry/src/github.com-1ecc6299db9ec823/ndarray-0.15.3/src/impl_cow.rs","byte_start":723268,"byte_end":723276,"line_start":44,"line_end":44,"column_start":38,"column_end":46},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":4068},"to":{"krate":2,"index":2759}}]}